% Encoding: UTF-8

@preamble{"\providecommand{\dhyphen}{-}
\providecommand{\csfmt}[1]{\texttt{\glsbackslash #1}}%
\providecommand{\derivfn}[1]{f'(#1)}"}

@abbreviation{IETF,
 short = {IETF},
 long = {Internet Engineering Task Force}
}

@abbreviation{JVM,
 short = {JVM},
 long = {Java Virtual Machine}
}

@abbreviation{JRE,
 short = {JRE},
 long = {Java Runtime Environment}
}

@abbreviation{TUG,
 short = {TUG},
 long = {{}\TeX\ Users Group}
}

@abbreviation{CLDR,
 short = {CLDR},
 long = {Unicode Common Locale Data Repository}
}

@abbreviation{SIunit,
 short = {SI unit},
 long = {International System of Units},
 longplural = {International System of Units},
 category={common}
}

@abbreviation{ASCII,
  short = {ASCII},
  long = {American Standard Code for Information Interchange},
  category={common}
}

@abbreviation{encap,
  short = {encap},
  long = {encapsulating command},
  category = {common}
}

@dualindexentry{bibglsnewentry,
  name={\csfmt{bib\-gls\-new\-entry}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{entry}},
  category={command}
}

@dualindexentry{bibglsnewsymbol,
  name={\csfmt{bib\-gls\-new\-symbol}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{symbol}},
  category={command}
}

@dualindexentry{bibglsnewnumber,
  name={\csfmt{bib\-gls\-new\-number}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{number}},
  category={command}
}

@dualindexentry{bibglsnewindex,
  name={\csfmt{bib\-gls\-new\-index}},
  user1={\margm{label}\margm{options}},
  description={defines terms provided with \atentry{index}},
  category={command}
}

@dualindexentry{bibglsnewindexplural,
  name={\csfmt{bib\-gls\-new\-index\-plural}},
  user1={\margm{label}\margm{options}\margm{name}},
  description={defines terms provided with \atentry{index}},
  category={command}
}

@dualindexentry{bibglsnewabbreviation,
  name={\csfmt{bib\-gls\-new\-abbreviation}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}},
  description={defines terms provided with \atentry{abbreviation}},
  category={command}
}

@dualindexentry{bibglsnewacronym,
  name={\csfmt{bib\-gls\-new\-acronym}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}},
  description={defines terms provided with \atentry{acronym}},
  category={command}
}

@dualindexentry{bibglsnewdualentry,
  name={\csfmt{bib\-gls\-new\-dual\-entry}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{dualentry}},
  category={command}
}

@dualindexentry{bibglsnewdualindexentry,
  name={\csfmt{bib\-gls\-new\-dual\-index\-entry}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines primary terms provided with
\atentry{dualindexentry}},
  category={command}
}

@dualindexentry{bibglsnewdualindexentrysecondary,
  name={\csfmt{bib\-gls\-new\-dual\-index\-entry\-secondary}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines secondary terms provided with
\atentry{dualindexentry}},
  category={command}
}

@dualindexentry{bibglsnewdualindexsymbol,
  name={\csfmt{bib\-gls\-new\-dual\-index\-symbol}},
  user1={\margm{label}\margm{options}\margm{name}\margm{symbol}\margm{description}},
  description={defines primary terms provided with
\atentry{dualindexsymbol}},
  category={command}
}

@dualindexentry{bibglsnewdualindexsymbolsecondary,
  name={\csfmt{bib\-gls\-new\-dual\-index\-symbol\-secondary}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines secondary terms provided with
\atentry{dualindexsymbol}},
  category={command}
}

@dualindexentry{bibglsnewdualindexnumber,
  name={\csfmt{bib\-gls\-new\-dual\-index\-number}},
  user1={\margm{label}\margm{options}\margm{name}\margm{symbol}\margm{description}},
  description={defines primary terms provided with
\atentry{dualindexnumber}},
  category={command}
}

@dualindexentry{bibglsnewdualindexnumbersecondary,
  name={\csfmt{bib\-gls\-new\-dual\-index\-number\-secondary}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines secondary terms provided with
\atentry{dualindexnumber}},
  category={command}
}

@dualindexentry{bibglsnewdualindexabbreviation,
  name={\csfmt{bib\-gls\-new\-dual\-index\-abbre\-via\-tion}},
  user1={\margm{label}\margm{dual-label}\margm{options}\margm{name}\margm{short}\margm{long}\margm{description}},
  description={defines primary terms provided with
\atentry{dualindexabbreviation}},
  category={command}
}

@dualindexentry{bibglsnewdualindexabbreviationsecondary,
  name={\csfmt{bib\-gls\-new\-dual\-index\-abbre\-via\-tion\-sec\-ond\-ary}},
  user1={\margm{label}\margm{options}\margm{name}\margm{short}\margm{long}\margm{description}},
  description={defines secondary terms provided with
\atentry{dualindexabbreviation}},
  category={command}
}

@dualindexentry{bibglsnewdualabbreviationentry,
  name={\csfmt{bib\-gls\-new\-dual\-abbre\-via\-tion\-entry}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}\margm{description}},
  description={defines primary terms provided with
\atentry{dualabbreviationentry}},
  category={command}
}

@dualindexentry{bibglsnewdualabbreviationentrysecondary,
  name={\csfmt{bib\-gls\-new\-dual\-abbre\-via\-tion\-entry\-sec\-ond\-ary}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}\margm{description}},
  description={defines secondary terms provided with
\atentry{dualabbreviationentry}},
  category={command}
}

@dualindexentry{bibglsnewdualentryabbreviation,
  name={\csfmt{bib\-gls\-new\-dual\-entry\-abbre\-via\-tion}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}\margm{description}},
  description={defines primary terms provided with (deprecated)
\atentry{dualentryabbreviation}},
  category={command}
}

@dualindexentry{bibglsnewdualentryabbreviationsecondary,
  name={\csfmt{bib\-gls\-new\-dual\-entry\-abbre\-via\-tion\-sec\-ond\-ary}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}\margm{description}},
  description={defines secondary terms provided with (deprecated)
\atentry{dualentryabbreviation}},
  category={command}
}

@dualindexentry{bibglsnewdualsymbol,
  name={\csfmt{bib\-gls\-new\-dual\-symbol}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{dualsymbol}},
  category={command}
}

@dualindexentry{bibglsnewdualnumber,
  name={\csfmt{bib\-gls\-new\-dual\-number}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{dualnumber}},
  category={command}
}

@dualindexentry{bibglsnewdualabbreviation,
  name={\csfmt{bib\-gls\-new\-dual\-abbre\-via\-tion}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}},
  description={defines terms provided with
\atentry{dualabbreviation}},
  category={command}
}

@dualindexentry{bibglsnewdualacronym,
  name={\csfmt{bib\-gls\-new\-dual\-acronym}},
  user1={\margm{label}\margm{options}\margm{short}\margm{long}},
  description={defines terms provided with \atentry{dualacronym}},
  category={command}
}

@dualindexentry{bibglsnewtertiaryindexabbreviationentry,
  name={\csfmt{bib\-gls\-new\-tert\-iary\-index\-abbre\-via\-tion\-entry}},
  user1={\margm{label}\margm{dual-label}\margm{options}\margm{name}\margm{short}\margm{long}\margm{description}},
  description={defines primary terms provided with
\atentry{tertiaryindexabbreviationentry}},
  category={command}
}

@dualindexentry{bibglsnewtertiaryindexabbreviationentrysecondary,
  name={\csfmt{bib\-gls\-new\-tert\-iary\-index\-abbre\-via\-tion\-entry\-sec\-ond\-ary}},
  user1={\margm{label}\margm{tertiary-label}\margm{options}\margm{tertiary-opts}\margm{primary-name}\margm{short}\margm{long}\margm{description}},
  description={defines secondary and tertiary terms provided with
\atentry{tertiaryindexabbreviationentry}},
  category={command}
}

@dualindexentry{bibglsnewbibtexentry,
  name={\csfmt{bib\-gls\-new\-bib\-tex\-entry}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with \atentry{bibtexentry}},
  category={command}
}

@dualindexentry{bibglsnewcontributor,
  name={\csfmt{bib\-gls\-new\-con\-trib\-u\-tor}},
  user1={\margm{label}\margm{options}\margm{name}\margm{description}},
  description={defines terms provided with
   \atentry{contributor}},
  category={command}
}

@dualindexentry{bibglsuselongfont,
  name={\csfmt{bib\-gls\-use\-long\-font}},
  user1={\margm{text}\margm{category}},
  description={ensures that the given text is formatted according to
    the given category's long format},
  category={command}
}

@index{glsuselongfont,
  name={\csfmt{gls\-use\-long\-font}},
  user1={\margm{text}\margm{category}},
  description={applies the formatting command used for the long
   form for the abbreviation style associated with the given category},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{GlsXtrAutoAddOnFormat,
  name={\csfmt{GlsXtrAutoAddOnFormat}},
  user1={\oargm{label}\margm{format list}\margm{glsadd options}},
  description={makes commands like \cs{gls} and \cs{glslink}
   (but not \cs{glsadd}) automatically insert \cs{glsadd}\oargm{glsadd
   options}\margm{label} if the format (supplied in the optional
   argument of the invoking \cs{gls}, \cs{glslink} etc) matches any in the given
   comma-separated elements of \meta{format list}. The format isn't automatically
   applied to the \cs{glsadd} options},
  note={\styfmt{glossaries-extra} v1.37+},
  category={command}
}

@dualindexentry{bibglsuseabbrvfont,
  name={\csfmt{bib\-gls\-use\-abbrv\-font}},
  user1={\margm{text}\margm{category}},
  description={ensures that the given text is formatted according to
    the given category's short format},
  category={command}
}

@index{glsuseabbrvfont,
  name={\csfmt{gls\-use\-abbrv\-font}},
  user1={\margm{text}\margm{category}},
  description={applies the formatting command used for the short
   form for the abbreviation style associated with the given category},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@dualindexentry{bibglsseesep,
  name={\csfmt{bib\-gls\-see\-sep}},
  user1={},
  description={separator between \field{see} 
   cross-references and location list},
  category={command}
}

@dualindexentry{bibglsaliassep,
  name={\csfmt{bib\-gls\-alias\-sep}},
  user1={},
  description={separator between \field{alias} 
   cross-reference and location list},
  category={command}
}
@dualindexentry{bibglsseealsosep,
  name={\csfmt{bib\-gls\-see\-also\-sep}},
  user1={},
  description={separator between \field{seealso} 
   cross-references and location list},
  category={command}
}

@dualindexentry{bibglspassim,
  name={\csfmt{bib\-gls\-passim}},
  user1={},
  description={passim range suffix},
  category={command}
}

@dualindexentry{bibglspassimname,
  name={\csfmt{bib\-gls\-passim\-name}},
  user1={},
  description={name used by passim range suffix},
  category={command}
}

@dualindexentry{bibglsusesee,
  name={\csfmt{bib\-gls\-use\-see}},
  user1={\margm{label}},
  description={display cross-reference list for given entry},
  category={command}
}

@dualindexentry{bibglsusealias,
  name={\csfmt{bib\-gls\-use\-alias}},
  user1={\margm{label}},
  description={display cross-reference list for given entry},
  category={command}
}
@dualindexentry{bibglsuseseealso,
  name={\csfmt{bib\-gls\-use\-see\-also}},
  user1={\margm{label}},
  description={display cross-reference list for given entry},
  category={command}
}

@dualindexentry{bibglsdelimN,
  name={\csfmt{bib\-gls\-delimN}},
  user1={},
  description={delimit individual locations (except last)},
  seealso={bibglslastDelimN},
  category={command}
}

@dualindexentry{bibglslastDelimN,
  name={\csfmt{bib\-gls\-last\-DelimN}},
  user1={},
  description={delimit last location},
  seealso={bibglsdelimN},
  category={command}
}

@dualindexentry{bibglsrange,
  name={\csfmt{bib\-gls\-range}},
  user1={\marg{\meta{start}\cs{delimR} \meta{end}}},
  description={Explicit range format},
  category={command}
}

@dualindexentry{bibglsinterloper,
  name={\csfmt{bib\-gls\-inter\-loper}},
  user1={\margm{location}},
  description={interloper location format},
  category={command}
}

@dualindexentry{bibglspostlocprefix,
  name={\csfmt{bib\-gls\-post\-loc\-prefix}},
  user1={},
  description={location list post prefix},
  category={command}
}

@dualindexentry{bibglslocprefix,
  name={\csfmt{bib\-gls\-loc\-prefix}},
  user1={\margm{n}},
  description={location list prefix},
  category={command}
}

@dualindexentry{bibglsprimary,
  name={\csfmt{bib\-gls\-primary}},
  user1={\margm{n}\margm{locations}},
  description={location list encapsulator used in the
\field{primarylocations} field},
  category={command}
}

@dualindexentry{bibglspagename,
  name={\csfmt{bib\-gls\-page\-name}},
  user1={},
  description={name used for single page},
  category={command}
}

@dualindexentry{bibglspagesname,
  name={\csfmt{bib\-gls\-pages\-name}},
  user1={},
  description={name used for multiple pages},
  category={command}
}

@dualindexentry{bibglslocsuffix,
  name={\csfmt{bib\-gls\-loc\-suffix}},
  user1={\margm{n}},
  description={location list suffix},
  category={command}
}

@dualindexentry{bibglshyperlink,
  name={\csfmt{bib\-gls\-hyper\-link}},
  user1={\margm{text}\margm{label}},
  description={displays \meta{text} with a hyperlink to the entry
   given by \meta{label}, if supported},
  category={command}
}

@dualindexentry{bibglslocationgroup,
  name={\csfmt{bib\-gls\-location\-group}},
  user1={\margm{n}\margm{counter}\margm{list}},
  description={location group encapsulator},
  category={command}
}

@dualindexentry{bibglslocationgroupsep,
  name={\csfmt{bib\-gls\-location\-group\-sep}},
  user1={},
  description={location group separator},
  category={command}
}

@dualindexentry{bibglssupplemental,
  name={\csfmt{bib\-gls\-supple\-mental}},
  user1={\margm{n}\margm{list}},
  description={supplemental list encapsulator},
  category={command}
}

@dualindexentry{bibglssupplementalsep,
  name={\csfmt{bib\-gls\-supple\-mental\-sep}},
  user1={},
  description={separator between main and supplementary locations},
  category={command}
}

@dualindexentry{bibglssupplementalsublist,
  name={\csfmt{bib\-gls\-supple\-mental\-sub\-list}},
  user1={\margm{n}\margm{external document}\margm{list}},
  description={supplemental sub-list encapsulator},
  category={command}
}

@dualindexentry{bibglssupplementalsubsep,
  name={\csfmt{bib\-gls\-supple\-mental\-sub\-sep}},
  user1={},
  description={separator between supplementary sub-lists},
  category={command}
}

@dualindexentry{glsgroupheading,
  name={\csfmt{gls\-group\-heading}},
  user1={\margm{label}},
  description={formats the heading for the group identified by the
given label},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{bibglssetlastgrouptitle,
  name={\csfmt{bib\-gls\-set\-last\-group\-title}},
  user1={\margm{cs}\margm{group specs}},
  description={sets the last group title},
  category={command}
}

@dualindexentry{bibglssetlettergrouptitle,
  name={\csfmt{bib\-gls\-set\-letter\-group\-title}},
  user1={\marg{\margm{title}\margm{letter}\margm{id}\margm{type}}},
  description={sets the letter group title},
  category={command}
}

@dualindexentry{glsxtrsetgrouptitle,
  name={\csfmt{gls\-xtr\-set\-group\-title}},
  user1={\margm{group label}\margm{group title}},
  description={globally sets the title for the group identified by the given label},
  note={\styfmt{glossaries-extra} v1.14+},
  category={command}
}

@dualindexentry{glsxtrlocalsetgrouptitle,
  name={\csfmt{gls\-xtr\-local\-set\-group\-title}},
  user1={\margm{group label}\margm{group title}},
  description={locally sets the title for the group identified by the given label},
  note={\styfmt{glossaries-extra} v1.24+},
  category={command}
}

@dualindexentry{bibglslettergroup,
  name={\csfmt{bib\-gls\-letter\-group}},
  user1={\margm{title}\margm{letter}\margm{id}\margm{type}},
  description={expands to the letter group label},
  category={command}
}

@dualindexentry{bibglslettergrouptitle,
  name={\csfmt{bib\-gls\-letter\-group\-title}},
  user1={\margm{title}\margm{letter}\margm{id}\margm{type}},
  description={expands to the letter group title},
  category={command}
}

@dualindexentry{bibglssetothergrouptitle,
  name={\csfmt{bib\-gls\-set\-other\-group\-title}},
  user1={\marg{\margm{character}\margm{id}\margm{type}}},
  description={sets the non-letter group title},
  category={command}
}

@dualindexentry{bibglsothergroup,
  name={\csfmt{bib\-gls\-other\-group}},
  user1={\margm{character}\margm{id}\margm{type}},
  description={expands to the non-letter group label},
  category={command}
}

@dualindexentry{bibglsothergrouptitle,
  name={\csfmt{bib\-gls\-other\-group\-title}},
  user1={\margm{character}\margm{id}\margm{type}},
  description={expands to the non-letter group title},
  category={command}
}

@dualindexentry{bibglssetemptygrouptitle,
  name={\csfmt{bib\-gls\-set\-empty\-group\-title}},
  user1={\marg{\margm{type}}},
  description={sets the empty group title},
  category={command}
}

@dualindexentry{bibglsemptygroup,
  name={\csfmt{bib\-gls\-empty\-group}},
  user1={\margm{type}},
  description={expands to the empty group label},
  category={command}
}

@dualindexentry{bibglsemptygrouptitle,
  name={\csfmt{bib\-gls\-empty\-group\-title}},
  user1={\margm{type}},
  description={expands to the empty group title},
  category={command}
}

@dualindexentry{bibglssetunicodegrouptitle,
  name={\csfmt{bib\-gls\-set\-unicode\-group\-title}},
  user1={\marg{\margm{label}\margm{character}\margm{id}\margm{type}}},
  description={sets the Unicode script, category or character code
title},
  category={command}
}

@dualindexentry{bibglsunicodegroup,
  name={\csfmt{bib\-gls\-unicode\-group}},
  user1={\margm{label}\margm{character}\margm{id}\margm{type}},
  description={expands to the Unicode script or category label or
character code},
  category={command}
}

@dualindexentry{bibglsunicodegrouptitle,
  name={\csfmt{bib\-gls\-unicode\-group\-title}},
  user1={\margm{label}\margm{character}\margm{id}\margm{type}},
  description={expands to the Unicode script or category label or
character code},
  category={command}
}

@dualindexentry{bibglssetnumbergrouptitle,
  name={\csfmt{bib\-gls\-set\-number\-group\-title}},
  user1={\marg{\margm{value}\margm{id}\margm{type}}},
  description={sets the number group title},
  category={command}
}

@dualindexentry{bibglsnumbergroup,
  name={\csfmt{bib\-gls\-number\-group}},
  user1={\margm{value}\margm{id}\margm{type}},
  description={expands to the number group label},
  category={command}
}

@dualindexentry{bibglsnumbergrouptitle,
  name={\csfmt{bib\-gls\-number\-group\-title}},
  user1={\margm{value}\margm{id}\margm{type}},
  description={expands to the number group title},
  category={command}
}

@dualindexentry{bibglsdatetimegroup,
  name={\csfmt{bib\-gls\-date\-time\-group}},
  user1={\margm{YYYY}\margm{MM}\margm{DD}\margm{hh}\margm{mm}\margm{ss}\margm{zone}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the date-time group label},
  category={command}
}

@dualindexentry{bibglsdatetimegrouptitle,
  name={\csfmt{bib\-gls\-date\-time\-group\-title}},
  user1={\margm{YYYY}\margm{MM}\margm{DD}\margm{hh}\margm{mm}\margm{ss}\margm{zone}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the date-time group title},
  category={command}
}

@dualindexentry{bibglsdategroup,
  name={\csfmt{bib\-gls\-date\-group}},
  user1={\margm{YYYY}\margm{MM}\margm{DD}\margm{G}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the date group label},
  category={command}
}

@dualindexentry{bibglsdategrouptitle,
  name={\csfmt{bib\-gls\-date\-group\-title}},
  user1={\margm{YYYY}\margm{MM}\margm{DD}\margm{G}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the date group title},
  category={command}
}

@dualindexentry{bibglstimegroup,
  name={\csfmt{bib\-gls\-time\-group}},
  user1={\margm{hh}\margm{mm}\margm{ss}\margm{zone}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the time group label},
  category={command}
}

@dualindexentry{bibglstimegrouptitle,
  name={\csfmt{bib\-gls\-time\-group\-title}},
  user1={\margm{hh}\margm{mm}\margm{ss}\margm{zone}\margm{title}\margm{group\dhyphen id}\margm{type}},
  description={expands to the time group title},
  category={command}
}

@dualindexentry{bibglshypergroup,
  name={\csfmt{bib\-gls\-hyper\-group}},
  user1={\margm{type}\margm{group\dhyphen id}},
  description={creates group navigation information},
  category={command}
}

@dualindexentry{bibglsflattenedhomograph,
  name={\csfmt{bib\-gls\-flattened\-homograph}},
  user1={\margm{name}\margm{parent label}},
  description={expands to the flattened entry's new name},
  category={command}
}

@dualindexentry{bibglsflattenedchildpresort,
  name={\csfmt{bib\-gls\-flattened\-child\-pre\-sort}},
  user1={\margm{child name}\margm{parent name}},
  description={expands to the pre-sort flattened child entry's new name},
  category={command}
}

@dualindexentry{bibglsflattenedchildpostsort,
  name={\csfmt{bib\-gls\-flattened\-child\-post\-sort}},
  user1={\margm{parent name}\margm{child name}},
  description={expands to the post-sort flattened child entry's new
name},
  category={command}
}

@dualindexentry{bibglssetwidest,
  name={\csfmt{bib\-gls\-set\-widest}},
  user1={\margm{level}\margm{name}},
  description={sets the widest name},
  category={command}
}

@dualindexentry{bibglssetwidestfortype,
  name={\csfmt{bib\-gls\-set\-widest\-for\-type}},
  user1={\margm{type}\margm{level}\margm{name}},
  description={sets the widest name for the given glossary type},
  category={command}
}

@dualindexentry{bibglssetwidesttoplevelfallback,
  name={\csfmt{bib\-gls\-set\-widest\-top\-level\-fallback}},
  user1={\margm{glossary list}},
  description={fallback used instead of \csref{bibglssetwidest}
   in the event that \bibgls\ can't determine the widest name
   where there are only top level entries,
   where \meta{glossary list} is a comma-separated list
   of glossary labels},
  category={command}
}

@dualindexentry{bibglssetwidestfallback,
  name={\csfmt{bib\-gls\-set\-widest\-fallback}},
  user1={\margm{glossary list}},
  description={fallback used instead of \csref{bibglssetwidest}
   in the event that \bibgls\ can't determine the widest name,
   where \meta{glossary list} is a comma-separated list
   of glossary labels},
  category={command}
}

@dualindexentry{bibglssetwidestfortypefallback,
  name={\csfmt{bib\-gls\-set\-widest\-for\-type\-fallback}},
  user1={\margm{type}},
  description={fallback used instead of \csref{bibglssetwidestfortype}
   in the event that \bibgls\ can't determine the widest name},
  category={command}
}

@dualindexentry{bibglssetwidesttoplevelfortypefallback,
  name={\csfmt{bib\-gls\-set\-widest\-top\-level\-for\-type\-fallback}},
  user1={\margm{type}},
  description={fallback used instead of \csref{bibglssetwidestfortype}
   in the event that \bibgls\ can't determine the widest name
   where there are only top-level entries},
  category={command}
}


@dualindexentry{bibglscontributorlist,
  name={\csfmt{bib\-gls\-contributor\-list}},
  user1={\margm{list}\margm{number}},
  description={used to markup a list of names from a field 
   that was converted from \BibTeX's contributor syntax},
  category={command}
}

@dualindexentry{bibglscontributor,
  name={\csfmt{bib\-gls\-contributor}},
  user1={\margm{forenames}\margm{von-part}\margm{surname}\margm{suffix}},
  description={used to markup a contributor's name that was converted from
   \BibTeX's contributor syntax},
  category={command}
}

@dualindexentry{bibglsdate,
  name={\csfmt{bib\-gls\-date}},
  user1={\margm{year}\margm{month}\margm{day-of-month}\margm{day-of-week}\margm{day-of-year}\margm{era}\margm{original}},
  description={used to markup a date converted from a field value},
  category={command}
}

@dualindexentry{bibglsdatetime,
  name={\csfmt{bib\-gls\-date\-time}},
  user1={\margm{year}\margm{month}\margm{day-of-month}\margm{day-of-week}\margm{day-of-year}\margm{era}\margm{hour}\margm{minute}\margm{second}\margm{millisec}\margm{dst}\margm{zone}\margm{original}},
  description={used to markup a date-time instance converted from a field value},
  category={command}
}

@dualindexentry{bibglsdatetimeremainder,
  name={\csfmt{bib\-gls\-date\-time\-remainder}},
  user1={\margm{millisec}\margm{dst}\margm{zone}\margm{original}},
  description={used internally to pick up the final four arguments of
   \csref{bibglsdatetime}},
  category={command}
}

@dualindexentry{bibglstime,
  name={\csfmt{bib\-gls\-time}},
  user1={\margm{hour}\margm{minute}\margm{second}\margm{millisec}\margm{dst}\margm{zone}\margm{original}},
  description={used to markup a time converted from a field value},
  category={command}
}

@dualindexentry{bibglshashchar,
  name={\csfmt{bib\-gls\-hash\-char}},
  user1={},
  description={expands to a literal hash character},
  category={command}
}

@dualindexentry{bibglsunderscorechar,
  name={\csfmt{bib\-gls\-under\-score\-char}},
  user1={},
  description={expands to a literal underscore character},
  category={command}
}

@dualindexentry{bibglsdollarchar,
  name={\csfmt{bib\-gls\-dollar\-char}},
  user1={},
  description={expands to a literal dollar character},
  category={command}
}

@dualindexentry{bibglsampersandchar,
  name={\csfmt{bib\-gls\-amper\-sand\-char}},
  user1={},
  description={expands to a literal ampersand character},
  category={command}
}

@dualindexentry{bibglscircumchar,
  name={\csfmt{bib\-gls\-circum\-char}},
  user1={},
  description={expands to a literal circumflex character},
  category={command}
}

@dualindexentry{bibglshrefchar,
  name={\csfmt{bib\-gls\-href\-char}},
  user1={\margm{hex}\margm{char}},
  description={expands to a literal percent character followed by
\meta{hex}},
  category={command}
}

@dualindexentry{bibglshrefunicode,
  name={\csfmt{bib\-gls\-href\-unicode}},
  user1={\margm{hex}\margm{char}},
  description={expands to \meta{char} by default},
  category={command}
}

@dualindexentry{bibglsprimaryprefixlabel,
  name={\csfmt{bib\-gls\-primary\-prefix\-label}},
  user1={\margm{prefix}},
  description={hook provided to pick up the primary prefix, if
   required},
  category={command}
}

@dualindexentry{bibglsdualprefixlabel,
  name={\csfmt{bib\-gls\-dual\-prefix\-label}},
  user1={\margm{prefix}},
  description={hook provided to pick up the dual prefix, if
   required},
  category={command}
}

@dualindexentry{bibglstertiaryprefixlabel,
  name={\csfmt{bib\-gls\-tertiary\-prefix\-label}},
  user1={\margm{prefix}},
  description={hook provided to pick up the tertiary prefix, if
   required},
  category={command}
}

@dualindexentry{bibglsexternalprefixlabel,
  name={\csfmt{bib\-gls\-external\-prefix\-label}},
  user1={\margm{n}\margm{prefix}},
  description={hook provided to pick up the \meta{n}th external prefix, if
   required},
  category={command}
}

@dualindexentry{bibglsuppercase,
  name={\csfmt{bib\-gls\-upper\-case}},
  user1={\margm{text}},
  description={converts \meta{text} to \idx{uppercase}},
  category={command}
}

@dualindexentry{bibglslowercase,
  name={\csfmt{bib\-gls\-lower\-case}},
  user1={\margm{text}},
  description={converts \meta{text} to \idx{lowercase}},
  category={command}
}

@dualindexentry{bibglstitlecase,
  name={\csfmt{bib\-gls\-title\-case}},
  user1={\margm{text}},
  description={converts \meta{text} to \idx{titlecase}},
  category={command}
}

@dualindexentry{bibglsfirstuc,
  name={\csfmt{bib\-gls\-first\-uc}},
  user1={\margm{text}},
  description={converts the first letter of \meta{text} to \idx{uppercase}},
  category={command}
}

@dualindexentry{glsexpandfields,
  name={\csfmt{gls\-expand\-fields}},
  user1={},
  description={switches on field expansion},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{glsnoexpandfields,
  name={\csfmt{gls\-no\-expand\-fields}},
  user1={},
  description={switches off field expansion},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{glssetexpandfield,
  name={\csfmt{gls\-set\-expand\-field}},
  user1={\margm{field}},
  description={switches on field expansion for the given field},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{glssetnoexpandfield,
  name={\csfmt{gls\-set\-no\-expand\-field}},
  user1={\margm{field}},
  description={switches off field expansion for the given field},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{newglossaryentry,
  name={\csfmt{new\-glossary\-entry}},
  user1={\margm{label}\margm{\keyvallist}},
  description={defines a new glossary entry},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{longnewglossaryentry,
  name={\csfmt{long\-new\-glossary\-entry}},
  user1={\margm{label}\margm{\keyvallist}\margm{description}},
  description={defines a new glossary entry and appends
   \csfmt{leavemode}\csfmt{unskip}\cs{nopostdesc} at the end of
\meta{description}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{longnewglossaryentry*,
  name={\csfmt{long\-new\-glossary\-entry*}},
  user1={\margm{label}\margm{\keyvallist}\margm{description}},
  description={defines a new glossary entry without appending any
extra code to the end of \meta{description}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@dualindexentry{provideglossaryentry,
  name={\csfmt{provide\-glossary\-entry}},
  user1={\margm{label}\margm{\keyvallist}},
  description={defines a new glossary entry if one doesn't
    already exist with the given label},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{longprovideglossaryentry,
  name={\csfmt{long\-provide\-glossary\-entry}},
  user1={\margm{label}\margm{\keyvallist}\margm{description}},
  description={defines a new glossary entry if one doesn't
    already exist with the given label},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{newterm,
  name={\csfmt{new\-term}},
  user1={\oargm{\keyvallist}\margm{label}},
  description={defines a new glossary entry where the
   \field{description} field defaults to empty},
  note={the \styfmt{glossaries}'s \styopt{index} package
option},
  category={command}
}

@dualindexentry{newabbreviation,
  name={\csfmt{new\-abbre\-vi\-a\-tion}},
  user1={\oargm{\keyvallist}\margm{label}\margm{short}\margm{long}},
  description={defines a new abbreviation},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@dualindexentry{newacronym,
  name={\csfmt{new\-acronym}},
  user1={\oargm{\keyvallist}\margm{label}\margm{short}\margm{long}},
  description={defines a new abbreviation. The
    \styfmt{glossaries-extra} package redefines this to use
    \csref{newabbreviation} with the \field{category} set to 
    \code{acronym}},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{glsxtrnewsymbol,
  name={\csfmt{gls\-xtr\-new\-symbol}},
  user1={\oargm{\keyvallist}\margm{label}\margm{symbol}},
  description={defines a new symbol},
  note={\styfmt{glossaries-extra} \styopt{symbols}},
  category={command}
}

@dualindexentry{glsxtrnewnumber,
  name={\csfmt{gls\-xtr\-new\-number}},
  user1={\oargm{\keyvallist}\margm{label}},
  description={defines a new number},
  note={\styfmt{glossaries-extra} \styopt{numbers}},
  category={command}
}

@dualindexentry{newdualentry,
  name={\csfmt{new\-dual\-entry}},
  user1={\oargm{\keyvallist}\margm{label}\margm{short}\margm{long}\margm{description}},
  description={example given in \styfmt{glossaries} user manual},
  category={command}
}

@dualindexentry{@gls@hypergroup,
  name={\csfmt{@gls@hypergroup}},
  user1={\margm{type}\margm{group id}},
  description={command written to the \ext{aux} file that identifies that the given group was used in the
   glossary on the previous run},
  note={\styfmt{glossary-hypernav}},
  category={command}
}

@dualindexentry{glsxtr@resource,
  name={\csfmt{glsxtr@resource}},
  user1={\margm{options}\margm{filename}},
  description={this internal command is written to the \ext{aux}
file by \csref{glsxtrresourcefile}
   to provide \bibgls\ with the resource information},
  note={\styfmt{glossaries-extra} v1.08+},
  category={command}
}

@dualindexentry{glsxtr@wrglossarylocation,
  name={\csfmt{gls\-xtr\-@wr\-glossary\-location}},
  user1={\margm{n}\margm{page}},
  description={This command simply expands to \meta{n}, the value of
the \counter{wrglossary} counter for the given page},
  note={\styfmt{glossaries-extra-bib2gls} v1.29+},
  category={command}
}

@dualindexentry{GlsXtrIndexCounterLink,
  name={\csfmt{Gls\-Xtr\-Index\-Counter\-Link}},
  user1={\margm{text}\margm{label}},
  description={Creates a hyperlink to the \counter{wrglossary}
location obtained from the \field{indexcounter} field},
  note={\styfmt{glossaries-extra-bib2gls} v1.29+},
  category={command}
}

@dualindexentry{GlsXtrDualBackLink,
  name={\csfmt{Gls\-Xtr\-Dual\-Back\-Link}},
  user1={\margm{text}\margm{label}},
  description={Creates a hyperlink to the dual entry whose label is
   obtained from the field given by \csref{GlsXtrDualField}},
  note={\styfmt{glossaries-extra-bib2gls} v1.30+},
  category={command}
}

@dualindexentry{GlsXtrDualField,
  name={\csfmt{Gls\-Xtr\-Dual\-Field}},
  user1={},
  description={The field used to store the dual label. This defaults 
   to \field{dual} but will need to be redefined if a different
   value is given by \csopt{dual-field}},
  note={\styfmt{glossaries-extra-bib2gls} v1.30+},
  category={command}
}

@dualindexentry{glsxtrfmt,
  name={\csfmt{gls\-xtr\-fmt}},
  user1={\oargm{options}\margm{label}\margm{text}},
  description={formats the given text according to the formatting 
   command identified by the value of the field obtained 
   from \cs{GlsXtrFmtField}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@dualindexentry{glsxtrfmt*,
  name={\csfmt{gls\-xtr\-fmt*}},
  user1={\oargm{options}\margm{label}\margm{text}\oargm{insert}},
  description={like \csref{glsxtrfmt} but inserts extra
   material into the link text but outside of the formatting command},
  note={\styfmt{glossaries-extra} v1.23+},
  category={command}
}

@dualindexentry{glsxtrentryfmt,
  name={\csfmt{gls\-xtr\-entry\-fmt}},
  user1={\margm{label}\margm{text}},
  description={alternative to \csref{glsxtrfmt} for use in
    section headings},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glsxtrfmtdisplay,
  name={\csfmt{gls\-xtr\-fmt\-display}},
  user1={\margm{cs-name}\margm{text}\margm{insert}},
  description={used by \csref{glsxtrfmt} to format the given
\meta{text} where \meta{cs-name} is obtained from the field
identified by \cs{GlsXtrFmtField} and \meta{insert} is empty for the
unstarred \csref{glsxtrfmt} and the final optional argument of the
starred version \csref{glsxtrfmt*}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@dualindexentry{glsxtrresourcefile,
  name={\csfmt{gls\-xtr\-resource\-file}},
  user1={\oargm{options}\margm{filename}},
  description={input the \ext{glstex} file created by \bibgls\ and
   write resource instructions to the \ext{aux} file},
  note={\styfmt{glossaries-extra} v1.08+},
  seealso={resourceoptions,GlsXtrLoadResources},
  category={command}
}


@index{resourceoptions,
  name={resource options},
  text={resource option}
}

@dualindexentry{opt.charset,
   name={\csoptfmt{charset}},
   user1={\meta{encoding-name}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.interpret-preamble,
   name={\csoptfmt{interpret\dhyphen preamble}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.interpret-label-fields,
   name={\csoptfmt{interpret\dhyphen label\dhyphen fields}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.primary-dual-dependency,
   name={\csoptfmt{primary\dhyphen dual\dhyphen dependency}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.strip-missing-parents,
   name={\csoptfmt{strip\dhyphen missing\dhyphen parents}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.missing-parents,
   name={\csoptfmt{missing\dhyphen parents}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.missing-parent-category,
   name={\csoptfmt{missing\dhyphen parent\dhyphen category}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.copy-alias-to-see,
   name={\csoptfmt{copy\dhyphen alias\dhyphen to\dhyphen see}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.write-preamble,
   name={\csoptfmt{write\dhyphen preamble}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.set-widest,
   name={\csoptfmt{set\dhyphen widest}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.duplicate-label-suffix,
   name={\csoptfmt{duplicate\dhyphen label\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.entry-type-aliases,
   name={\csoptfmt{entry\dhyphen type\dhyphen aliases}},
   user1={\meta{\keyvallist}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.field-aliases,
   name={\csoptfmt{field\dhyphen aliases}},
   user1={\meta{\keyvallist}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.replicate-fields,
   name={\csoptfmt{replicate\dhyphen fields}},
   user1={\meta{\keyvallist}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.replicate-override,
   name={\csoptfmt{replicate\dhyphen override}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.labelify,
   name={\csoptfmt{labelify}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.labelify-list,
   name={\csoptfmt{labelify\dhyphen list}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.labelify-replace,
   name={\csoptfmt{labelify\dhyphen replace}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-replace,
   name={\csoptfmt{sort\dhyphen replace}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-replace,
   name={\csoptfmt{dual\dhyphen sort\dhyphen replace}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-replace,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen replace}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.action,
   name={\csoptfmt{action}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.copy-action-group-field,
   name={\csoptfmt{copy\dhyphen action\dhyphen group\dhyphen field}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.src,
   name={\csoptfmt{src}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.selection,
   name={\csoptfmt{selection}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.match,
   name={\csoptfmt{match}},
   user1={\meta{\keyvallist}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.match-op,
   name={\csoptfmt{match\dhyphen op}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.match-action,
   name={\csoptfmt{match\dhyphen action}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.not-match,
   name={\csoptfmt{not\dhyphen match}},
   user1={\meta{\keyvallist}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.limit,
   name={\csoptfmt{limit}},
   user1={\meta{number}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.flatten,
   name={\csoptfmt{flatten}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.flatten-lonely,
   name={\csoptfmt{flatten\dhyphen lonely}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.flatten-lonely-rule,
   name={\csoptfmt{flatten\dhyphen lonely\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.master,
   name={\csoptfmt{master}},
   user1={\meta{name}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.master-resources,
   name={\csoptfmt{master\dhyphen resources}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.ignore-fields,
   name={\csoptfmt{ignore\dhyphen fields}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-time-fields,
   name={\csoptfmt{date\dhyphen time\dhyphen fields}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-fields,
   name={\csoptfmt{date\dhyphen fields}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.time-fields,
   name={\csoptfmt{time\dhyphen fields}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-time-field-format,
   name={\csoptfmt{date\dhyphen time\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-time-field-format,
   name={\csoptfmt{dual\dhyphen date\dhyphen time\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-field-format,
   name={\csoptfmt{date\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-field-format,
   name={\csoptfmt{dual\dhyphen date\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.time-field-format,
   name={\csoptfmt{time\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-time-field-format,
   name={\csoptfmt{dual\dhyphen time\dhyphen field\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-time-field-locale,
   name={\csoptfmt{date\dhyphen time\dhyphen field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-time-field-locale,
   name={\csoptfmt{dual\dhyphen date\dhyphen time\dhyphen
field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-field-locale,
   name={\csoptfmt{date\dhyphen field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-field-locale,
   name={\csoptfmt{dual\dhyphen date\dhyphen field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.time-field-locale,
   name={\csoptfmt{time\dhyphen field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-time-field-locale,
   name={\csoptfmt{date\dhyphen time\dhyphen field\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.bibtex-contributor-fields,
   name={\csoptfmt{bibtex\dhyphen contributor\dhyphen fields}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.contributor-order,
   name={\csoptfmt{contributor\dhyphen order}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.category,
   name={\csoptfmt{category}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.type,
   name={\csoptfmt{type}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.counter,
   name={\csoptfmt{counter}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.label-prefix,
   name={\csoptfmt{label\dhyphen prefix}},
   user1={\meta{tag}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.cs-label-prefix,
   name={\csoptfmt{cs\dhyphen label\dhyphen prefix}},
   user1={\meta{tag}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.record-label-prefix,
   name={\csoptfmt{record\dhyphen label\dhyphen prefix}},
   user1={\meta{tag}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.ext-prefixes,
   name={\csoptfmt{ext\dhyphen prefixes}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-original-id,
   name={\csoptfmt{save\dhyphen original\dhyphen id}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.short-case-change,
   name={\csoptfmt{short\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.long-case-change,
   name={\csoptfmt{long\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.name-case-change,
   name={\csoptfmt{name\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.description-case-change,
   name={\csoptfmt{description\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.word-boundaries,
   name={\csoptfmt{word\dhyphen boundaries}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.post-description-dot,
   name={\csoptfmt{post\dhyphen description\dhyphen dot}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.strip-trailing-nopost,
   name={\csoptfmt{strip\dhyphen trailing\dhyphen nopost}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.check-end-punctuation,
   name={\csoptfmt{check\dhyphen end\dhyphen punctuation}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.group,
   name={\csoptfmt{group}},
   user1={\meta{label}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.group-formation,
   name={\csoptfmt{group\dhyphen formation}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-group-formation,
   name={\csoptfmt{secondary\dhyphen group\dhyphen formation}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-group-formation,
   name={\csoptfmt{dual\dhyphen group\dhyphen formation}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-child-count,
   name={\csoptfmt{save\dhyphen child\dhyphen count}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.short-plural-suffix,
   name={\csoptfmt{short\dhyphen plural\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-short-plural-suffix,
   name={\csoptfmt{dual\dhyphen short\dhyphen plural\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-locations,
   name={\csoptfmt{save\dhyphen locations}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-loclist,
   name={\csoptfmt{save\dhyphen loclist}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-primary-locations,
   name={\csoptfmt{save\dhyphen primary\dhyphen locations}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.primary-location-formats,
   name={\csoptfmt{primary\dhyphen location\dhyphen formats}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.min-loc-range,
   name={\csoptfmt{min\dhyphen loc\dhyphen range}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.max-loc-diff,
   name={\csoptfmt{max\dhyphen loc\dhyphen diff}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.suffixF,
   name={\csoptfmt{suffixF}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.suffixFF,
   name={\csoptfmt{suffixFF}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.see,
   name={\csoptfmt{see}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.seealso,
   name={\csoptfmt{seealso}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.alias,
   name={\csoptfmt{alias}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.alias-loc,
   name={\csoptfmt{alias\dhyphen loc}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.loc-prefix,
   name={\csoptfmt{loc\dhyphen prefix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.loc-suffix,
   name={\csoptfmt{loc\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.loc-counters,
   name={\csoptfmt{loc\dhyphen counters}},
   user1={\meta{list}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.save-index-counter,
   name={\csoptfmt{save\dhyphen index\dhyphen counter}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.supplemental-locations,
   name={\csoptfmt{supplemental\dhyphen locations}},
   user1={\meta{basename}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.supplemental-selection,
   name={\csoptfmt{supplemental\dhyphen selection}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.supplemental-category,
   name={\csoptfmt{supplemental\dhyphen category}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort,
   name={\csoptfmt{sort}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.shuffle,
   name={\csoptfmt{shuffle}},
   user1={\meta{seed}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-field,
   name={\csoptfmt{sort\dhyphen field}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.symbol-sort-fallback,
   name={\csoptfmt{symbol\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.abbreviation-sort-fallback,
   name={\csoptfmt{abbreviation\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.abbreviation-name-fallback,
   name={\csoptfmt{abbreviation\dhyphen name\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.bibtexentry-sort-fallback,
   name={\csoptfmt{bibtexentry\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.trim-sort,
   name={\csoptfmt{trim\dhyphen sort}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.missing-sort-fallback,
   name={\csoptfmt{missing\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-missing-sort-fallback,
   name={\csoptfmt{dual\dhyphen missing\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-missing-sort-fallback,
   name={\csoptfmt{secondary\dhyphen missing\dhyphen sort\dhyphen fallback}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-rule,
   name={\csoptfmt{sort\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.break-at,
   name={\csoptfmt{break\dhyphen at}},
   user1={\meta{option}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.break-marker,
   name={\csoptfmt{break\dhyphen marker}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.identical-sort-action,
   name={\csoptfmt{identical\dhyphen sort\dhyphen action}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-identical-sort-action,
   name={\csoptfmt{dual\dhyphen identical\dhyphen sort\dhyphen action}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-identical-sort-action,
   name={\csoptfmt{secondary\dhyphen identical\dhyphen sort\dhyphen action}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-suffix,
   name={\csoptfmt{sort\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-suffix-marker,
   name={\csoptfmt{sort\dhyphen suffix\dhyphen marker}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.strength,
   name={\csoptfmt{strength}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.decomposition,
   name={\csoptfmt{decomposition}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.letter-number-rule,
   name={\csoptfmt{letter\dhyphen number\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.letter-number-punc-rule,
   name={\csoptfmt{letter\dhyphen number\dhyphen punc\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.numeric-sort-pattern,
   name={\csoptfmt{numeric\dhyphen sort\dhyphen pattern}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.numeric-locale,
   name={\csoptfmt{numeric\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-sort-locale,
   name={\csoptfmt{date\dhyphen sort\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.date-sort-format,
   name={\csoptfmt{date\dhyphen sort\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.trigger-type,
   name={\csoptfmt{trigger\dhyphen type}},
   user1={\meta{type}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary,
   name={\csoptfmt{secondary}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-trim-sort,
   name={\csoptfmt{secondary\dhyphen trim\dhyphen sort}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-rule,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-break-at,
   name={\csoptfmt{secondary\dhyphen break\dhyphen at}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-break-marker,
   name={\csoptfmt{secondary\dhyphen break\dhyphen marker}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-suffix,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-suffix-marker,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen suffix\dhyphen
marker}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-strength,
   name={\csoptfmt{secondary\dhyphen strength}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-decomposition,
   name={\csoptfmt{secondary\dhyphen decomposition}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-letter-number-rule,
   name={\csoptfmt{secondary\dhyphen letter\dhyphen number\dhyphen
rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-letter-number-punc-rule,
   name={\csoptfmt{secondary\dhyphen letter\dhyphen number\dhyphen
punc\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-numeric-sort-pattern,
   name={\csoptfmt{secondary\dhyphen numeric\dhyphen sort\dhyphen
pattern}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-numeric-locale,
   name={\csoptfmt{secondary\dhyphen numeric\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-date-sort-locale,
   name={\csoptfmt{secondary\dhyphen date\dhyphen sort\dhyphen
locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-date-sort-format,
   name={\csoptfmt{secondary\dhyphen date\dhyphen sort\dhyphen
format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-prefix,
   name={\csoptfmt{dual\dhyphen prefix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.combine-dual-locations,
   name={\csoptfmt{combine\dhyphen dual\dhyphen locations}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-type,
   name={\csoptfmt{dual\dhyphen type}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-category,
   name={\csoptfmt{dual\dhyphen category}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-counter,
   name={\csoptfmt{dual\dhyphen counter}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-short-case-change,
   name={\csoptfmt{dual\dhyphen short\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-long-case-change,
   name={\csoptfmt{dual\dhyphen long\dhyphen case\dhyphen change}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-field,
   name={\csoptfmt{dual\dhyphen field}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort,
   name={\csoptfmt{dual\dhyphen sort}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-field,
   name={\csoptfmt{dual\dhyphen sort\dhyphen field}},
   user1={\meta{field}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-trim-sort,
   name={\csoptfmt{dual\dhyphen trim\dhyphen sort}},
   user1={\meta{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-rule,
   name={\csoptfmt{dual\dhyphen sort\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-break-at,
   name={\csoptfmt{dual\dhyphen break\dhyphen at}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-break-marker,
   name={\csoptfmt{dual\dhyphen break\dhyphen marker}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-suffix,
   name={\csoptfmt{dual\dhyphen sort\dhyphen suffix}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-suffix-marker,
   name={\csoptfmt{dual\dhyphen sort\dhyphen suffix\dhyphen marker}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-strength,
   name={\csoptfmt{dual\dhyphen strength}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-decomposition,
   name={\csoptfmt{dual\dhyphen decomposition}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-letter-number-rule,
   name={\csoptfmt{dual\dhyphen letter\dhyphen number\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-letter-number-punc-rule,
   name={\csoptfmt{dual\dhyphen letter\dhyphen number\dhyphen punc\dhyphen rule}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-numeric-sort-pattern,
   name={\csoptfmt{dual\dhyphen numeric\dhyphen sort\dhyphen
pattern}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-numeric-locale,
   name={\csoptfmt{dual\dhyphen numeric\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-sort-locale,
   name={\csoptfmt{dual\dhyphen date\dhyphen sort\dhyphen locale}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-date-sort-format,
   name={\csoptfmt{dual\dhyphen date\dhyphen sort\dhyphen format}},
   user1={\meta{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-entry-map,
   name={\csoptfmt{dual\dhyphen entry\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-abbrv-map,
   name={\csoptfmt{dual\dhyphen abbrv\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-abbrventry-map,
   name={\csoptfmt{dual\dhyphen abbrventry\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-symbol-map,
   name={\csoptfmt{dual\dhyphen symbol\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexentry-map,
   name={\csoptfmt{dual\dhyphen indexentry\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexsymbol-map,
   name={\csoptfmt{dual\dhyphen indexsymbol\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexabbrv-map,
   name={\csoptfmt{dual\dhyphen indexabbrv\dhyphen map}},
   user1={\marg{\margm{list1},\margm{list2}}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-entry-backlink,
   name={\csoptfmt{dual\dhyphen entry\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-abbrv-backlink,
   name={\csoptfmt{dual\dhyphen abbrv\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-entryabbrv-backlink,
   name={\csoptfmt{dual\dhyphen entryabbrv\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-abbrventry-backlink,
   name={\csoptfmt{dual\dhyphen abbrventry\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-symbol-backlink,
   name={\csoptfmt{dual\dhyphen symbol\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexentry-backlink,
   name={\csoptfmt{dual\dhyphen indexentry\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexsymbol-backlink,
   name={\csoptfmt{dual\dhyphen indexsymbol\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-indexabbrv-backlink,
   name={\csoptfmt{dual\dhyphen indexabbrv\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-backlink,
   name={\csoptfmt{dual\dhyphen backlink}},
   user1={\margm{boolean}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.tertiary-prefix,
   name={\csoptfmt{tertiary\dhyphen prefix}},
   user1={\margm{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.tertiary-type,
   name={\csoptfmt{tertiary\dhyphen type}},
   user1={\margm{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.tertiary-category,
   name={\csoptfmt{tertiary\dhyphen category}},
   user1={\margm{value}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-number-pad,
   name={\csoptfmt{sort\dhyphen number\dhyphen pad}},
   user1={\meta{number}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-number-pad,
   name={\csoptfmt{dual\dhyphen sort\dhyphen number\dhyphen pad}},
   user1={\meta{number}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-number-pad,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen number\dhyphen pad}},
   user1={\meta{number}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-pad-plus,
   name={\csoptfmt{sort\dhyphen pad\dhyphen plus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-pad-plus,
   name={\csoptfmt{dual\dhyphen sort\dhyphen pad\dhyphen plus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-pad-plus,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen pad\dhyphen plus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.sort-pad-minus,
   name={\csoptfmt{sort\dhyphen pad\dhyphen minus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.dual-sort-pad-minus,
   name={\csoptfmt{dual\dhyphen sort\dhyphen pad\dhyphen minus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{opt.secondary-sort-pad-minus,
   name={\csoptfmt{secondary\dhyphen sort\dhyphen pad\dhyphen minus}},
   user1={\meta{marker}},
   category={resourceoption},
   parent={resourceoptions}
}

@dualindexentry{GlsXtrLoadResources,
  name={\csfmt{Gls\-Xtr\-Load\-Resources}},
  user1={\oargm{options}},
  description={a shortcut command that uses \csref{glsxtrresourcefile}},
  note={\styfmt{glossaries-extra} v1.11+},
  seealso={resourceoptions,glsxtrresourcefile},
  category={command}
}

@dualindexentry{glsxtrcopytoglossary,
  name={\csfmt{gls\-xtr\-copy\-to\-glossary}},
  user1={\margm{label}\margm{type}},
  description={copies the entry given by \meta{label} to the
glossary given by \meta{type}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@dualindexentry{glsxtrnewglslike,
  name={\csfmt{gls\-xtr\-new\-gls\-like}},
  user1={\oargm{options}\margm{prefix}\margm{gls-like
cs}\margm{glspl-like cs}\margm{Gls-like
cs}\margm{Glspl-like cs}},
  description={defines commands to behave like \ics{gls}, \ics{glspl},
   \ics{Gls} and \ics{Glspl} with the given label prefix},
  note={\styfmt{glossaries-extra} v1.21+},
  seealso={glsxtrnewgls},
  category={command}
}

@dualindexentry{glsxtrnewgls,
  name={\csfmt{gls\-xtr\-new\-gls}},
  user1={\oargm{options}\margm{prefix}\margm{cs}},
  description={defines the command \meta{cs} to behave like 
  \ics{gls} with the given label prefix},
  note={\styfmt{glossaries-extra} v1.21+},
  seealso={gls},
  category={command}
}

@dualindexentry{glsnoidxdisplayloc,
  name={\csfmt{gls\-no\-idx\-display\-loc}},
  user1={\margm{prefix}\margm{counter}\margm{format}\margm{location}},
  description={used to display a regular location in the
  \field{location} field},
  note={\styfmt{glossaries} v4.04+},
  category={command}
}

@dualindexentry{glsxtrdisplaylocnameref,
  name={\csfmt{gls\-xtr\-display\-loc\-name\-ref}},
  user1={\margm{prefix}\margm{counter}\margm{format}\margm{location}\margm{title}\margm{href}\margm{hcounter}\margm{file}},
  description={used to display a \code{nameref} location in the
  \field{location} field},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  category={command}
}

@dualindexentry{glsxtrdisplaysupploc,
  name={\csfmt{gls\-xtr\-display\-supp\-loc}},
  user1={\margm{prefix}\margm{counter}\margm{format}\margm{src}\margm{location}},
  description={used to display an external location in the
   supplementary list},
  note={\styfmt{glossaries-extra-bib2gls} v1.36+},
  category={command}
}

@dualindexentry{glsxtrmultisupplocation,
  name={\csfmt{gls\-xtr\-multi\-supp\-location}},
  user1={\margm{location}\margm{src}\margm{format}},
  description={used by \csref{glsxtrdisplaysupploc} to format the
  external location},
  note={\styfmt{glossaries-extra-bib2gls} v1.36+},
  category={command}
}

@index{glsxtrsupplocationurl,
  name={\csfmt{gls\-xtr\-supp\-loc\-a\-tion\-url}},
  description={set by \cs{glsxtrsupphypernumber}
  and \csref{glsxtrmultisupplocation} to the
   URL of the supplemental document for use by
    \cs{glshypernumber}},
  note={\styfmt{glossaries-extra} v1.14+},
  seealso={glshypernumber,glsxtrsupphypernumber,glsxtrmultisupplocation,glsxtrlocationhyperlink},
  category={command}
}

@index{glsxtrlocationhyperlink,
  name={\csfmt{gls\-xtr\-loc\-a\-tion\-hyper\-link}},
  user1={\margm{counter}\margm{prefix}\margm{location}},
  description={used to create the location hyperlink,
   this tests if an internal or external link is required
   depending on the definition of \cs{glsxtrsupplocationurl}},
  note={\styfmt{glossaries-extra} v1.14+},
  seealso={glsxtrsupphypernumber,glsxtrsupplocationurl},
  category={command}
}

@index{glsxtrsupphypernumber,
  name={\csfmt{gls\-xtr\-supp\-hyper\-num\-ber}},
  user1={\margm{location}},
  description={uses \cs{glshypernumber} to create a hyperlink
   to the given location (if hyperlinks are supported) but
   first checks the \catattr{externallocation} attribute to determine
   if an external link is required},
  note={\styfmt{glossaries-extra} v1.14+},
  seealso={glsxtrlocationhyperlink,glsxtrsupplocationurl},
  category={command}
}

@dualindexentry{glsxtr@record,
  name={\csfmt{glsxtr@record}},
  user1={\margm{label}\margm{prefix}\margm{counter}\margm{format}\margm{location}},
  description={this command is written to the \ext{aux} file each
   time an entry is indexed to provide \bibgls\ with the record information},
  note={\styfmt{glossaries-extra} v1.08+},
  category={command}
}

@dualindexentry{glsxtr@record@nameref,
  name={\csfmt{glsxtr@record@name\-ref}},
  user1={\margm{label}\margm{prefix}\margm{counter}\margm{format}\margm{location}\margm{title}\margm{href}\margm{hcounter}},
  description={used instead of \csref{glsxtr@record} when the
   \styopt[nameref]{record} option is used},
  note={\styfmt{glossaries-extra} v1.37+},
  category={command}
}

@dualindexentry{glsxtrfieldlistadd,
  name={\csfmt{gls\-xtr\-field\-list\-add}},
  user1={\margm{label}\margm{field}\margm{item}},
  description={adds the given item to the given field that contains
   an \styfmt{etoolbox} internal list},
  note={\styfmt{glossaries-extra} v1.12+},
  seealso={glsxtrfieldifinlist,glsxtrfieldforlistloop,glsxtrfielddolistloop},
  category={command}
}

@index{glsxtrfieldifinlist,
  name={\csfmt{gls\-xtr\-field\-if\-in\-list}},
  user1={\margm{label}\margm{field}\margm{item}\margm{true}\margm{false}},
  description={tests if the given item is in the given field that contains
   an \styfmt{etoolbox} internal list},
  note={\styfmt{glossaries-extra} v1.12+},
  seealso={glsxtrfieldxifinlist,glsxtrfieldlistadd,glsxtrfieldforlistloop,glsxtrfielddolistloop},
  category={command}
}

@index{glsxtrfieldxifinlist,
  name={\csfmt{gls\-xtr\-field\-x\-if\-in\-list}},
  user1={\margm{label}\margm{field}\margm{item}\margm{true}\margm{false}},
  description={tests if the expansion of the given item is in the given field that contains
   an \styfmt{etoolbox} internal list},
  note={\styfmt{glossaries-extra} v1.12+},
  seealso={glsxtrfieldifinlist},
  category={command}
}

@index{alpha,
  name={\csfmt{alpha}},
  user1={},
  description={Greek letter alpha $\alpha$},
  note={kernel command (maths mode)},
  category={command}
}

@index{pi,
  name={\csfmt{pi}},
  user1={},
  description={Greek letter pi $\pi$},
  note={kernel command (maths mode)},
  category={command}
}

@index{omicron,
  name={\csfmt{omicron}},
  user1={},
  description={Greek letter omicron $\omicron$},
  note={\styfmt{glossaries-extra-bib2gls}},
  category={command}
}

@index{Alpha,
  name={\csfmt{Alpha}},
  user1={},
  description={Greek letter alpha $\Alpha$},
  note={\styfmt{glossaries-extra-bib2gls}},
  category={command}
}

@dualindexentry{bigoperatornamefmt,
  name={\csfmt{bigoperatornamefmt}},
  user1={\margm{text}},
  description={example command},
  category={command}
}

@dualindexentry{nary,
  name={\csfmt{nary}},
  user1={\margm{text}},
  description={example command},
  category={command}
}

@dualindexentry{strong,
  name={\csfmt{strong}},
  user1={\margm{text}},
  description={example command},
  category={command}
}

@dualindexentry{parenswap,
  name={\csfmt{parenswap}},
  user1={\margm{text1}\margm{text2}},
  description={example command},
  category={command}
}

@dualindexentry{sortop,
  name={\csfmt{sortop}},
  user1={\margm{text1}\margm{text2}},
  description={example command},
  category={command}
}

@dualindexentry{sortname,
  name={\csfmt{sortname}},
  user1={\margm{first name(s)}\margm{surname}},
  description={example command},
  category={command}
}

@dualindexentry{sortvonname,
  name={\csfmt{sort\-von\-name}},
  user1={\margm{first name(s)}\margm{von}\margm{surname}},
  description={example command},
  category={command}
}

@dualindexentry{sortart,
  name={\csfmt{sortart}},
  user1={\margm{article}\margm{text}},
  description={example command},
  category={command}
}

@dualindexentry{sortmediacreator,
  name={\csfmt{sort\-media\-creator}},
  user1={\margm{first name(s)}\margm{surname}},
  description={example command},
  category={command}
}

@dualindexentry{setfmt,
  name={\csfmt{setfmt}},
  user1={\margm{symbol}},
  description={example command},
  category={command}
}

@dualindexentry{setcontentsfmt,
  name={\csfmt{setcontentsfmt}},
  user1={\margm{contents}},
  description={example command},
  category={command}
}

@dualindexentry{setmembershipfmt,
  name={\csfmt{setmembershipfmt}},
  user1={\margm{variable(s)}\margm{condition}},
  description={example command},
  category={command}
}

@dualindexentry{setmembershiponeargfmt,
  name={\csfmt{setmembershiponeargfmt}},
  user1={\marg{\margm{variable(s)}\margm{condition}}},
  description={example command},
  category={command}
}

@dualindexentry{setcardfmt,
  name={\csfmt{setcardfmt}},
  user1={\margm{maths}},
  description={example command},
  category={command}
}

@dualindexentry{numspacefmt,
  name={\csfmt{numspacefmt}},
  user1={\margm{symbol}},
  description={example command},
  category={command}
}

@dualindexentry{transposefmt,
  name={\csfmt{transposefmt}},
  user1={\margm{maths}},
  description={example command},
  category={command}
}

@dualindexentry{invfmt,
  name={\csfmt{invfmt}},
  user1={\margm{maths}},
  description={example command},
  category={command}
}

@dualindexentry{vecfmt,
  name={\csfmt{vecfmt}},
  user1={\margm{symbol}},
  description={example command},
  category={command}
}

@dualindexentry{mtxfmt,
  name={\csfmt{mtxfmt}},
  user1={\margm{symbol}},
  description={example command},
  category={command}
}

@index{fileformats,
  name={file formats},
  text={file format}
}

@index{tex,
  name={\extfmt{tex}},
  category={fileformat},
  parent={fileformats}
}

@index{bib,
  name={\extfmt{bib}},
  category={fileformat},
  parent={fileformats}
}

@index{aux,
  name={\extfmt{aux}},
  category={fileformat},
  parent={fileformats}
}

@index{out,
  name={\extfmt{out}},
  category={fileformat},
  parent={fileformats}
}

@index{sh,
  name={\extfmt{sh}},
  category={fileformat},
  parent={fileformats}
}

@index{bat,
  name={\extfmt{bat}},
  category={fileformat},
  parent={fileformats}
}

@index{jar,
  name={\extfmt{jar}},
  category={fileformat},
  parent={fileformats}
}

@index{glg,
  name={\extfmt{glg}},
  category={fileformat},
  parent={fileformats}
}

@index{log,
  name={\extfmt{log}},
  category={fileformat},
  parent={fileformats}
}

@index{toc,
  name={\extfmt{toc}},
  category={fileformat},
  parent={fileformats}
}

@index{glstex,
  name={\extfmt{glstex}},
  category={fileformat},
  parent={fileformats}
}

@index{bbl,
  name={\extfmt{bbl}},
  category={fileformat},
  parent={fileformats}
}

@index{applications,
  name={applications},
  text={applications}
}

@index{bibtex,
  name={\appfmt{bibtex}},
  category={application},
  parent={applications}
}

@index{biber,
  name={\appfmt{biber}},
  category={application},
  parent={applications}
}

@index{makeindex,
  name={\appfmt{make\-index}},
  category={application},
  parent={applications}
}

@index{xindy,
  name={\appfmt{xindy}},
  category={application},
  parent={applications}
}

@index{makeglossaries,
  name={\appfmt{make\-glos\-saries}},
  category={application},
  parent={applications}
}

@index{makeglossaries-lite,
  name={\appfmt{make\-glos\-saries\dhyphen lite}},
  category={application},
  parent={applications}
}

@index{kpsewhich,
  name={\appfmt{kpsewhich}},
  category={application},
  parent={applications}
}

@index{arara,
  name={\appfmt{arara}},
  category={application},
  parent={applications}
}

@index{convertgls2bib,
  name={\appfmt{convert\-gls2bib}},
  category={application},
  parent={applications}
}

@index{packages,
   name={packages},
   text={package}
}

@index{glossaries,
  name={\styfmt{glossaries}},
  category={package},
  parent={packages}
}

@index{glossaries-extra,
  name={\styfmt{glossaries-extra}},
  category={package},
  parent={packages}
}

@index{pifont,
  name={\styfmt{pifont}},
  category={package},
  parent={packages}
}

@index{upgreek,
  name={\styfmt{upgreek}},
  category={package},
  parent={packages}
}

@index{xspace,
  name={\styfmt{xspace}},
  category={package},
  parent={packages}
}

@index{fourier,
  name={\styfmt{fourier}},
  category={package},
  parent={packages}
}

@index{lipsum,
  name={\styfmt{lipsum}},
  category={package},
  parent={packages}
}

@index{natbib,
  name={\styfmt{natbib}},
  category={package},
  parent={packages}
}

@index{textcomp,
  name={\styfmt{textcomp}},
  category={package},
  parent={packages}
}

@index{MnSymbol,
  name={\styfmt{MnSymbol}},
  category={package},
  parent={packages}
}

@index{wasysym,
  name={\styfmt{wasysym}},
  category={package},
  parent={packages}
}

@index{amssymb,
  name={\styfmt{amssymb}},
  category={package},
  parent={packages}
}

@index{stix,
  name={\styfmt{stix}},
  category={package},
  parent={packages}
}

@index{mhchem,
  name={\styfmt{mhchem}},
  category={package},
  parent={packages}
}

@index{bpchem,
  name={\styfmt{bpchem}},
  category={package},
  parent={packages}
}

@index{siunitx,
  name={\styfmt{siunitx}},
  category={package},
  parent={packages}
}

@index{tipa,
  name={\styfmt{tipa}},
  category={package},
  parent={packages}
}

@index{mfirstuc,
  name={\styfmt{mfirstuc}},
  category={package},
  parent={packages}
}

@index{mfirstuc-english,
  name={\styfmt{mfirstuc-english}},
  category={package},
  parent={packages}
}

@index{hyperref,
  name={\styfmt{hyperref}},
  category={package},
  parent={packages}
}

@index{glossary-hypernav,
  name={\styfmt{glossary\dhyphen hypernav}},
  category={package},
  parent={packages}
}

@index{glossaries-prefix,
  name={\styfmt{glossaries\dhyphen prefix}},
  category={package},
  parent={packages}
}

@index{glossaries-accsupp,
  name={\styfmt{glossaries\dhyphen accsupp}},
  category={package},
  parent={packages}
}

@index{glossaries-extra-stylemods,
  name={\styfmt{glossaries\dhyphen extra\dhyphen stylemods}},
  category={package},
  parent={packages}
}

@index{glossaries-extra-bib2gls,
  name={\styfmt{glossaries\dhyphen extra\dhyphen bib2gls}},
  category={package},
  parent={packages}
}

@index{glossary-list,
  name={\styfmt{glossary\dhyphen list}},
  category={package},
  parent={packages}
}

@index{glossary-tree,
  name={\styfmt{glossary\dhyphen tree}},
  category={package},
  parent={packages}
}

@index{glossary-mcols,
  name={\styfmt{glossary\dhyphen mcols}},
  category={package},
  parent={packages}
}

@index{glossary-long,
  name={\styfmt{glossary\dhyphen long}},
  category={package},
  parent={packages}
}

@index{glossary-longbooktabs,
  name={\styfmt{glossary\dhyphen longbooktabs}},
  category={package},
  parent={packages}
}

@index{glossary-bookindex,
  name={\styfmt{glossary\dhyphen bookindex}},
  category={package},
  parent={packages}
}

@index{glossary-longextra,
  name={\styfmt{glossary\dhyphen longextra}},
  category={package},
  parent={packages}
}

@index{booktabs,
  name={\styfmt{booktabs}},
  category={package},
  parent={packages}
}

@index{color,
  name={\styfmt{color}},
  category={package},
  parent={packages}
}

@index{graphics,
  name={\styfmt{graphics}},
  category={package},
  parent={packages}
}

@index{graphicx,
  name={\styfmt{graphicx}},
  category={package},
  parent={packages}
}

@index{ifthen,
  name={\styfmt{ifthen}},
  category={package},
  parent={packages}
}

@index{probsoln,
  name={\styfmt{probsoln}},
  category={package},
  parent={packages}
}

@index{shortvrb,
  name={\styfmt{shortvrb}},
  category={package},
  parent={packages}
}

@index{jmlrutils,
  name={\styfmt{jmlrutils}},
  category={package},
  parent={packages}
}

@index{inputenc,
  name={\styfmt{inputenc}},
  category={package},
  parent={packages}
}

@index{fontenc,
  name={\styfmt{fontenc}},
  category={package},
  parent={packages}
}

@index{slantsc,
  name={\styfmt{slantsc}},
  category={package},
  parent={packages}
}

@index{babel,
  name={\styfmt{babel}},
  category={package},
  parent={packages}
}

@index{polyglossia,
  name={\styfmt{polyglossia}},
  category={package},
  parent={packages}
}

@index{fontspec,
  name={\styfmt{fontspec}},
  category={package},
  parent={packages}
}

@index{amsmath,
  name={\styfmt{amsmath}},
  category={package},
  parent={packages}
}

@index{textcase,
  name={\styfmt{textcase}},
  category={package},
  parent={packages}
}

@index{datetime2,
  name={\styfmt{datetime2}},
  category={package},
  parent={packages}
}

@index{datatool-base,
  name={\styfmt{datatool\dhyphen base}},
  category={package},
  parent={packages}
}

@index{datatool,
  name={\styfmt{datatool}},
  category={package},
  parent={packages}
}

@index{etoolbox,
  name={\styfmt{etoolbox}},
  category={package},
  parent={packages}
}

@index{soul,
  name={\styfmt{soul}},
  category={package},
  parent={packages}
}

@index{xcolor,
  name={\styfmt{xcolor}},
  category={package},
  parent={packages}
}

@index{tracklang,
  name={\styfmt{tracklang}},
  category={package},
  parent={packages}
}

@index{accsupp,
  name={\styfmt{accsupp}},
  category={package},
  parent={packages}
}

@index{stringconcat,
  name={\code{\#} (string concatenation)},
  text={\code{\#}}
}

@index{atchar,
  name={\code{@} (bib entry identifier)},
  text={\code{@}}
}

@index{param,
  name={\code{\#} (parameter)},
  text={\code{\#}}
}

@index{hashchar,
  name={\code{\#} (literal)},
  text={\code{\#}}
}

@index{cs.hash,
  name={\csfmt{\#}},
  description={produces the hash symbol \#},
  note={kernel command},
  category={command}
}

@index{colsep,
  name={\code{\&} (alignment)},
  text={\code{\&}}
}

@index{ampchar,
  name={\code{\&} (literal)},
  text={\code{\&}}
}

@index{cs.amp,
  name={\csfmt{\&}},
  description={produces the ampersand symbol \&},
  note={kernel command},
  category={command}
}

@index{bgroupchar,
  name={\code{\{} (begin group)},
  text={\code{\{}}
}

@index{openbracechar,
  name={\code{\{} (literal)},
  text={\code{\{}}
}

@index{cs.openbrace,
  name={\csfmt{\{}},
  description={produces the open brace symbol \{},
  note={kernel command},
  category={command}
}

@index{egroupchar,
  name={\code{\}} (end group)},
  text={\code{\}}}
}

@index{closebracechar,
  name={\code{\}} (literal)},
  text={\code{\}}}
}

@index{cs.closebrace,
  name={\csfmt{\}}},
  description={produces the close brace symbol \}},
  note={kernel command},
  category={command}
}

@index{commentchar,
  name={\code{\%} (comment)},
  text={\code{\%}}
}

@index{percentchar,
  name={\code{\%} (literal)},
  text={\code{\%}}
}

@index{cs.percent,
  name={\csfmt{\%}},
  description={produces the percent symbol \%},
  note={kernel command},
  category={command}
}

@index{sbchar,
  name={\code{\_} (subscript)},
  text={\code{\_}}
}

@index{underscorechar,
  name={\code{\_} (literal)},
  text={\code{\_}}
}

@index{cs.underscore,
  name={\csfmt{\_}},
  description={produces the underscore symbol \_},
  note={kernel command},
  category={command}
}

@index{spchar,
  name={\code{\char`\^} (superscript)},
  text={\code{\char`\^}}
}

@index{circumchar,
  name={\code{\char`\^} (literal)},
  text={\code{\char`\^}}
}

@index{cs.circum,
  name={\csfmt{\char`\^}},
  user1={\margm{character}},
  description={puts a circumflex accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{mshiftchar,
  name={\code{\$} (maths shift)},
  text={\code{\$}}
}

@index{dollarchar,
  name={\code{\$} (literal)},
  text={\code{\$}}
}

@index{cs.dollar,
  name={\csfmt{\$}},
  description={produces the dollar symbol \_},
  note={kernel command},
  category={command}
}

@index{escchar,
  name={\code{\glsbackslash} (escape)},
  text={\code{\glsbackslash}}
}

@index{backslashchar,
  name={\code{\glsbackslash} (literal)},
  text={\code{\glsbackslash}}
}

@index{cs.backslash,
  name={\csfmt{\glsbackslash}}
}

@index{nbspchar,
  name={\code{\glstildechar} (non-breakable space)},
  text={\code{\glstildechar}}
}

@index{tildechar,
  name={\code{\glstildechar} (literal)},
  text={\code{\glstildechar}}
}

@index{doublequotechar,
  name = {\code{"}}
}

@index{cs.tilde,
  name={\csfmt{\glstildechar}},
  user1={\margm{character}},
  description={puts tilde accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{vec,
  name={\csfmt{vec}},
  user1={\margm{character}},
  description={puts right arrow accent over \meta{character}},
  note={kernel command (maths mode)},
  category={command}
}

@index{zeroormore,
  name={\code{*} (regular expression, zero or more)},
  text={\code{*}}
}

@index{matchanydot,
  name={\code{.}\ (regular expression, match any)},
  text={\code{.}}
}

@index{periodchar,
  name={\code{.}\ (end of sentence)},
  text={\code{.}},
  alias={full-stop}
}

@index{cs.period,
  name={\csfmt{.}}
}

@index{cs.space,
  name={\csfmt{\textvisiblespace}},
  description={produces an inter-word space},
  note={kernel command},
  category={command}
}

@index{space,
  name={\csfmt{space}},
  description={produces a space},
  note={kernel command},
  category={command}
}

@index{aposchar,
  name={\code{'} (apostrophe)},
  text={\code{'}},
  alias={apostrophe}
}

@index{ifstrempty,
  name={\csfmt{if\-str\-empty}},
  user1={\margm{string}\margm{true}\margm{false}},
  description={tests if \meta{string} is empty},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{ifstrequal,
  name={\csfmt{if\-str\-equal}},
  user1={\margm{string1}\margm{string2}\margm{true}\margm{false}},
  description={tests if \meta{string1} equals \meta{string2}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{undef,
  name={\csfmt{undef}},
  user1={\meta{cs}},
  description={undefines the control sequence \meta{cs}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{csdef,
  name={\csfmt{csdef}},
  user1={\margm{cs-name}\meta{syntax}\margm{definition}},
  description={defines the control sequence whose name
   is given by \meta{cs-name}, without checking if the command
   already exists},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{csuse,
  name={\csfmt{csuse}},
  user1={\margm{cs-name}},
  description={uses the control sequence whose name
   is given by \meta{cs-name} or does nothing if the command
   isn't defined},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{ifdefempty,
  name={\csfmt{if\-def\-empty}},
  user1={\margm{cs}\margm{true}\margm{false}},
  description={tests if the control sequence \meta{cs} is empty},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{ifcsundef,
  name={\csfmt{if\-cs\-un\-def}},
  user1={\margm{cs-name}\margm{true}\margm{false}},
  description={tests if the control sequence given by \meta{cs-name}
is undefined},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{ifcsdef,
  name={\csfmt{if\-cs\-def}},
  user1={\margm{cs-name}\margm{true}\margm{false}},
  description={tests if the control sequence given by \meta{cs-name}
is defined},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{xifinlist,
  name={\csfmt{xifinlist}},
  user1={\margm{element}\margm{list cs}\margm{true}\margm{false}},
  description={tests if the expansion of \meta{element} is in the list stored
   in the control sequence \meta{list cs}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{ifinlist,
  name={\csfmt{ifinlist}},
  user1={\margm{element}\margm{list cs}\margm{true}\margm{false}},
  description={tests if \meta{element} is in the list stored
   in the control sequence \meta{list cs}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{listxadd,
  name={\csfmt{listxadd}},
  user1={\margm{list cs}\margm{element}},
  description={globally adds (expanded) \meta{element} to the list stored
   in the control sequence \meta{list cs}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{listgadd,
  name={\csfmt{listgadd}},
  user1={\margm{list cs}\margm{element}},
  description={globally adds \meta{element} to the list stored
   in the control sequence \meta{list cs}},
  note={\styfmt{etoolbox}},
  category={command}
}

@index{foreignlanguage,
  name={\csfmt{foreign\-language}},
  user1={\margm{language name}\margm{text}},
  description={typesets \meta{text} according to the rules of the
given language},
  note={\styfmt{babel}},
  category={command}
}

@index{marvosym,
  name={\styfmt{marvosym}},
  category={package},
  parent={packages}
}

@index{ifsym,
  name={\styfmt{ifsym}},
  category={package},
  parent={packages}
}

@index{CJKutf8,
  name={\styfmt{CJKutf8}},
  category={package},
  parent={packages}
}

@index{env.CJK,
  name={\envfmt{CJK}},
  category={environment}
}

@index{env.description,
  name={\envfmt{description}},
  category={environment}
}

@index{longtable,
  name={\styfmt{longtable}},
  category={package},
  parent={packages}
}

@index{env.longtable,
  name={\envfmt{longtable}},
  category={environment}
}

@index{env.tabular,
  name={\envfmt{tabular}},
  category={environment}
}

@index{supertabular,
  name={\styfmt{supertabular}},
  category={package},
  parent={packages}
}

@index{env.supertabular,
  name={\envfmt{supertabular}},
  category={environment}
}

@index{env.theglossary,
  name={\envfmt{theglossary}},
  category={environment}
}

@index{abbreviationstyles,
  name={abbreviation styles},
  text={abbreviation style}
}

@index{long-noshort,
  name={\abbrstylefmt{long\dhyphen noshort}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-noshort-desc,
  name={\abbrstylefmt{long\dhyphen noshort\dhyphen desc}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-sc,
  name={\abbrstylefmt{long\dhyphen short\dhyphen sc}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-sm,
  name={\abbrstylefmt{long\dhyphen short\dhyphen sm}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-em,
  name={\abbrstylefmt{long\dhyphen short\dhyphen em}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short,
  name={\abbrstylefmt{long\dhyphen short}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-user,
  name={\abbrstylefmt{long\dhyphen short\dhyphen user}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{short-long-user,
  name={\abbrstylefmt{short\dhyphen long\dhyphen user}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-em-short-em,
  name={\abbrstylefmt{long\dhyphen em\dhyphen short\dhyphen em}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-desc,
  name={\abbrstylefmt{long\dhyphen short\dhyphen desc}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-short-user-desc,
  name={\abbrstylefmt{long\dhyphen short\dhyphen user\dhyphen desc}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-hyphen-short-hyphen,
  name={\abbrstylefmt{long\dhyphen hyphen\dhyphen short\dhyphen
hyphen}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-postshort-user-desc,
  name={\abbrstylefmt{long\dhyphen postshort\dhyphen user\dhyphen desc}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{short-long,
  name={\abbrstylefmt{short\dhyphen long}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{short-nolong,
  name={\abbrstylefmt{short\dhyphen nolong}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{short-sc-nolong,
  name={\abbrstylefmt{short\dhyphen sc\dhyphen nolong}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{long-only-short-only,
  name={\abbrstylefmt{long\dhyphen only\dhyphen short\dhyphen only}},
  category={abbreviationstyle},
  parent={abbreviationstyles}
}

@index{glossarystyle,
  name={glossary styles},
  text={glossary style}
}

@index{glostyle.indexgroup,
  name={\glostylefmt{indexgroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.mcolindexgroup,
  name={\glostylefmt{mcolindexgroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.indexhypergroup,
  name={\glostylefmt{indexhypergroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.tree,
  name={\glostylefmt{tree}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.treegroup,
  name={\glostylefmt{treegroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.treenoname,
  name={\glostylefmt{treenoname}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.treenonamegroup,
  name={\glostylefmt{treenonamegroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.alttree,
  name={\glostylefmt{alttree}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.alttreegroup,
  name={\glostylefmt{alttreegroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.mcolalttree,
  name={\glostylefmt{mcolalttree}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.mcolalttreegroup,
  name={\glostylefmt{mcolalttreegroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.list,
  name={\glostylefmt{list}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.altlist,
  name={\glostylefmt{altlist}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.altlistgroup,
  name={\glostylefmt{altlistgroup}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.index,
  name={\glostylefmt{index}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.bookindex,
  name={\glostylefmt{bookindex}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.long3col,
  name={\glostylefmt{long3col}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{glostyle.long3col-booktabs,
  name={\glostylefmt{long3col\dhyphen booktabs}},
  category={glossarystyle},
  parent={glossarystyle}
}

@index{categoryattribute,
  name={category attributes},
  text={category attribute}
}

@index{attribute,
  name = {attributes},
  text = {attribute},
  alias = {categoryattribute}
}

@index{recordcount,
  name={\catattrfmt{record\-count}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{glossname,
  name={\catattrfmt{gloss\-name}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{glossnamefont,
  name={\catattrfmt{gloss\-name\-font}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{glossdesc,
  name={\catattrfmt{gloss\-desc}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{glossdescfont,
  name={\catattrfmt{gloss\-desc\-font}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{textformat,
  name={\catattrfmt{text\-format}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{headuc,
  name={\catattrfmt{headuc}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{aposplural,
  name={\catattrfmt{apos\-plural}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{accessaposplural,
  name={\catattrfmt{access\-apos\-plural}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{noshortplural,
  name={\catattrfmt{no\-short\-plural}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{accessnoshortplural,
  name={\catattrfmt{access\-no\-short\-plural}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{nameshortaccess,
  name={\catattrfmt{name\-short\-access}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{firstshortaccess,
  name={\catattrfmt{first\-short\-access}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{textshortaccess,
  name={\catattrfmt{text\-short\-access}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{markwords,
  name={\catattrfmt{mark\-words}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{markshortwords,
  name={\catattrfmt{mark\-short\-words}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{targeturl,
  name={\catattrfmt{target\-url}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{targetname,
  name={\catattrfmt{target\-name}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{externallocation,
  name={\catattrfmt{external\-location}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{discardperiod,
  name={\catattrfmt{discard\-period}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{pluraldiscardperiod,
  name={\catattrfmt{plural\-discard\-period}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{retainfirstuseperiod,
  name={\catattrfmt{retain\-first\-use\-period}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{insertdots,
  name={\catattrfmt{insert\-dots}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{accessinsertdots,
  name={\catattrfmt{access\-insert\-dots}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{tagging,
  name={\catattrfmt{tagging}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{nohyperfirst,
  name={\catattrfmt{no\-hyper\-first}},
  category={categoryattribute},
  parent={categoryattribute}
}

@index{ctr.equation,
  name={\counterfmt{equation}},
  category={counter}
}

@index{ctr.page,
  name={\counterfmt{page}},
  category={counter}
}

@index{ctr.section,
  name={\counterfmt{section}},
  category={counter}
}

@index{ctr.chapter,
  name={\counterfmt{chapter}},
  category={counter}
}

@index{ctr.wrglossary,
  name={\counterfmt{wrglossary}},
  category={counter}
}

@index{ctr.glossaryentry,
  name={\counterfmt{glossaryentry}},
  category={counter}
}

@index{ctr.glossarysubentry,
  name={\counterfmt{glossarysubentry}},
  category={counter}
}

@index{labelprefixes,
  name={label prefixes},
  text={label prefix},
  plural={label prefixes}
}

@index{idprefix.dual,
  name={\idprefixfmt{dual}},
  category={idprefix},
  parent={labelprefixes}
}

@index{idprefix.tertiary,
  name={\idprefixfmt{tertiary}},
  category={idprefix},
  parent={labelprefixes}
}

@index{idprefix.extn,
  name={\idprefixfmt{ext\meta{n}}},
  category={idprefix},
  parent={labelprefixes}
}

@index{packageoptions,
  name={package options},
  text={package option}
}

@dualindexentry{styopt.record,
  name={\styoptfmt{record}},
  user1={\meta{value}},
  description={unless the value is \styoptfmt{off}, this option sets
  up \styfmt{glossaries-extra} for use with \bibgls: \styoptfmt{only}
  (assumed if no \meta{value} supplied) indexing is performed by
  \bibgls; \styoptfmt{nameref} (\sty{glossaries-extra} v1.37+) 
  like \styoptfmt{only} but includes extra information in the records; 
  \styoptfmt{alsoindex} (hybrid method) \bibgls\ is used to provide
  the entry definitions but \idx{makeindex} or \idx{xindy} is used
  for the indexing},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.accsupp,
  name={\styoptfmt{accsupp}},
  description={load the \sty{glossaries-accsupp} package to provide
   accessibility support},
  package={glossaries,glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.abbreviations,
  name={\styoptfmt{abbreviations}},
  description={creates the \code{abbreviations} glossary},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.symbols,
  name={\styoptfmt{symbols}},
  package={glossaries,glossaries-extra},
  description={defines the \code{symbols} glossary; with 
   \styfmt{glossaries-extra} additionally defines
   \csref{glsxtrnewsymbol}},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.numbers,
  name={\styoptfmt{numbers}},
  package={glossaries,glossaries-extra},
  description={defines the \code{numbers} glossary; with 
   \styfmt{glossaries-extra} additionally defines
   \csref{glsxtrnewnumber}},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.undefaction,
  name={\styoptfmt{undefaction}},
  user1={\meta{value}},
  description={indicates what to do if an undefined entry is
  referenced: \styoptfmt{warn} (generate a warning and show ?? in
  the text, default with \styopt{record}), \styoptfmt{error}
  (generate an error)},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.indexcrossrefs,
  name={\styoptfmt{indexcrossrefs}},
  user1={\meta{boolean}},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  description={if true, at the end of
  the document automatically index cross-referenced entries that 
  haven't been marked as used},
  note={not relevant with \bibgls}
}

@dualindexentry{styopt.autoseeindex,
  name={\styoptfmt{autoseeindex}},
  user1={\meta{boolean}},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={if true, the \field{see} and \field{seealso} keys 
   automatically indexes the cross-referenced term}
}

@dualindexentry{styopt.nopostdot,
  name={\styoptfmt{nopostdot}},
  user1={\meta{boolean}},
  package={glossaries,glossaries-extra},
  description={if true, suppresses the automatic post-description 
   punctuation. With \styfmt{glossaries-extra} you can also use
   \styopt[none]{postpunc} instead of \styopt[true]{nopostdot} and
   \styopt{postdot} or \styopt[dot]{postpunc} instead of 
   \styopt[false]{nopostdot}},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.postdot,
  name={\styoptfmt{postdot}},
  package={glossaries-extra},
  description={equivalent to \styopt[dot]{postpunc}},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.postpunc,
  name={\styoptfmt{postpunc}},
  user1={\meta{value}},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  description={controls the automatic post-description punctuation;
  the value may be one of: \styoptfmt{none} (not required, 
  the \field{description} or glossary style already supplies the 
  terminating punctuation), \styoptfmt{comma} (use a comma),
  \styoptfmt{dot} (use a \idx{full-stop} with the space factor
   adjusted), \meta{punctuation} (use \meta{punctuation})}
}

@dualindexentry{styopt.indexcounter,
  name={\styoptfmt{index\-counter}},
  description={creates the \counter{wrglossary} counter, which is
  incremented every time an entry is indexed with that counter, and sets
  that as the default location counter},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.docdef,
  name={\styoptfmt{docdef}},
  user1={\meta{value}},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={determines whether
  entries can be defined in the \envfmt{document} environment; the
  \meta{value} may be one of: \styoptfmt{false} (entries must be 
  defined in the preamble), \styoptfmt{true} (entries may be defined
  in the \envfmt{document} environment), \styoptfmt{restricted}
  (entries may only be defined in the \envfmt{document} environment
  if the definition comes before all glossaries and before any
  reference to the entry)}
}

@dualindexentry{styopt.nomissingglstext,
  name={\styoptfmt{nomissingglstext}},
  user1={\meta{boolean}},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={if true, suppress the
  warning text that appears in the document with \cs{printglossary}
  if the associated external file doesn't exist}
}

@dualindexentry{styopt.stylemods,
  name={\styoptfmt{stylemods}},
  user1={\meta{value}},
  description={load the \sty{glossaries-extra-stylemods} package with the
  supplied options (which should be a list of suffix parts
  identifying glossary style packages \styfmt{glossary-}\meta{suffix}); 
  there are two keyword values: \styoptfmt{default}
  (equivalent to omitting \meta{value}) and \styoptfmt{all}, which
  loads all predefined styles},
  package={glossaries-extra},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.nowarn,
  name={\styoptfmt{nowarn}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={suppresses all \styfmt{glossaries}-related warnings}
}

@dualindexentry{styopt.nolangwarn,
  name={\styoptfmt{nolangwarn}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={suppresses warnings generated by missing language modules}
}

@dualindexentry{styopt.noredefwarn,
  name={\styoptfmt{noredefwarn}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={suppresses warnings if overriding glossary commands
   provided by another class or package}
}

@dualindexentry{styopt.debug,
  name={\styoptfmt{debug}},
  user1={\meta{value}},
  package={glossaries,glossaries-extra},
  category={packageoption},
  parent={packageoptions},
  description={add debugging information; allowed values: 
  \styoptfmt{false} (default), \styoptfmt{true} (info added to
   transcript), \styoptfmt{showtargets} (info added to transcript
   and show target name in the document for glossary-related 
   hyperlinks), \styoptfmt{showwrgloss}\extstyopt\ show mark in
   document where indexing occurs and \styoptfmt{all}\extstyopt\
   (implement both \styoptfmt{showtargets} and
   \styoptfmt{showwrgloss})}
}

@dualindexentry{styopt.seenoindex,
  name={\styoptfmt{seenoindex}},
  user1={\meta{value}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={determines whether the 
  \field{see} key automatically indexes the entry using \cs{glsadd}; 
  allowed values: \styoptfmt{error} (attempts indexing but triggers
  an error if used before \cs{cs.makeglossaries}); \styoptfmt{warn}
  (attempts indexing but triggers a warning if used before
  \cs{cs.makeglossaries}); \styoptfmt{ignore} (attempts indexing but
  does nothing if used before \cs{cs.makeglossaries})}
}

@dualindexentry{styopt.nomain,
  name={\styoptfmt{nomain}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={suppresses the creation of the default \code{main}
  glossary. If used an alternative glossary must be created}
}

@dualindexentry{styopt.sanitizesort,
  name={\styoptfmt{sanitizesort}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={determines whether or not
   to sanitize the \field{sort} key}
}

@dualindexentry{styopt.savewrites,
  name={\styoptfmt{savewrites}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={if true, indexing
  information is stored in token registers that are only written at
  the end of the document to save creating a write register per
  glossary indexing file}
}

@dualindexentry{styopt.translate,
  name={\styoptfmt{translate}},
  user1={\meta{value}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={determines the multilingual support provided by
   \styfmt{glossaries}; allowed values: \styoptfmt{true} (default
   with just base \styfmt{glossaries}; if
   \styfmt{babel} has been loaded and \styfmt{translator} is
   installed, use \styfmt{translator} interface), \styoptfmt{false}
   (don't provide translations), \styoptfmt{babel} (default with
   \styfmt{glossaries-extra}; don't load the 
   \styfmt{translator} package, just load \styfmt{glossaries-babel})}
}

@dualindexentry{styopt.notranslate,
  name={\styoptfmt{notranslate}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={equivalent to \styopt[false]{translate}}
}

@dualindexentry{styopt.nohypertypes,
  name={\styoptfmt{nohypertypes}},
  user1={\meta{list}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={suppress hyperlinks for the listed glossary types}
}

@dualindexentry{styopt.hyperfirst,
  name={\styoptfmt{hyperfirst}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if false, terms on first use don't have hyperlinks
  unless explicitly set (with \styfmt{glossaries-extra}, the 
  \catattr{nohyperfirst} category attribute can selectively apply this)}
}

@dualindexentry{styopt.indexonlyfirst,
  name={\styoptfmt{indexonlyfirst}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, only performs indexing on first use}
}

@dualindexentry{styopt.savenumberlist,
  name={\styoptfmt{savenumberlist}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, stores the number list for each entry (with
  \bibgls\ use the \csopt{save-locations} resource option instead)}
}

@dualindexentry{styopt.toc,
  name={\styoptfmt{toc}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true (default for \styfmt{glossaries-extra}), 
  automatically add each glossary to the table of contents}
}

@dualindexentry{styopt.numberline,
  name={\styoptfmt{numberline}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={when used with \styopt[true]{toc}, this will add 
  \code{\csfmt{numberline}\marg{}} to the start of the TOC entry}
}

@dualindexentry{styopt.section,
  name={\styoptfmt{section}},
  user1={\meta{value}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={indicates the sectional unit to use for the glossary
  heading (the value should be the name of the section command without
  the leading backslash, for example \styopt[subsection]{section}).
  If no value is supplied then \styopt[section]{section} is assumed.
  If this option is omitted, then the default is either
  \styopt[chapter]{section} or \styopt[section]{section}, depending
  on whether or not \cs{chapter} has been defined. The starred or 
  unstarred version is determined by \styopt{numberedsection}}
}

@dualindexentry{styopt.ucmark,
  name={\styoptfmt{ucmark}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, converts the glossary mark (used in page
  headings) to upper case with \cs{MakeTextUppercase}}
}

@dualindexentry{styopt.numberedsection,
  name={\styoptfmt{numberedsection}},
  user1={\meta{value}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={determines whether to use numbered or unnumbered 
  section units, and whether or not to automatically add
  \cs{label}; the value may be one of: \styoptfmt{false} (default, no
  numbering and no label), \styoptfmt{nolabel} (numbered but no
  label), \styoptfmt{autolabel} (numbered with automatic label), 
  \styoptfmt{nameref} (unnumbered but labelled). If no value is
  given \styoptfmt{nolabel} is assumed}
}

@dualindexentry{styopt.entrycounter,
  name={\styoptfmt{entrycounter}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, creates the \counter{glossaryentry} counter
  and each main (level 0) glossary entry will be
  numbered (which can be referenced with \cs{glsrefentry} or 
  \cs{glsxtrpageref})}
}

@dualindexentry{styopt.counterwithin,
  name={\styoptfmt{counterwithin}},
  user1={\meta{counter name}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={automatically sets \styopt[true]{entrycounter} and 
  indicates the master counter for \counter{glossaryentry}}
}

@dualindexentry{styopt.subentrycounter,
  name={\styoptfmt{subentrycounter}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, creates the \counter{glossarysubentry} counter
  and each level~1 glossary entry will be
  numbered (which can be referenced with \cs{glsrefentry} or 
  \cs{glsxtrpageref}); this option and associated counter are
  independent of \styopt{entrycounter} and \counter{glossaryentry}}
}

@dualindexentry{styopt.style,
  name={\styoptfmt{style}},
  user1={\meta{name}},
  package={glossaries},
  description={sets the default glossary style to \meta{name}},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.nolong,
  name={\styoptfmt{nolong}},
  package={glossaries},
  description={prevents the \sty{glossary-long} package (which
   provides the \glostyle{long} styles) from being
   automatically loaded},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.nosuper,
  name={\styoptfmt{nosuper}},
  package={glossaries},
  description={prevents the \sty{glossary-super} package (which
   provides the \glostyle{super} styles) from being
   automatically loaded},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.nolist,
  name={\styoptfmt{nolist}},
  package={glossaries},
  description={prevents the \sty{glossary-list} package (which
   provides the \glostyle{list} styles) from being
   automatically loaded},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.notree,
  name={\styoptfmt{notree}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={prevents the \sty{glossary-tree} package (which
   provides the \glostyle{tree} styles) from being
   automatically loaded}
}

@dualindexentry{styopt.nostyles,
  name={\styoptfmt{nostyles}},
  package={glossaries},
  description={prevents all the default styles from being loaded. If
   this option is used a style must be defined in the document or a package
   providing a style needs to be loaded (either 
   through \styopt{stylemods} or with \ics{usepackage})},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.esclocations,
  name={\styoptfmt{esclocations}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={if true,
  \styfmt{glossaries} tries to escape special characters from the
  locations}
}

@dualindexentry{styopt.nonumberlist,
  name={\styoptfmt{nonumberlist}},
  package={glossaries},
  description={suppresses the location lists from being
  displayed in the glossary lists (the package
  option isn't boolean, but the option of the same name for
  \cs{printglossary}, \cs{printunsrtglossary} and
  \cs{printnoidxglossary} is boolean); with \bibgls\ you can use
  \csopt[false]{save-locations} instead},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.seeautonumberlist,
  name={\styoptfmt{seeautonumberlist}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={if \styopt{nonumberlist}
  is used, this allows the \field{see} key to override the setting
  for the associated entry}
}

@dualindexentry{styopt.counter,
  name={\styoptfmt{counter}},
  user1={\meta{value}},
  description={sets the default location counter to \meta{value}
  (which must be the name of a counter). May be overridden on 
  an individual basis using the
   \glsopt{counter} option in commands like \cs{gls} and \cs{glsadd}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.nogroupskip,
  name={\styoptfmt{nogroupskip}},
  user1={\meta{boolean}},
  description={if true, suppresses the visual separation between
  letter groups in glossary styles that support this option},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.sort,
  name={\styoptfmt{sort}},
  user1={\meta{value}},
  note={not relevant with \bibgls, use the \csopt{sort}
   resource option instead},
  description={indicates how to assign the \field{sort} key if not
   explicitly set, the value may be one of: \styoptfmt{none} (don't
   automatically assign the \field{sort} field), \styoptfmt{standard}
   (obtain the \field{sort} value from the \field{name} field),
   \styoptfmt{def} (assign the \field{sort} field to a numerical value 
   that represents the order of definition), \styoptfmt{user}
   (assign the \field{sort} field to a numerical value that
   represents the order of first use)},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.order,
  name={\styoptfmt{order}},
  user1={\meta{value}},
  note={not relevant with \bibgls, use the \csopt{break-at}
   resource option instead},
  description={sets whether to use word or letter ordering},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.makeindex,
  name={\styoptfmt{makeindex}},
  note={not relevant with \bibgls},
  description={write the indexing
   information using \idx{makeindex}'s format},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.xindy,
  name={\styoptfmt{xindy}},
  user1={\meta{settings}},
  note={not relevant with \bibgls},
  description={write the indexing
   information using \idx{xindy}'s format where the optional
   \meta{settings} may supply the language and code page and whether
   or not to define the default number group},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.xindygloss,
  name={\styoptfmt{xindygloss}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={equivalent to \styopt[\empty]{xindy}}
}

@dualindexentry{styopt.xindynoglsnumbers,
  name={\styoptfmt{xindynoglsnumbers}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  note={not relevant with \bibgls},
  description={equivalent to \styopt[glsnumbers=false]{xindy}}
}

@dualindexentry{styopt.automake,
  name={\styoptfmt{automake}},
  user1={\meta{boolean}},
  description={if true, tries to use \TeX's shell escape to
   automatically run the required indexing application (may not
   be permitted by \TeX's security settings)},
  package={glossaries},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.acronym,
  name={\styoptfmt{acronym}},
  user1={\meta{boolean}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={if true, creates a new glossary with the label \code{acronym}}
}

@dualindexentry{styopt.acronyms,
  name={\styoptfmt{acronyms}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={equivalent to \styopt[true]{acronym}}
}

@dualindexentry{styopt.acronymlists,
  name={\styoptfmt{acronymlists}},
  user1={\meta{list}},
  package={glossaries},
  category={packageoption},
  parent={packageoptions},
  description={identifies the glossaries that are lists of acronyms
  (don't use with \sty{glossaries-extra})}
}

@dualindexentry{styopt.shortcuts,
  name={\styoptfmt{shortcuts}},
  package={glossaries,glossaries-extra},
  user1={\meta{value}},
  description={sets up short cut commands; the value may be one of
  \styoptfmt{false} (default), \styoptfmt{true} (assumed if no value
   supplied, implements 
   \styopt[ac]{shortcuts}, \styopt[abbreviations]{shortcuts} and
   \styopt[other]{shortcuts}), \styoptfmt{acronyms}\extstyopt\ 
   (equivalent to base \styopt[true]{shortcuts}, synonym
   \styoptfmt{acro}), \styoptfmt{ac}\extstyopt\ (provides \cs{ac}
   shortcuts that use \styfmt{glossaries-extra}'s new abbreviation
   commands), \styoptfmt{abbreviations}\extstyopt\ (provides \cs{ab}
   shortcuts), \styoptfmt{other}\extstyopt\ (provides other shortcut
   commands), \styoptfmt{all}\extstyopt\ (synonym for
   \styopt[true]{shortcuts}) and \styoptfmt{none}\extstyopt\ (synonym 
   for \styopt[false]{shortcuts})},
  category={packageoption},
  parent={packageoptions}
}

@dualindexentry{styopt.index,
  name={\styoptfmt{index}},
  package={glossaries},
  description={defines the \code{index} glossary and \csref{newterm}},
  category={packageoption},
  parent={packageoptions}
}

@index{fields,
  name={fields},
  text={field}
}

@dualindexentry{field.alias,
  name={\fieldfmt{alias}},
  description={The entry with this field set is a synonym of the 
    entry whose label is given by this field.},
  note={\styfmt{glossaries-extra}},
  category={extrafield},
  parent={fields}
}

@dualindexentry{field.category,
  name={\fieldfmt{category}},
  description={The entry's category label.},
  note={\styfmt{glossaries-extra}},
  category={extrafield},
  parent={fields}
}

@dualindexentry{field.description,
  name={\fieldfmt{description}},
  description={The description displayed in the glossary.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.descriptionplural,
  name={\fieldfmt{descriptionplural}},
  description={The plural form of the description.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.first,
  name={\fieldfmt{first}},
  description={The text to display on first use with \cs{gls}\margm{label}.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.firstplural,
  name={\fieldfmt{firstplural}},
  description={The text to display on first use with \cs{glspl}\margm{label}.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.long,
  name={\fieldfmt{long}},
  description={The long form of an abbreviation. (Set internally
  by commands like \csref{newabbreviation}.)},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.longplural,
  name={\fieldfmt{longplural}},
  description={The plural long form of an abbreviation.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.name,
  name={\fieldfmt{name}},
  description={The name displayed in the glossary.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.parent,
  name={\fieldfmt{parent}},
  description={The parent entry's label.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.plural,
  name={\fieldfmt{plural}},
  description={The text to display on subsequent use of
    \cs{glspl}\margm{label}.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.see,
  name={\fieldfmt{see}},
  description={General purpose cross-reference
   (syntax: \code{see=\marg{\oargm{tag}\meta{xr-list}}}).},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.seealso,
  name={\fieldfmt{seealso}},
  description={Cross-reference related entries
     (syntax: \code{seealso=\margm{xr-list}}).},
  note={\styfmt{glossaries-extra}},
  category={extrafield},
  parent={fields}
}

@dualindexentry{field.short,
  name={\fieldfmt{short}},
  description={The short form of an abbreviation. (Set internally
  by commands like \csref{newabbreviation}.)},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.shortplural,
  name={\fieldfmt{shortplural}},
  description={The plural short form of an abbreviation.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.symbol,
  name={\fieldfmt{symbol}},
  description={The associated symbol.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.symbolplural,
  name={\fieldfmt{symbolplural}},
  description={The plural form of the associated symbol.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.text,
  name={\fieldfmt{text}},
  description={The text to display on subsequent use of 
    \cs{gls}\margm{label}.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user1,
  name={\fieldfmt{user1}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user2,
  name={\fieldfmt{user2}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user3,
  name={\fieldfmt{user3}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user4,
  name={\fieldfmt{user4}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user5,
  name={\fieldfmt{user5}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.user6,
  name={\fieldfmt{user6}},
  description={A general purpose user field.},
  note={\styfmt{glossaries}},
  category={basefield},
  parent={fields}
}

@dualindexentry{field.duallong,
  name={\fieldfmt{duallong}},
  description={The long form of a dual
    abbreviation mapped by \atentry{dualabbreviation}.},
  note={\appfmt{bib2gls}},
  category={bib2glsfield},
  parent={fields}
}

@dualindexentry{field.duallongplural,
  name={\fieldfmt{duallongplural}},
  description={The plural long form of a dual
    abbreviation mapped by \atentry{dualabbreviation}.},
  note={\appfmt{bib2gls}},
  category={bib2glsfield},
  parent={fields}
}

@dualindexentry{field.dualshort,
  name={\fieldfmt{dualshort}},
  description={The short form of a dual
    abbreviation mapped by \atentry{dualabbreviation}.},
  note={\appfmt{bib2gls}},
  category={bib2glsfield},
  parent={fields}
}

@dualindexentry{field.dualshortplural,
  name={\fieldfmt{dualshortplural}},
  description={The plural short form of a dual abbreviation
    mapped by \atentry{dualabbreviation}.},
  note={\appfmt{bib2gls}},
  category={bib2glsfield},
  parent={fields}
}

@dualindexentry{field.prefix,
  name={\fieldfmt{prefix}},
  description={The prefix associated with the \field{text}
    field.},
  note={\styfmt{glossaries-prefix}},
  category={prefixfield},
  parent={fields}
}

@dualindexentry{field.prefixfirst,
  name={\fieldfmt{prefixfirst}},
  description={The prefix associated with the \field{first}
field.},
  note={\styfmt{glossaries-prefix}},
  category={prefixfield},
  parent={fields}
}

@dualindexentry{field.prefixfirstplural,
  name={\fieldfmt{prefixfirstplural}},
  description={The prefix associated with the
    \field{firstplural} field.},
  note={\styfmt{glossaries-prefix}},
  category={prefixfield},
  parent={fields}
}

@dualindexentry{field.prefixplural,
  name={\fieldfmt{prefixplural}},
  description={The prefix associated with the
    \field{plural} field.},
  note={\styfmt{glossaries-prefix}},
  category={prefixfield},
  parent={fields}
}

@dualindexentry{field.access,
  name={\fieldfmt{access}},
  description={The replacement text for the \field{name} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.descriptionaccess,
  name={\fieldfmt{descriptionaccess}},
  description={The replacement text for the
    \field{description} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.descriptionpluralaccess,
  name={\fieldfmt{descriptionpluralaccess}},
  description={The replacement text for the
    \field{descriptionplural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.firstaccess,
  name={\fieldfmt{firstaccess}},
  description={The replacement text for the \field{first} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.firstpluralaccess,
  name={\fieldfmt{firstpluralaccess}},
  description={The replacement text for the
   \field{firstplural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.longaccess,
  name={\fieldfmt{longaccess}},
  description={The replacement text for the \field{long} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.longpluralaccess,
  name={\fieldfmt{longpluralaccess}},
  description={The replacement text for the
    \field{longplural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.pluralaccess,
  name={\fieldfmt{pluralaccess}},
  description={The replacement text for the \field{plural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.shortaccess,
  name={\fieldfmt{shortaccess}},
  description={The replacement text for the \field{short} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.shortpluralaccess,
  name={\fieldfmt{shortpluralaccess}},
  description={The replacement text for the
   \field{shortplural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.symbolaccess,
  name={\fieldfmt{symbolaccess}},
  description={The replacement text for the \field{symbol} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.symbolpluralaccess,
  name={\fieldfmt{symbolpluralaccess}},
  description={The replacement text for the
    \field{symbolplural} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@dualindexentry{field.textaccess,
  name={\fieldfmt{textaccess}},
  description={The replacement text for the
     \field{text} field.},
  note={\styfmt{glossaries-accsupp}},
  category={accessfield},
  parent={fields}
}

@index{internalfields,
  name={fields, internal},
  text={internal fields}
}

@dualindexentry{field.childcount,
  name={\fieldfmt{childcount}},
  description={Stores the number of children this entry has
    had selected.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.childlist,
  name={\fieldfmt{childlist}},
  description={A list of labels (in \sty{etoolbox}'s internal list
   format) of the children this entry has had selected.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.primarylocations,
  name={\fieldfmt{primarylocations}},
  description={Stores the locations that use one of the designated
primary formats, if enabled.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.indexcounter,
  name={\fieldfmt{index\-counter}},
  description={Stores the location corresponding to the matching
\counter{wrglossary} reference.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.counter,
  name={\fieldfmt{counter}},
  description={The default counter used for indexing (assigned by
   the \csopt{counter} option).},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.group,
  name={\fieldfmt{group}},
  description={The letter group determined by the comparator
   (or assigned by the \csopt{group} option).},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.location,
  name={\fieldfmt{location}},
  description={The typeset location list.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.loclist,
  name={\fieldfmt{loclist}},
  description={The internal list of locations.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.recordcount,
  name={\fieldfmt{recordcount}},
  description={Used with record counting to store the
    total record count.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.recordcount.counter,
  name={\fieldfmt{recordcount.\discretionary{}{}{}\meta{counter}}},
  description={Used with record counting to store the
   total number of records for a given counter.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.recordcount.counter.location,
  name={\fieldfmt{recordcount.\discretionary{}{}{}\meta{counter}.\discretionary{}{}{}\meta{location}}},
  description={Used with record counting to store the
   total number of records for a given location.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.secondarygroup,
  name={\fieldfmt{secondarygroup}},
  description={The letter group determined by the
    comparator used with the \csopt{secondary} sort.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.secondarysort,
  name={\fieldfmt{secondarysort}},
  description={The sort value determined by the
   comparator used with the \csopt{secondary} sort.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.dual,
  name={\fieldfmt{dual}},
  description={Created by \csopt{dual-field} if set with no value,
   this field is used to store the dual label.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.sort,
  name={\fieldfmt{sort}},
  description={The sort value obtained by the comparator.},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.type,
  name={\fieldfmt{type}},
  description={The glossary this entry belongs to (assigned by
   the \csopt{type} option).},
  note={internal field set by \appfmt{bib2gls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.fieldendpunc,
  name={\meta{field}\fieldfmt{endpunc}},
  description={Used with the \csopt{check-end-punctuation}
  option.},
  note={internal field set by \appfmt{bibgls}},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.bibtextype,
  name={\fieldfmt{bib\-tex\-type}},
  description={Used by \bibgls\ as a substitution for \BibTeX's
   \fieldfmt{type} field when parsing \atentry{bibtexentry}. Needs
   to be defined or aliased to make it available in the document.},
  note={internal field set by \bibgls},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.bibtexcontributor,
  name={\fieldfmt{bib\-tex\-con\-trib\-u\-tor}},
  description={An internal list field provided when a
  \atentry{contributor} entry is automatically
  created by \atentry{bibtexentry}.},
  note={internal field set by \bibgls},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.bibtexentry,
  name={\fieldfmt{bib\-tex\-entry}},
  description={An internal list field created by \atentry{bibtexentry}.},
  note={internal field set by \bibgls},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.bibtexentry@entrytype,
  name={\fieldfmt{bib\-tex\-entry\-@\meta{entry-type}}},
  description={An internal list field created by \atentry{bibtexentry}.},
  note={internal field set by \bibgls},
  category={internalfield},
  parent={internalfields}
}

@dualindexentry{field.currcount,
  name={\fieldfmt{currcount}},
  description={Used with entry counting to store the current total.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.currcountunit,
  name={\fieldfmt{currcount@}\meta{value}},
  description={Used with unit entry counting (\styfmt{glossaries-extra}).},
  note={internal field set by \styfmt{glossaries-extra}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.desc,
  name={\fieldfmt{desc}},
  description={Corresponds to \field{description} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.descplural,
  name={\fieldfmt{descplural}},
  description={Corresponds to \field{descriptionplural} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.firstpl,
  name={\fieldfmt{firstpl}},
  description={Corresponds to \field{firstplural} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.flag,
  name={\fieldfmt{flag}},
  description={Boolean that determines if an entry has been used.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.index,
  name={\fieldfmt{index}},
  description={The main part of the indexing code
    (\appfmt{makeindex} or \appfmt{xindy}).},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.level,
  name={\fieldfmt{level}},
  description={Hierarchical level.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.longpl,
  name={\fieldfmt{longpl}},
  description={Corresponds to \field{longplural} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.nonumberlist,
  name={\fieldfmt{nonumberlist}},
  description={Used to suppress the location list for a specific entry.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.prevcount,
  name={\fieldfmt{prevcount}},
  description={Used with entry counting to store the total 
   from the previous run.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.prevcountunit,
  name={\fieldfmt{prevcount@}\meta{value}},
  description={Used with unit entry counting
    (\styfmt{glossaries-extra}).},
  note={internal field set by \styfmt{glossaries-extra}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.prevunitmax,
  name={\fieldfmt{prevunitmax}},
  description={Used with unit entry counting
    (\styfmt{glossaries-extra}).},
  note={internal field set by \styfmt{glossaries-extra}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.prevunittotal,
  name={\fieldfmt{prevunittotal}},
  description={Used with unit entry counting
   (\styfmt{glossaries-extra}).},
  note={internal field set by \styfmt{glossaries-extra}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.shortpl,
  name={\fieldfmt{shortpl}},
  description={Corresponds to \field{shortplural} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.sortvalue,
  name={\fieldfmt{sortvalue}},
  description={Original \field{sort} value 
   (before sanitizing and escaping special characters).},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.unitlist,
  name={\fieldfmt{unitlist}},
  description={Used with unit entry counting
   (\styfmt{glossaries-extra}).},
  note={internal field set by \styfmt{glossaries-extra}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.useri,
  name={\fieldfmt{useri}},
  description={Corresponds to \field{user1} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.userii,
  name={\fieldfmt{userii}},
  description={Corresponds to \field{user2} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.useriii,
  name={\fieldfmt{useriii}},
  description={Corresponds to \field{user3} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.useriv,
  name={\fieldfmt{useriv}},
  description={Corresponds to \field{user4} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.userv,
  name={\fieldfmt{userv}},
  description={Corresponds to \field{user5} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.uservi,
  name={\fieldfmt{uservi}},
  description={Corresponds to \field{user6} key.},
  note={internal field set by \styfmt{glossaries}},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.bib2gls@sort,
  name={\fieldfmt{bib2gls@sort}},
  description={Used by \bibgls\ to store the actual sort value.},
  note={internal field set by \bibgls},
  category={baseinternalfield},
  parent={internalfields}
}

@dualindexentry{field.bib2gls@sortfallback,
  name={\fieldfmt{bib2gls@sortfallback}},
  description={Used by \bibgls\ to store the sort fallback value.},
  note={internal field set by \bibgls},
  category={baseinternalfield},
  parent={internalfields}
}

@index{entrytypes,
  name={entry types},
  text={entry type}
}

@dualindexentry{entry.string,
  name={\atentryfmt{string}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.preamble,
  name={\atentryfmt{preamble}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.entry,
  name={\atentryfmt{entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.symbol,
  name={\atentryfmt{symbol}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.number,
  name={\atentryfmt{number}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.index,
  name={\atentryfmt{index}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.indexplural,
  name={\atentryfmt{indexplural}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.abbreviation,
  name={\atentryfmt{abbreviation}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.acronym,
  name={\atentryfmt{acronym}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualentry,
  name={\atentryfmt{dual\-entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualindexentry,
  name={\atentryfmt{dual\-index\-entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualindexabbreviation,
  name={\atentryfmt{dual\-index\-abbre\-via\-tion}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualindexsymbol,
  name={\atentryfmt{dual\-index\-symbol}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualindexnumber,
  name={\atentryfmt{dual\-index\-number}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualabbreviationentry,
  name={\atentryfmt{dual\-abbre\-via\-tion\-entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualentryabbreviation,
  name={\atentryfmt{dual\-entry\-abbre\-via\-tion}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualsymbol,
  name={\atentryfmt{dual\-symbol}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualnumber,
  name={\atentryfmt{dual\-number}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualabbreviation,
  name={\atentryfmt{dual\-abbre\-via\-tion}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.dualacronym,
  name={\atentryfmt{dual\-acronym}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.tertiaryindexabbreviationentry,
  name={\atentryfmt{tert\-iary\-index\-abbre\-via\-tion\-entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.bibtexentry,
  name={\atentryfmt{bib\-tex\-entry}},
  category={entrytype},
  parent={entrytypes}
}

@dualindexentry{entry.contributor,
  name={\atentryfmt{contributor}},
  category={entrytype},
  parent={entrytypes}
}

@index{switches,
  name={switches},
  text={switch},
  plural={switches},
  see={commandlineoptions}
}

@index{commandlineoptions,
  name={command line options},
  text={command line option}
}

@dualindexentry{switch.help,
  name={\longargfmt{help}},
  symbol={\shortargfmt{h}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.version,
  name={\longargfmt{version}},
  symbol={\shortargfmt{v}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.debug,
  name={\longargfmt{debug}},
  user1={\oargm{n}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-debug,
  name={\longargfmt{no\dhyphen debug}},
  symbol={\longargfmt{nodebug}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.verbose,
  name={\longargfmt{verbose}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-verbose,
  name={\longargfmt{no\dhyphen verbose}},
  symbol={\longargfmt{noverbose}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.silent,
  name={\longargfmt{silent}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.locale,
  name={\longargfmt{locale}},
  symbol={\shortargfmt{l}},
  user1={\meta{lang}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.log-file,
  name={\longargfmt{log\dhyphen file}},
  symbol={\shortargfmt{t}},
  user1={\meta{filename}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.dir,
  name={\longargfmt{dir}},
  symbol={\shortargfmt{d}},
  user1={\meta{dirname}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.interpret,
  name={\longargfmt{interpret}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-interpret,
  name={\longargfmt{no\dhyphen interpret}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.break-space,
  name={\longargfmt{break\dhyphen space}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-break-space,
  name={\longargfmt{no\dhyphen break\dhyphen space}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.cite-as-record,
  name={\longargfmt{cite\dhyphen as\dhyphen record}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-cite-as-record,
  name={\longargfmt{no\dhyphen cite\dhyphen as\dhyphen record}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.merge-wrglossary-records,
  name={\longargfmt{merge\dhyphen wrglossary\dhyphen records}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-merge-wrglossary-records,
  name={\longargfmt{no\dhyphen merge\dhyphen wrglossary\dhyphen records}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.merge-nameref-on,
  name={\longargfmt{merge\dhyphen nameref\dhyphen on}},
  user1={\meta{rule}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.force-cross-resource-refs,
  name={\longargfmt{force\dhyphen cross\dhyphen resource\dhyphen refs}},
  symbol={\shortargfmt{x}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-force-cross-resource-refs,
  name={\longargfmt{no\dhyphen force\dhyphen cross\dhyphen resource\dhyphen refs}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.support-unicode-script,
  name={\longargfmt{support\dhyphen unicode\dhyphen script}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-support-unicode-script,
  name={\longargfmt{no\dhyphen support\dhyphen unicode\dhyphen script}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.packages,
  name={\longargfmt{packages}},
  symbol={\shortargfmt{p}},
  user1={\meta{list}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.ignore-packages,
  name={\longargfmt{ignore-packages}},
  symbol={\shortargfmt{k}},
  user1={\meta{list}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.custom-packages,
  name={\longargfmt{custom\dhyphen packages}},
  user1={\meta{list}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.list-known-packages,
  name={\longargfmt{list\dhyphen known\dhyphen packages}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.mfirstuc-protection,
  name={\longargfmt{mfirstuc\dhyphen protection}},
  symbol={\shortargfmt{u}},
  user1={\meta{list}\argor\code{all}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-mfirstuc-protection,
  name={\longargfmt{no\dhyphen mfirstuc\dhyphen protection}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.mfirstuc-math-protection,
  name={\longargfmt{mfirstuc\dhyphen math\dhyphen protection}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-mfirstuc-math-protection,
  name={\longargfmt{no\dhyphen mfirstuc\dhyphen math\dhyphen protection}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.nested-link-check,
  name={\longargfmt{nested\dhyphen link\dhyphen check}},
  user1={\meta{list}\argor\code{none}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-nested-link-check,
  name={\longargfmt{no\dhyphen nested\dhyphen link\dhyphen check}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.shortcuts,
  name={\longargfmt{shortcuts}},
  user1={\meta{value}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.map-format,
  name={\longargfmt{map\dhyphen format}},
  symbol={\shortargfmt{m}},
  user1={\meta{map:value list}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.group,
  name={\longargfmt{group}},
  symbol={\shortargfmt{g}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-group,
  name={\longargfmt{no\dhyphen group}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.tex-encoding,
  name={\longargfmt{tex\dhyphen encoding}},
  user1={\meta{name}},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-expand-fields,
  name={\longargfmt{no\dhyphen expand\dhyphen fields}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.expand-fields,
  name={\longargfmt{expand\dhyphen fields}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.record-count,
  name={\longargfmt{record\dhyphen count}},
  symbol={\shortargfmt{c}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-record-count,
  name={\longargfmt{no\dhyphen record\dhyphen count}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.record-count-unit,
  name={\longargfmt{record\dhyphen count\dhyphen unit}},
  symbol={\shortargfmt{n}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-record-count-unit,
  name={\longargfmt{no\dhyphen record\dhyphen count\dhyphen unit}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.trim-fields,
  name={\longargfmt{trim\dhyphen fields}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@dualindexentry{switch.no-trim-fields,
  name={\longargfmt{no\dhyphen trim\dhyphen fields}},
  user1={},
  category={switch},
  parent={commandlineoptions}
}

@index{lettergroup,
  name={letter group}
}

@index{nonlettergroup,
  name={non-letter group}
}

@index{symbolgroup,
  name={symbol group},
  alias={nonlettergroup}
}

@index{emptygroup,
  name={empty group (unknown commands)},
  text={empty group}
}

@index{numbergroup,
  name={number group}
}

@index{datetimegroup,
  name={date-time group}
}

@index{dategroup,
  name={date group}
}

@index{timegroup,
  name={time group}
}

@index{customgroup,
  name={custom group}
}

@index{localeprovider,
  name={locale provider}
}

@index{ignoredglossary,
  name={ignored glossary},
  plural={ignored glossaries}
}

@index{ignoredrecord,
  name={ignored record}
}

@index{record,
  seealso={ignoredrecord}
}

@index{locationlist,
  name = {location list}
}

@index{postlinkhook,
  name={post-link hook}
}

@index{postnamehook,
  name={post-name hook}
}

@index{postdescriptionhook,
  name={post-description hook}
}

@index{languagexml,
  name={language resource file (\extfmt{xml})}
}

@index{tag.page,
  name={\xmltagfmt{tag.page}},
  parent={languagexml}
}

@index{tag.pages,
  name={\xmltagfmt{tag.pages}},
  parent={languagexml}
}

@index{tag.passim,
  name={\xmltagfmt{tag.passim}},
  parent={languagexml}
}

@index{sentence.terminators,
  name={\xmltagfmt{sentence.terminators}},
  parent={languagexml}
}

@index{grouptitle.case.lc,
  name={\xmltagfmt{grouptitle.case.}\meta{lc}},
  parent={languagexml}
}

@index{xmlsee,
  name={XML resource file},
  see={languagexml}
}

@index{encoding}

@index{digraph}

@index{trigraph}

@index{primary}

@index{dual}

@index{secondary,
 seealso={dual}}

@index{tertiary}

@index{non-ASCII}

@index{full-stop,
  name={full stop (\code{.})},
  text={full stop}
}

@index{period,
  alias={full-stop}
}

@index{apostrophe,
  name={apostrophe (\code{'})},
  text={apostrophe}
}

@index{resourceset,
  name={resource set}
}

@index{crossresourceref,
  name={cross-resource reference}
}

@index{firstuse,
  name={first use}
}

@index{subsequentuse,
  name={subsequent use}
}

@index{firstuseflag,
  name={first use flag}
}

@index{link-text,
 name={link text}
}

@index{parent-entry,
  name={parent entry},
  plural={parent entries}
}

@index{child-entry,
  name={child entry},
  plural={child entries}
}

@index{hierarchical-entry,
  name={hierarchical entry},
  plural={hierarchical entries}
}

@index{robust}
@index{fragile}
@index{expandable}
@index{regular}
@index{non-regular}
@index{variant}
@index{homograph}

@index{moving-argument,
  name={moving argument}
}

@index{uppercase,
 name={upper case}
}

@index{lowercase,
 name={lower case}
}

@index{titlecase,
 name={title case}
}

@index{sentencecase,
 name={sentence case}
}

@index{case-change,
  name = {case-change},
  seealso = {uppercase,lowercase,titlecase,sentencecase}
}

@index{unicodecategories,
  name={Unicode categories},
  text={Unicode category},
  plural={Unicode categories}
}

@index{numberdecimaldigit,
  name={\unicodecategoryfmt{Number, Decimal Digit}},
  parent={unicodecategories}
}

@index{separatorspace,
  name={\unicodecategoryfmt{Separator, Space}},
  parent={unicodecategories}
}

@index{letteruppercase,
  name={\unicodecategoryfmt{Letter, Uppercase}},
  parent={unicodecategories}
}

@index{letterlowercase,
  name={\unicodecategoryfmt{Letter, Lowercase}},
  parent={unicodecategories}
}

@index{lettertitlecase,
  name={\unicodecategoryfmt{Letter, Titlecase}},
  parent={unicodecategories}
}

@index{lettermodifier,
  name={\unicodecategoryfmt{Letter, Modifier}},
  parent={unicodecategories}
}

@index{letterother,
  name={\unicodecategoryfmt{Letter, Other}},
  parent={unicodecategories}
}

@index{punctuationclose,
  name={\unicodecategoryfmt{Punctuation, Close}},
  parent={unicodecategories}
}

@index{punctuationfinalquote,
  name={\unicodecategoryfmt{Punctuation, Final quote}},
  parent={unicodecategories}
}

@index{punctuationother,
  name={\unicodecategoryfmt{Punctuation, Other}},
  parent={unicodecategories}
}

@index{punctuationdash,
  name={\unicodecategoryfmt{Punctuation, Dash}},
  parent={unicodecategories}
}

@index{texmfcnf.openinany,
  name={\texmfcnffmt{openin\_any}}
}

@index{texmfcnf.openoutany,
  name={\texmfcnffmt{openout\_any}}
}

@index{file.bib2gls-en.xml,
  name={\filefmt{bib2gls-en.xml}}
}

@index{file.bib2gls.sh,
  name={\filefmt{bib2gls.sh}}
}

@index{file.convertgls2bib.sh,
  name={\filefmt{convert\-gls2bib.sh}}
}

@index{file.texparserlib.jar,
  name={\filefmt{texparserlib.jar}}
}

@index{file.bib2gls.jar,
  name={\filefmt{bib2gls.jar}}
}

@index{file.convertgls2bib.jar,
  name={\filefmt{convert\-gls2bib.jar}}
}

@index{file.bib2gls.bat,
  name={\filefmt{bib2gls.bat}}
}

@index{file.xampl.bib,
  name={\filefmt{xampl.bib}}
}

@index{file.sample-dual.tex,
  name={\filefmt{sample\dhyphen dual.tex}}
}

@dualindexentry{file.no-interpret-preamble.bib,
  name={\filefmt{no\dhyphen interpret\dhyphen preamble.bib}}
}

@dualindexentry{file.interpret-preamble.bib,
  name={\filefmt{interpret\dhyphen preamble.bib}}
}

@dualindexentry{file.interpret-preamble2.bib,
  name={\filefmt{interpret\dhyphen preamble2.bib}}
}

@dualindexentry{file.people.bib,
  name={\filefmt{people.bib}}
}

@dualindexentry{file.sample-people.tex,
  name={\filefmt{sample\dhyphen people.tex}}
}

@dualindexentry{file.sample-authors.tex,
  name={\filefmt{sample\dhyphen authors.tex}}
}

@dualindexentry{file.sample-citations.tex,
  name={\filefmt{sample\dhyphen citations.tex}}
}

@dualindexentry{file.citations.bib,
  name={\filefmt{citations.bib}}
}

@dualindexentry{file.bacteria.bib,
  name={\filefmt{bacteria.bib}}
}

@dualindexentry{file.sample-bacteria.tex,
  name={\filefmt{sample\dhyphen bacteria.tex}}
}

@dualindexentry{file.chemicalformula.bib,
  name={\filefmt{chemicalformula.bib}}
}

@dualindexentry{file.sample-chemical.tex,
  name={\filefmt{sample\dhyphen chemical.tex}}
}

@dualindexentry{file.constants.bib,
  name={\filefmt{constants.bib}}
}

@dualindexentry{file.sample-constants.tex,
  name={\filefmt{sample\dhyphen constants.tex}}
}

@dualindexentry{file.baseunits.bib,
  name={\filefmt{baseunits.bib}}
}

@dualindexentry{file.derivedunits.bib,
  name={\filefmt{derivedunits.bib}}
}

@dualindexentry{file.sample-units1.tex,
  name={\filefmt{sample-units1.tex}}
}

@dualindexentry{file.sample-units2.tex,
  name={\filefmt{sample-units2.tex}}
}

@dualindexentry{file.sample-units3.tex,
  name={\filefmt{sample-units3.tex}}
}

@dualindexentry{file.books.bib,
  name={\filefmt{books.bib}}
}

@dualindexentry{file.films.bib,
  name={\filefmt{films.bib}}
}

@dualindexentry{file.sample-media.tex,
  name={\filefmt{sample\dhyphen media.tex}}
}

@dualindexentry{file.bigmathsymbols.bib,
  name={\filefmt{bigmathsymbols.bib}}
}

@dualindexentry{file.mathgreek.bib,
  name={\filefmt{mathgreek.bib}}
}

@dualindexentry{file.mathsrelations.bib,
  name={\filefmt{mathsrelations.bib}}
}

@dualindexentry{file.binaryoperators.bib,
  name={\filefmt{binaryoperators.bib}}
}

@dualindexentry{file.unaryoperators.bib,
  name={\filefmt{unaryoperators.bib}}
}

@dualindexentry{file.mathsobjects.bib,
  name={\filefmt{mathsobjects.bib}}
}

@dualindexentry{file.sample-msymbols.tex,
  name={\filefmt{sample\dhyphen msymbols.tex}}
}

@dualindexentry{file.sample-maths.tex,
  name={\filefmt{sample\dhyphen maths.tex}}
}

@dualindexentry{file.miscsymbols.bib,
  name={\filefmt{miscsymbols.bib}}
}

@dualindexentry{file.sample-textsymbols.tex,
  name={\filefmt{sample\dhyphen textsymbols.tex}}
}

@dualindexentry{file.markuplanguages.bib,
  name={\filefmt{markuplanguages.bib}}
}

@dualindexentry{file.sample-languages.tex,
  name={\filefmt{sample\dhyphen languages.tex}}
}

@dualindexentry{file.usergroups.bib,
  name={\filefmt{usergroups.bib}}
}

@dualindexentry{file.sample-usergroups.tex,
  name={\filefmt{sample\dhyphen usergroups.tex}}
}

@dualindexentry{file.animals.bib,
  name={\filefmt{animals.bib}}
}

@dualindexentry{file.vegetables.bib,
  name={\filefmt{vegetables.bib}}
}

@dualindexentry{file.minerals.bib,
  name={\filefmt{minerals.bib}}
}

@dualindexentry{file.terms.bib,
  name={\filefmt{terms.bib}}
}

@dualindexentry{file.sample-multi1.tex,
  name={\filefmt{sample\dhyphen multi1.tex}}
}

@dualindexentry{file.sample-multi2.tex,
  name={\filefmt{sample\dhyphen multi2.tex}}
}

@index{glshyperlink,
  name={\csfmt{gls\-hyper\-link}},
  user1={\oargm{link text}\margm{label}},
  description={creates a hyperlink to the entry information in the
   glossary},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrfielddolistloop,
  name={\csfmt{gls\-xtr\-field\-do\-list\-loop}},
  user1={\margm{label}\margm{field}},
  description={iterates over the items the given field, which contains
   an \styfmt{etoolbox} internal list},
  note={\styfmt{glossaries-extra} v1.12+},
  seealso={glsxtrfieldforlistloop,glsxtrfieldifinlist,glsxtrfieldlistadd},
  category={command}
}

@index{glsxtrfieldforlistloop,
  name={\csfmt{gls\-xtr\-field\-for\-list\-loop}},
  user1={\margm{label}\margm{field}\margm{handler}},
  description={iterates over the items the given field, which contains
   an \styfmt{etoolbox} internal list, using the given handler},
  note={\styfmt{glossaries-extra} v1.29+},
  seealso={glsxtrfielddolistloop,glsxtrfieldifinlist,glsxtrfieldlistadd},
  category={command}
}

@index{glsfieldfetch,
  name={\csfmt{gls\-field\-fetch}},
  user1={\margm{label}\margm{field}\margm{cs}},
  description={fetches the value of the given field for the given
   label and stores it in the command \meta{cs}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrautoindexassignsort,
  name={\csfmt{gls\-xtr\-auto\-index\-assign\-sort}},
  user1={\margm{cs}\margm{label}},
  description={assigns the sort value for \cs{index} when
   using auto-indexing},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{glsxtrautoindexentry,
  name={\csfmt{gls\-xtr\-auto\-index\-entry}},
  user1={\margm{label}},
  description={used for the actual value in \cs{index} when
   using auto-indexing},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{glsseeformat,
  name={\csfmt{gls\-see\-format}},
  user1={\margm{tag}\margm{labels}\margm{location (ignored)}},
  description={formats the entries identified in the comma separated
   list of labels as a set of cross-references},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtruseseeformat,
  name={\csfmt{gls\-xtr\-use\-see\-format}},
  user1={\margm{tag}\margm{labels}},
  description={formats the entries identified in the comma separated
   list of labels as a set of cross-references},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsextrapostnamehook,
  name={\csfmt{gls\-extra\-post\-name\-hook}},
  user1={\margm{label}},
  description={additional category-independent code for the
post-name hook},
  note={\styfmt{glossaries-extra} v1.25+},
  category={command}
}

@index{glsentrytext,
  name={\csfmt{gls\-entry\-text}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{text} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Glsentrytext,
  name={\csfmt{Gls\-entry\-text}},
  user1={\margm{label}},
  description={like \cs{glsentrytext} but converts the first letter
to upper case},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryplural,
  name={\csfmt{gls\-entry\-plural}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{plural} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryname,
  name={\csfmt{gls\-entry\-name}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{name} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Glsentryname,
  name={\csfmt{Gls\-entry\-name}},
  user1={\margm{label}},
  description={displays the value of the
    \field{name} field with the first character
     converted to upper case},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentrydesc,
  name={\csfmt{gls\-entry\-desc}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{description} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Glsentrydesc,
  name={\csfmt{Gls\-entry\-desc}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{description} field with the first letter converted to
    upper case},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentrysymbol,
  name={\csfmt{gls\-entry\-symbol}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{symbol} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuseri,
  name={\csfmt{gls\-entry\-useri}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user1} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuserii,
  name={\csfmt{gls\-entry\-userii}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user2} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuseriii,
  name={\csfmt{gls\-entry\-useriii}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user3} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuseriv,
  name={\csfmt{gls\-entry\-useriv}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user4} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuserv,
  name={\csfmt{gls\-entry\-userv}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user5} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentryuservi,
  name={\csfmt{gls\-entry\-uservi}},
  user1={\margm{label}},
  description={expands to the value of the
    \field{user6} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glssetcategoryattribute,
  name={\csfmt{gls\-set\-cat\-e\-gory\-at\-tribute}},
  user1={\margm{category}\margm{attribute}\margm{value}},
  description={sets the value of the attribute for the given
category},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostlinkAddDescOnFirstUse,
  name={\csfmt{gls\-xtr\-post\-link\-Add\-Desc\-On\-First\-Use}},
  description={only for use in the post-link hooks,
   this appends a space and the value of the 
   \field{description} field in parentheses
   if the entry that was just referenced was used for the
   first time},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostlinkAddSymbolOnFirstUse,
  name={\csfmt{gls\-xtr\-post\-link\-Add\-Symbol\-On\-First\-Use}},
  description={only for use in the post-link hooks,
   this appends a space and the value of the 
   \field{symbol} field in parentheses
   if the entry that was just referenced was used for the
   first time and has the \field{symbol} field set},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostlinkAddSymbolDescOnFirstUse,
  name={\csfmt{gls\-xtr\-post\-link\-Add\-Symbol\-Desc\-On\-First\-Use}},
  description={only for use in the post-link hooks, if the 
   entry that was just referenced was used for the first time,
   this appends a space and, in parentheses, the value of the 
   \field{symbol} field (if set)
   followed by the value of the \field{description} field},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glspluralsuffix,
  name={\csfmt{gls\-plural\-suffix}},
  user1={},
  description={the suffix used to construct the default plural},
  note={\styfmt{glossaries}},
  category={command}
}

@index{acrpluralsuffix,
  name={\csfmt{acr\-plural\-suffix}},
  user1={},
  description={the suffix used to construct the default plural for
   the short form of acronyms},
  note={\styfmt{glossaries}},
  category={command}
}

@index{abbrvpluralsuffix,
  name={\csfmt{abbrv\-plural\-suffix}},
  user1={},
  description={the style sensitive suffix used to construct the 
   default plural for the short form of abbreviations},
  note={\styfmt{glossaries-extra}},
  seealso={glsxtrabbrvpluralsuffix},
  category={command}
}

@index{glsxtrabbrvpluralsuffix,
  name={\csfmt{gls\-xtr\-abbrv\-plural\-suffix}},
  user1={},
  description={the default suffix used to construct the plural for
   the short form of abbreviations},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrscsuffix,
  name={\csfmt{gls\-xtr\-sc\-suffix}},
  user1={},
  description={the suffix used to construct the plural for
   the short form of abbreviations with one of the small-cap
   (\code{sc}) styles},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsdefpostlink,
  name={\csfmt{gls\-def\-post\-link}},
  user1={\margm{category}\margm{definition}},
  description={define the post-link hook 
  \cs{glsxtrpostlinkcategory} for the given category},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsdefpostname,
  name={\csfmt{gls\-def\-post\-name}},
  user1={\margm{category}\margm{definition}},
  description={define the post-name hook 
  \cs{glsxtrpostnamecategory} for the given category},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsdefpostdesc,
  name={\csfmt{gls\-def\-post\-desc}},
  user1={\margm{category}\margm{definition}},
  description={define the post-description hook
  \csfmt{glsxtrpostdesc}\meta{category} for the given category},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsxtrifwasfirstuse,
  name={\csfmt{glsxtr\-if\-was\-first\-use}},
  user1={\margm{true}\margm{false}},
  description={only for use in the post-link hooks this
  tests if the entry just referenced was used for the first time},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{ifglsused,
  name={\csfmt{if\-gls\-used}},
  user1={\margm{label}\margm{true}\margm{false}},
  description={does \meta{true} if the entry given by \meta{label} has been
  used, \meta{false} if the entry hasn't been used and neither
  if the entry doesn't exist (an error or warning message will
  occur and ?? will appear in the document).
  This command is not for use in the post-link hooks},
  note={\styfmt{glossaries}},
  seealso={GlsXtrIfUnusedOrUndefined,glsxtrifwasfirstuse},
  category={command}
}

@index{GlsXtrIfUnusedOrUndefined,
  name={\csfmt{Gls\-Xtr\-If\-Un\-used\-Or\-Un\-defined}},
  user1={\margm{label}\margm{true}\margm{false}},
  description={does \meta{true} if the entry given by \meta{label}
hasn't been
  used or is undefined, otherwise it does \meta{false}.
  This command is not for use in the post-link hooks},
  note={\styfmt{glossaries-extra} v1.34+},
  seealso={ifglsused,glsxtrifwasfirstuse},
  category={command}
}

@index{GlsXtrLocationField,
  name={\csfmt{GlsXtrLocationField}},
  user1={},
  description={expands to the internal name of the field storing the
location list, defaulting to \field{location}},
  note={\styfmt{glossaries-extra} v1.37+},
  category={command}
}

@index{glslabel,
  name={\csfmt{glslabel}},
  user1={},
  description={only for use in the post-link hooks, this
  expands to the label of the entry that was last referenced},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glscurrententrylabel,
  name={\csfmt{gls\-current\-entry\-label}},
  user1={},
  description={only for use in the glossary, such as in the style or
in the post-name or post-description hooks, this expands to the
label of the current entry},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glscurrentfieldvalue,
  name={\csfmt{gls\-current\-field\-value}},
  user1={},
  description={only for use in the \meta{true} part of
\cs{ifglshasfield} or \cs{glsxtrifhasfield}, this expands to the
field value},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsentrytitlecase,
  name={\csfmt{gls\-entry\-title\-case}},
  user1={\margm{entry label}\margm{field label}},
  description={fetches the given field and applies
  \ics{capitalisewords} to it},
  note={\styfmt{glossaries} v4.22+},
  category={command}
}

@index{capitalisewords,
  name={\csfmt{capitalise\-words}},
  user1={\margm{text}},
  description={converts the first letter of each word to
  \idx{uppercase} using \ics{makefirstuc}},
  note={\styfmt{mfirstuc} v1.06+},
  category={command}
}

@index{MFUnocap,
  name={\csfmt{MFU\-no\-cap}},
  user1={\margm{word}},
  description={identifies \meta{word} as one that
   should not have its case-changed by \ics{capitalisewords}
   unless it occurs at the start},
  note={\styfmt{mfirstuc} v1.09+},
  category={command}
}

@index{glsxtrusefield,
  name={\csfmt{gls\-xtr\-use\-field}},
  user1={\margm{entry label}\margm{field label}},
  description={expands to the value of the given field for the given
   entry},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{Glsxtrusefield,
  name={\csfmt{Gls\-xtr\-use\-field}},
  user1={\margm{entry label}\margm{field label}},
  description={like \cs{glsxtrusefield} but converts the first
   letter to \idx!{uppercase}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{GLSxtrusefield,
  name={\csfmt{GLS\-xtr\-use\-field}},
  user1={\margm{entry label}\margm{field label}},
  description={as \cs{glsxtrusefield} but converts the value to
  \idx{uppercase}},
  note={\styfmt{glossaries-extra} v1.37+},
  category={command}
}

@index{GlsXtrSetField,
  name={\csfmt{Gls\-Xtr\-Set\-Field}},
  user1={\margm{entry label}\margm{field label}\margm{value}},
  description={assigns the given \meta{value} to the field
   identified by \meta{field label} for the
   entry identified by \meta{entry label}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glsxtrifhasfield,
  name={\csfmt{gls\-xtr\-if\-has\-field}},
  user1={\margm{field label}\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry has the given \emph{internal} field set
   (defined and not empty)
   without testing if the entry exists and adds implicit scoping
   to \meta{true} and \meta{false}},
  note={\styfmt{glossaries-extra} v1.19+},
  seealso={GlsXtrIfFieldUndef},
  category={command}
}

@index{glsxtrifhasfield*,
  name={\csfmt{gls\-xtr\-if\-has\-field*}},
  user1={\margm{field label}\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry has the given field set
   (defined and not empty)
   without testing if the entry exists and without introducing
   an implicit scope},
  note={\styfmt{glossaries-extra} v1.19+},
  seealso={GlsXtrIfFieldUndef},
  category={command}
}

@index{GlsXtrIfFieldUndef,
  name={\csfmt{Gls\-Xtr\-If\-Field\-Undef}},
  user1={\margm{field label}\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given field isn't defined for the given
   entry, which may also not exist},
  note={\styfmt{glossaries-extra} v1.23+},
  category={command}
}

@index{GlsXtrIfFieldEqStr,
  name={\csfmt{Gls\-Xtr\-If\-Field\-Eq\-Str}},
  user1={\margm{field label}\margm{entry label}\margm{text}\margm{true}\margm{false}},
  description={tests if the given field value is the same as
   \meta{text} for the given entry, which may not exist},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{GlsXtrIfFieldEqXpStr,
  name={\csfmt{Gls\-Xtr\-If\-Field\-Eq\-Xp\-Str}},
  user1={\margm{field label}\margm{entry label}\margm{text}\margm{true}\margm{false}},
  description={like \cs{GlsXtrIfFieldEqStr} but first (protected)
fully expands \meta{text} (but not the field value)},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{GlsXtrIfXpFieldEqXpStr,
  name={\csfmt{Gls\-Xtr\-If\-Xp\-Field\-Eq\-Xp\-Str}},
  user1={\margm{field label}\margm{entry label}\margm{text}\margm{true}\margm{false}},
  description={like \cs{GlsXtrIfFieldEqStr} but first (protected)
fully expands both the field value and \meta{text}},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{ifglshasfield,
  name={\csfmt{if\-gls\-has\-field}},
  user1={\margm{field label}\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has the 
   given field set to a non-empty value},
  note={\styfmt{glossaries}},
  seealso={glsxtrifhasfield,GlsXtrIfFieldUndef},
  category={command}
}

@index{ifglshassymbol,
  name={\csfmt{if\-gls\-has\-symbol}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has the 
   \field{symbol} field set to value that's not empty and not
     \csfmt{relax}},
  note={\styfmt{glossaries}},
  seealso={ifglshasdesc,glsxtrifhasfield,GlsXtrIfFieldUndef},
  category={command}
}

@index{ifglshasdesc,
  name={\csfmt{if\-gls\-has\-desc}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has the 
   \field{description} field set},
  note={\styfmt{glossaries}},
  seealso={ifglshassymbol,ifglshasdescsuppressed},
  category={command}
}

@index{ifglshasdescsuppressed,
  name={\csfmt{if\-gls\-has\-suppressedesc}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has the 
   \field{description} field set to \cs{nopostdesc}},
  note={\styfmt{glossaries}},
  seealso={ifglshasdesc},
  category={command}
}

@index{ifglshasparent,
  name={\csfmt{if\-gls\-has\-parent}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has the 
   \field{parent} field set},
  note={\styfmt{glossaries}},
  category={command}
}

@index{ifglshaschildren,
  name={\csfmt{if\-gls\-has\-children}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given entry, which must be defined, has
  child entries. This method is inefficient as it has to
  iterate over all defined entries to determine which ones
  have \meta{entry label} as the value of the \field{parent}
  field. With \bibgls, a more efficient approach is to
  use \csopt{save-child-count} and test the value of
  the \field{childcount} field},
  note={\styfmt{glossaries}},
  category={command}
}

@index{GlsXtrIfFieldNonZero,
  name={\csfmt{Gls\-Xtr\-If\-Field\-Non\-Zero}},
  user1={\margm{field}\margm{entry label}\margm{true}\margm{false}},
  description={tests if the given field value expands to a non-zero
integer. If the field is undefined or empty, the value is assumed to
be 0. If the field is set, it must expand to an integer value.
The value can be referenced in \meta{true} or \meta{false}
with \cs{glscurrentfieldvalue}},
  note={\styfmt{glossaries-extra} v1.31+},
  seealso={GlsXtrIfFieldEqNum},
  category={command}
}

@index{GlsXtrIfFieldEqNum,
  name={\csfmt{Gls\-Xtr\-If\-Field\-Eq\-Num}},
  user1={\margm{field}\margm{entry label}\margm{number}\margm{true}\margm{false}},
  description={tests if the given field value expands to the given
integer \meta{number}. If the field is undefined or empty, the value is assumed to
be 0. If the field is set, it must expand to an integer value.
The value can be referenced in \meta{true} or \meta{false}
with \cs{glscurrentfieldvalue}},
  note={\styfmt{glossaries-extra} v1.31+},
  seealso={GlsXtrIfFieldNonZero},
  category={command}
}

@dualindexentry{GlsXtrIfHasNonZeroChildCount,
  name={\csfmt{Gls\-Xtr\-If\-Has\-Non\-Zero\-Child\-Count}},
  user1={\margm{entry label}\margm{true}\margm{false}},
  description={for use with the \csopt{save-child-count} resource
option, this uses \cs{GlsXtrIfFieldNonZero} to test if the
\field{childcount} field has a non-zero value. The value
can be referenced in \meta{true} or \meta{false} with
\cs{glscurrentfieldvalue}},
  note={\styfmt{glossaries-extra-bib2gls} v1.31+},
  seealso={GlsXtrIfFieldNonZero},
  category={command}
}

@dualindexentry{glsxtrifcustomdiscardperiod,
  name={\csfmt{gls\-xtr\-if\-custom\-discard\-period}},
  user1={\margm{true}\margm{false}},
  description={should expand to \meta{true} if the post-link hook
   should check for a following full stop (in addition to attribute
   checks) otherwise should expand to \meta{false}},
  note={\styfmt{glossaries-extra} v1.23+},
  category={command}
}

@index{glsxtrlongshortdescname,
  name={\csfmt{gls\-xtr\-long\-short\-desc\-name}},
  user1={},
  description={governs the way the \field{name} field is set
   by the \abbrstyle{long-short-desc} abbreviation styles},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glsxtrlongshortname,
  name={\csfmt{gls\-xtr\-long\-short\-name}},
  user1={},
  description={governs the way the \field{name} field is set
   by the \abbrstyle{long-short} abbreviation styles},
  note={\styfmt{glossaries-extra} v1.25+},
  category={command}
}

@index{glsxtronlyname,
  name={\csfmt{gls\-xtr\-only\-name}},
  user1={},
  description={governs the way the \field{name} field is set
   by the \abbrstyle{long-only-short-only} abbreviation styles},
  note={\styfmt{glossaries-extra} v1.25+},
  category={command}
}

@index{glsxtronlydescname,
  name={\csfmt{gls\-xtr\-only\-desc\-name}},
  user1={},
  description={governs the way the \field{name} field is set
   by the \abbrstyle{long-only-short-only} abbreviation styles},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glsaddkey,
  name={\csfmt{gls\-add\-key}},
  user1={\margm{key}\margm{default value}\margm{no link cs}\margm{no link ucfirst cs}\margm{link cs}\margm{link ucfirst cs}\margm{link allcaps cs}},
  description={adds a new key for use in \csref{newglossaryentry}
   and associated commands to access it},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrprovidestoragekey,
  name={\csfmt{gls\-xtr\-provide\-storage\-key}},
  user1={\margm{key}\margm{default value}\margm{no link cs}},
  description={adds a new key, if not already defined, for use in
\csref{newglossaryentry}
   and an associated command
   to access it where (unlike \cs{glsaddstoragekey})
   the \meta{no link cs} part may be empty if unrequired},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glsaddstoragekey,
  name={\csfmt{gls\-add\-storage\-key}},
  user1={\margm{key}\margm{default value}\margm{no link cs}},
  description={adds a new key for internal use that can be set in 
    \csref{newglossaryentry}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{GlsXtrEnableInitialTagging,
  name={\csfmt{Gls\-Xtr\-Enable\-Initial\-Tagging}},
  user1={\margm{category list}\margm{cs}},
  description={defines the control sequence \meta{cs}
   to be used with abbreviation tagging
   with the given categories},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrtagfont,
  name={\csfmt{gls\-xtr\-tag\-font}},
  user1={\margm{text}},
  description={font used by tagging command defined by
   \cs{GlsXtrEnableInitialTagging}},
  note={\styfmt{glossaries-extra}},
  category={command},
  seealso={GlsXtrEnableInitialTagging}
}

@index{glsnavhypertarget,
  name={\csfmt{gls\-nav\-hyper\-target}},
  user1={\oargm{type}\margm{label}\margm{text}},
  description={creates a hyper target for the group given by
    \meta{label} for the given glossary type and displays the text},
  note={\styfmt{glossary-hypernav}},
  category={command}
}

@index{newentry,
  name={\csfmt{newentry}},
  user1={\margm{label}\margm{\keyvallist}},
  description={equivalent to \csref{newglossaryentry}},
  note={\styfmt{glossaries-extra}'s shortcuts},
  category={command}
}

@index{newsym,
  name={\csfmt{newsym}},
  user1={\margm{label}\margm{\keyvallist}\margm{symbol}},
  description={equivalent to \csref{glsxtrnewsymbol}},
  note={\styfmt{glossaries-extra} \styopt{shortcuts}},
  category={command}
}

@index{newnum,
  name={\csfmt{newnum}},
  user1={\margm{label}\margm{\keyvallist}},
  description={equivalent to \csref{glsxtrnewnumber}},
  note={\styfmt{glossaries-extra} \styopt{shortcuts}},
  category={command}
}

@index{acronymtype,
  name={\csfmt{acronym\-type}},
  user1={},
  description={expands to the default acronym glossary type when using
   \csref{newacronym}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrabbrvtype,
  name={\csfmt{gls\-xtr\-abbrv\-type}},
  user1={},
  description={expands to the default glossary type when using
   \csref{newabbreviation}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{nopostdesc,
  name={\csfmt{no\-post\-desc}},
  user1={},
  description={suppresses the post-description hook},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrnopostpunc,
  name={\csfmt{gls\-xtr\-no\-post\-punc}},
  user1={},
  description={suppresses the post-description punctuation
   without suppressing the post-description hook},
  note={\styfmt{glossaries-extra} v1.22+},
  category={command}
}

@index{glsxtrrestorepostpunc,
  name={\csfmt{gls\-xtr\-restore\-post\-punc}},
  user1={},
  description={used within post-description category hooks, 
   this restores the post-description punctuation
   if it's been suppressed with \cs{glsxtrnopostpunc}},
  note={\styfmt{glossaries-extra} v1.23+},
  category={command}
}

@index{loadglsentries,
  name={\csfmt{load\-gls\-entries}},
  user1={\oargm{type}\margm{file}},
  description={locally redefines \cs{glsdefaulttype}
    to \meta{type} and inputs \meta{file}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{newglossary,
  name={\csfmt{newglossary}},
  user1={\oargm{log}\margm{type}\margm{gls}\margm{glo}\margm{title}},
  description={defines a new glossary identified by \meta{type}
   with the given title and associated file extensions used by
   \appfmt{makeindex} or \appfmt{xindy}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{newglossary*,
  name={\csfmt{newglossary*}},
  user1={\margm{type}\margm{title}},
  description={defines a new glossary identified by \meta{type}
   with the given title},
  note={\styfmt{glossaries}},
  category={command}
}

@index{newignoredglossary,
  name={\csfmt{new\-ignored\-glossary}},
  user1={\margm{type}},
  description={defines a new ignored glossary (with hyperlinks
   suppressed) identified by \meta{type}
   that's not included in the list used by commands, such
   as \cs{printunsrtglossaries}, that iterate over defined glossaries},
  note={\styfmt{glossaries} v4.08+},
  category={command}
}

@index{newignoredglossary*,
  name={\csfmt{new\-ignored\-glossary*}},
  user1={\margm{type}},
  description={defines a new ignored glossary (without 
   suppressing hyperlinks) identified by \meta{type}
   that's not included in the list used by commands, such
   as \cs{printunsrtglossaries}, that iterate over defined glossaries},
  note={\styfmt{glossaries-extra} v1.11+},
  category={command}
}

@index{provideignoredglossary,
  name={\csfmt{provide\-ignored\-glossary}},
  user1={\margm{type}},
  description={as \cs{newignoredglossary} but does nothing
    if a glossary identified by \meta{type} already exists},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{provideignoredglossary*,
  name={\csfmt{provide\-ignored\-glossary*}},
  user1={\margm{type}},
  description={as \ics{provideignoredglossary} but doesn't
    suppress hyperlinks},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{delimN,
  name={\csfmt{delimN}},
  user1={},
  description={used to delimited individual locations},
  note={\styfmt{glossaries}},
  category={command}
}

@index{delimR,
  name={\csfmt{delimR}},
  user1={},
  description={used as a separator between the start and end locations
   of a range},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsnoidxloclist,
  name={\csfmt{gls\-noidx\-loc\-list}},
  user1={\margm{location list cs}},
  description={iterates over the given internal location list using
   the \cs{glsnoidxloclisthandler} handler},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsnoidxloclisthandler,
  name={\csfmt{gls\-noidx\-loc\-list\-handler}},
  description={the handler used by the internal list loop function used
    in \cs{glsnoidxloclist}},
  user1={\margm{location}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glossentry,
  name={\csfmt{glossentry}},
  user1={\margm{label}\margm{location list}},
  description={used in the glossary to display a top-level entry},
  note={\styfmt{glossaries}},
  category={command}
}

@index{subglossentry,
  name={\csfmt{subglossentry}},
  user1={\margm{level}\margm{label}\margm{location list}},
  description={used in the glossary to display a sub-entry},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsaddall,
  name={\csfmt{glsaddall}},
  user1={\oargm{options}},
  description={iterates over all entries defined for all glossaries
   (or for the sub-list provided in the options) and performs
   \cs{glsadd} for each entry},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsaddallunused,
  name={\csfmt{gls\-add\-all\-unused}},
  user1={\oargm{list}},
  description={iterates over all entries defined for all glossaries
   (or for the sub-list provided in the options) and performs
   \cs{glsadd} for each entry that hasn't been used with
   the \glsaddopt{format} set to \code{glsignore}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsadd,
  name={\csfmt{glsadd}},
  user1={\oargm{options}\margm{label}},
  description={indexes the entry without displaying any text},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsaddeach,
  name={\csfmt{gls\-add\-each}},
  user1={\oargm{options}\margm{label list}},
  description={indexes each entry identified in the comma-separated
  list of labels without displaying any text},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsadd.thevalue,
  name={\csoptfmt{thevalue}},
  category={commandoption},
  parent={glsadd}
}

@index{glsadd.theHvalue,
  name={\csoptfmt{theHvalue}},
  category={commandoption},
  parent={glsadd}
}

@index{glsadd.format,
  name={\csoptfmt{format}},
  category={commandoption},
  parent={glsadd}
}

@index{glsadd.counter,
  name={\csoptfmt{counter}},
  category={commandoption},
  parent={glsadd}
}

@index{theglossaryentry,
  name={\csfmt{theglossaryentry}},
  description={textual representation of the \counter{glossaryentry}
counter, which is defined with the \styopt{entrycounter} option},
  note={\styfmt{glossaries}},
  category={command}
}

@index{theHglossaryentry,
  name={\csfmt{theHglossaryentry}},
  description={hypertarget associated with the \counter{glossaryentry}
counter, which is defined with the \styopt{entrycounter} option},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsstepentry,
  name={\csfmt{gls\-step\-entry}},
  user1 = {\margm{label}},
  description={increments the \counter{glossaryentry} counter, which
is defined with the \styopt{entrycounter} option, and automatically
labels it with \cs{label}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{currentglossary,
  name={\csfmt{currentglossary}},
  description={defined within the glossary to the current glossary
type, this has no meaning outside of the glossary list},
  note={\styfmt{glossaries}},
  category={command}
}

@index{frontmatter,
  name={\csfmt{front\-matter}},
  user1={},
  description={switches to front matter},
  note={book-like classes},
  category={command}
}

@index{mainmatter,
  name={\csfmt{main\-matter}},
  user1={},
  description={switches to main matter},
  note={book-like classes},
  category={command}
}

@index{backmatter,
  name={\csfmt{back\-matter}},
  user1={},
  description={switches to back matter},
  note={book-like classes},
  category={command}
}

@index{GlsXtrSetDefaultNumberFormat,
  name={\csfmt{Gls\-Xtr\-Set\-Default\-Number\-Format}},
  user1={\margm{format}},
  description={set the default format to use if the
   \glsaddopt{format} key isn't set},
  note={\styfmt{glossaries-extra} v1.19+},
  category={command}
}

@index{GlsXtrSetDefaultGlsOpts,
  name={\csfmt{Gls\-Xtr\-Set\-Default\-Gls\-Opts}},
  user1={\margm{options}},
  description={set the default options for commands like \cs{gls}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsnumberformat,
  name={\csfmt{gls\-number\-format}},
  user1={\margm{text}},
  description={default location format, uses \cs{glshypernumber} if
hyperlinks enabled otherwise just does \meta{text}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glshypernumber,
  name={\csfmt{gls\-hyper\-number}},
  user1={\margm{text}},
  description={a location format that has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{hypersf,
  name={\csfmt{hypersf}},
  user1={\margm{text}},
  description={a location format that uses the sans-serif 
   font that also has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{hyperit,
  name={\csfmt{hyperit}},
  user1={\margm{text}},
  description={a location format that uses the italic 
   font that also has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{hyperbf,
  name={\csfmt{hyperbf}},
  user1={\margm{text}},
  description={a location format that uses the bold 
   font that also has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{hyperemph,
  name={\csfmt{hyperemph}},
  user1={\margm{text}},
  description={a location format that uses \ics{emph} to set the
  font and also has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{hyperrm,
  name={\csfmt{hyperrm}},
  user1={\margm{text}},
  description={a location format that uses the serif (Roman) 
   font that also has a hyperlink (if enabled)},
  note={\styfmt{glossaries}},
  category={command}
}

@index{emph,
  name={\csfmt{emph}},
  user1={\margm{text}},
  description={emphasizes the given text (italic or slanted
   if the surrounding font is upright, otherwise upright font is 
   used)},
  note={kernel command},
  category={command}
}

@index{textbf,
  name={\csfmt{textbf}},
  user1={\margm{text}},
  description={displays the given text in bold},
  note={kernel command},
  category={command}
}

@index{textit,
  name={\csfmt{textit}},
  user1={\margm{text}},
  description={displays the given text in italic},
  note={kernel command},
  seealso={emph},
  category={command}
}

@index{alph,
  name={\csfmt{alph}},
  user1={\margm{counter}},
  description={displays the given counter as an alphabetic character
from \qt{a} to \qt{z}},
  note={kernel command},
  category={command}
}

@index{footnote,
  name={\csfmt{footnote}},
  user1={\oargm{number}\margm{text}},
  description={displays the given text as a footnote},
  note={kernel command},
  category={command}
}

@index{index,
  name={\csfmt{index}},
  user1={\margm{text}},
  description={indexes the given term by writing the relevant
information to an associated file that can then be processed
by \idx{makeindex} or \idx{xindy}},
  note={kernel command},
  category={command}
}

@index{glsignore,
  name={\csfmt{gls\-ignore}},
  user1={\margm{text}},
  description={does nothing but when used as a location format
   \bibgls\ recognises it as an \idx{ignoredrecord}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{@istfilename,
  name={\csfmt{@istfilename}},
  user1={\margm{filename}},
  description={identifies the style file in the \ext{aux}
   file for the benefit of external tools like 
    \idx{makeglossaries} and \idx{makeglossaries-lite}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glstriggerrecordformat,
  name={\csfmt{gls\-trigger\-record\-format}},
  user1={\margm{text}},
  description={does nothing but when used as a location format
   \bibgls\ recognises it as an \idx{ignoredrecord} indexed by
   commands like \csref{rgls}},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{at,
  name={\csfmt{@}},
  user1={},
  description={adjusts the space factor to indicate the following
   punctuation character marks the end of the sentence},
  note={kernel command},
  category={command}
}

@index{forall,
  name={\csfmt{forall}},
  user1={},
  description={for all symbol ($\forall$)},
  note={kernel command},
  category={command}
}

@index{ensuremath,
  name={\csfmt{ensuremath}},
  user1={\margm{maths}},
  description={ensures the argument is in math mode. As a general
rule this should only be used if you know for certain that
the argument just contains mathematical markup and doesn't cause a
change in mode},
  note={kernel command},
  category={command}
}

@index{mathord,
  name={\csfmt{mathord}},
  user1={\margm{maths}},
  description={assigns the character or sub-formula in the 
   argument to class 0, ordinary},
  note={\TeX\ primitive},
  category={command}
}

@index{mathop,
  name={\csfmt{mathop}},
  user1={\margm{maths}},
  description={assigns the character or sub-formula in the 
   argument to class 1, large operator},
  note={\TeX\ primitive},
  category={command}
}

@index{mathpunct,
  name={\csfmt{mathpunct}},
  user1={\margm{maths}},
  description={assigns the character or sub-formula in the 
   argument to class 6, punctuation},
  note={\TeX\ primitive},
  category={command}
}

@index{mathrel,
  name={\csfmt{mathrel}},
  user1={\margm{maths}},
  description={assigns the character or sub-formula in the 
   argument to class 3, relation},
  note={\TeX\ primitive},
  category={command}
}

@index{write18,
  name={\csfmt{write18}},
  user1={\margm{system call}},
  description={perform shell escape if permitted},
  note={kernel command},
  category={command}
}

@index{immediate,
  name={\csfmt{immediate}},
  user1={\meta{file operation}},
  description={perform the file operation immediately instead of the
usual delay},
  note={{}\TeX\ primitive},
  category={command}
}

@index{AtEndDocument,
  name={\csfmt{AtEndDocument}},
  user1={\margm{code}},
  description={perform \meta{code} at the end of the document},
  note={kernel command},
  category={command}
}

@index{unexpanded,
  name={\csfmt{unexpanded}},
  user1={\margm{general text}},
  description={expands to the argument},
  note={{}\eTeX\ primitive},
  category={command}
}

@index{detokenize,
  name={\csfmt{detokenize}},
  user1={\margm{general text}},
  description={expands the argument to a list of character tokens},
  note={{}\eTeX\ primitive},
  category={command}
}

@index{input,
  name={\csfmt{input}},
  user1={\margm{file}},
  description={input the given file},
  note={kernel command},
  category={command}
}

@index{jobname,
  name={\csfmt{jobname}},
  user1={},
  description={the current job name, which is usually the name of
   the main \ext{tex} file without the extension},
  note={primitive},
  category={command}
}

@index{protect,
  name={\csfmt{protect}},
  user1={\meta{token}},
  description={protects \meta{token} from expansion},
  note={kernel command},
  category={command}
}

@index{ifcase,
  name={\csfmt{ifcase}},
  user1={\meta{number}},
  description={case conditional},
  note={\TeX\ primitive},
  category={command}
}

@index{renewcommand,
  name={\csfmt{re\-new\-com\-mand}},
  user1={\margm{cs}\oargm{n}\oargm{def}\margm{code}},
  description={redefines an existing command},
  note={kernel command},
  category={command}
}

@index{newcommand,
  name={\csfmt{new\-com\-mand}},
  user1={\margm{cs}\oargm{n}\oargm{def}\margm{code}},
  description={defines a new command},
  note={kernel command},
  category={command}
}

@index{providecommand,
  name={\csfmt{pro\-vide\-com\-mand}},
  user1={\margm{cs}\oargm{n}\oargm{def}\margm{code}},
  description={defines a command if it's not already defined},
  note={kernel command},
  category={command}
}

@index{section,
  name={\csfmt{section}},
  user1={\oargm{toc title}\margm{title}},
  description={section heading},
  note={most classes that have a concept of document sections},
  category={command}
}

@index{section*,
  name={\csfmt{section*}},
  user1={\margm{title}},
  description={unnumbered section heading},
  note={most classes that have a concept of document sections},
  category={command}
}

@index{chapter,
  name={\csfmt{chapter}},
  user1={\oargm{toc title}\margm{title}},
  description={chapter heading},
  note={book or report classes},
  category={command}
}

@index{chapter*,
  name={\csfmt{chapter*}},
  user1={\margm{title}},
  description={unnumbered chapter heading},
  note={book or report classes},
  category={command}
}

@index{caption,
  name={\csfmt{caption}},
  user1={\oargm{list title}\margm{title}},
  description={caption title},
  note={kernel command},
  category={command}
}

@index{boldsymbol,
  name={\csfmt{boldsymbol}},
  user1={\margm{symbol}},
  description={renders given maths symbol in bold if supported by
    the current font},
  note={\styfmt{amsmath}},
  category={command}
}

@index{mathcal,
  name={\csfmt{mathcal}},
  user1={\margm{character}},
  description={renders the given (\idx!{uppercase}) maths character in a calligraphic font},
  note={kernel command (maths mode)},
  category={command}
}

@index{ifglsentryexists,
  name={\csfmt{ifglsentryexists}},
  user1={\margm{label}\margm{true}\margm{false}},
  description={tests if the entry given by \meta{label} exists},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsdefaulttype,
  name={\csfmt{gls\-default\-type}},
  user1={},
  description={the default glossary type},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glssymbolsgroupname,
  name={\csfmt{gls\-symbols\-group\-name}},
  user1={},
  description={the name used for the symbols group},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsnumbersgroupname,
  name={\csfmt{gls\-numbers\-group\-name}},
  user1={},
  description={the name used for the numbers group},
  note={\styfmt{glossaries}},
  category={command}
}

@index{printunsrtglossary,
  name={\csfmt{print\-unsrt\-glos\-sary}},
  user1={\oargm{options}},
  description={display the glossary by iterating over all entries 
   associated with that glossary in the order in which they were
   defined},
  note={\styfmt{glossaries-extra} v1.08+},
  category={command}
}

@index{printunsrtglossary*,
  name={\csfmt{print\-unsrt\-glos\-sary*}},
  user1={\oargm{options}\margm{code}},
  description={as \cs{printunsrtglossary} but performs
  \meta{code} first (scoped to localise any assignments within
  \meta{code})},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{printunsrtglossaries,
  name={\csfmt{print\-unsrt\-glos\-saries}},
  user1={},
  description={iterates over all non-ignored defined glossaries
   and performs \cs{printunsrtglossary} for each one},
  note={\styfmt{glossaries-extra} v1.08+},
  category={command}
}

@index{printunsrtglossaryentryprocesshook,
  name={\csfmt{print\-unsrt\-glos\-sary\-entry\-process\-hook}},
  user1={\margm{label}},
  description={performed at each iteration of the internal loop used
by \cs{printunsrtglossary}},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{printunsrtglossaryskipentry,
  name={\csfmt{print\-unsrt\-glos\-sary\-skip\-entry}},
  description={only allowed within
   \cs{printunsrtglossaryentryprocesshook} this command 
   indicates that the current entry should be skipped},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{printunsrtglossarypredoglossary,
  name={\csfmt{print\-unsrt\-glos\-sary\-pre\-do\-glos\-sary}},
  description={hook performed by \cs{printunsrtglossary}},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{glscategory,
  name={\csfmt{gls\-cat\-e\-gory}},
  user1={\margm{label}},
  description={expands to the value of the \field{category} field
for the entry identified by \meta{label} or nothing if the entry
hasn't been defined},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsifcategory,
  name={\csfmt{gls\-if\-cat\-e\-gory}},
  user1={\margm{label}\margm{category}\margm{true}\margm{false}},
  description={does \meta{true} if the \field{category} field for
   the entry given by \meta{label} is \meta{category}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtriflabelinlist,
  name={\csfmt{gls\-xtr\-if\-label\-in\-list}},
  user1={\margm{label}\margm{list}\margm{true}\margm{false}},
  description={tests if the \meta{label} is contained
   in the comma-separated \meta{list}, where both \meta{label}
   and \meta{list} are fully expanded before testing. This test
   is designed for \emph{labels} which should be fully expandable},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{printgloss.type,
  parent = {printunsrtglossary},
  name = {\csoptfmt{type}},
  category={commandoption},
}

@index{printgloss.style,
  parent = {printunsrtglossary},
  name = {\csoptfmt{style}},
  category={commandoption},
}

@index{printgloss.title,
  parent = {printunsrtglossary},
  name = {\csoptfmt{title}},
  category={commandoption},
}

@index{printgloss.toctitle,
  parent = {printunsrtglossary},
  name = {\csoptfmt{toctitle}},
  category={commandoption},
}

@index{printgloss.target,
  parent = {printunsrtglossary},
  name = {\csoptfmt{target}},
  category={commandoption},
}

@index{printgloss.targetnameprefix,
  parent = {printunsrtglossary},
  name = {\csoptfmt{target\-name\-prefix}},
  category={commandoption},
}

@index{printgloss.prefix,
  parent = {printunsrtglossary},
  name = {\csoptfmt{prefix}},
  category={commandoption},
}

@index{printgloss.nonumberlist,
  parent = {printunsrtglossary},
  name = {\csoptfmt{no\-number\-list}},
  category={commandoption},
}

@index{cs.makeglossaries,
  name={\csfmt{make\-glos\-saries}},
  user1={},
  description={opens associated glossary files to be processed
   by \idx{makeindex} or \idx{xindy}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{makenoidxglossaries,
  name={\csfmt{make\-noidx\-glos\-saries}},
  user1={},
  description={indicates that \TeX\ should be used to sort and
   collate the glossary information instead of using an
   external application; this command should not be used
   with \bibgls},
  note={\styfmt{glossaries} v4.04+},
  category={command}
}

@index{printglossary,
  name={\csfmt{print\-glos\-sary}},
  user1={\oargm{options}},
  description={inputs file created by \idx{makeindex} or \idx{xindy}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{printglossaries,
  name={\csfmt{print\-glos\-saries}},
  user1={},
  description={iterates over all non-ignored defined glossaries
   and performs \cs{printglossary} for each one},
  note={\styfmt{glossaries}},
  category={command}
}

@index{printnoidxglossary,
  name={\csfmt{print\-noidx\-glos\-sary}},
  user1={\oargm{options}},
  description={uses \TeX\ to sort, collate and list the glossary},
  note={\styfmt{glossaries} v4.04+},
  category={command}
}

@index{printnoidxglossaries,
  name={\csfmt{print\-noidx\-glos\-saries}},
  user1={},
  description={iterates over all non-ignored defined glossaries
   and performs \cs{printnoidxglossary} for each one},
  note={\styfmt{glossaries} v4.04+},
  category={command}
}

@index{makefirstuc,
  name={\csfmt{make\-first\-uc}},
  user1={\margm{text}},
  description={converts the first letter of \meta{text} to upper case},
  note={\styfmt{mfirstuc}},
  category={command}
}

@index{ac,
  name={\csfmt{ac}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={equivalent to \cs{gls}},
  note={\styfmt{glossaries-extra} \styopt{shortcuts} package
option},
  category={command}
}

@index{ab,
  name={\csfmt{ab}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={equivalent to \cs{gls}},
  note={\styfmt{glossaries-extra} 
  \styopt[abbreviations]{shortcuts}},
  category={command}
}

@index{glsxtrp,
  name={\csfmt{glsxtrp}},
  user1={\margm{field}\margm{label}},
  description={displays the given field for the entry given by label},
  note={\styfmt{glossaries-extra} v1.07+},
  category={command}
}

@index{glsps,
  name={\csfmt{glsps}},
  user1={\margm{label}},
  description={shortcut for \code{\cs{glsxtrp}\marg{short}\margm{label}}},
  note={\styfmt{glossaries-extra} v1.07+},
  category={command}
}

@index{glspt,
  name={\csfmt{glspt}},
  user1={\margm{label}},
  description={shortcut for \code{\cs{glsxtrp}\marg{text}\margm{label}}},
  note={\styfmt{glossaries-extra} v1.07+},
  category={command}
}

@index{GlsXtrFmtField,
  name={\csfmt{Gls\-Xtr\-Fmt\-Field}},
  user1={},
  description={expands to the internal label of the field used
   to store the control sequence name for use with \csref{glsxtrfmt}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glsxtrusesee,
  name={\csfmt{gls\-xtr\-use\-see}},
  user1={\margm{label}},
  description={applies \cs{glsseeformat} to the entry's
   \field{see} field if not empty},
  note={\styfmt{glossaries-extra} v1.06+},
  category={command}
}

@index{glsxtruseseealso,
  name={\csfmt{gls\-xtr\-use\-seealso}},
  user1={\margm{label}},
  description={applies \cs{glsseeformat} to the entry's
   \field{seealso} field if not empty},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{glsxtrsetaliasnoindex,
  name={\csfmt{gls\-xtr\-set\-alias\-noindex}},
  user1={},
  description={hooks into the alias \glsopt{noindex} setting},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glsxtruseseealsoformat,
  name={\csfmt{gls\-xtr\-use\-seealso\-format}},
  user1={\margm{xr list}},
  description={used to format the entries whose labels are 
   given in \meta{xr list} as a list of \qt{see also}
cross-references},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{glsxtrindexseealso,
  name={\csfmt{gls\-xtr\-index\-seealso}},
  user1={\margm{label}\margm{xr list}},
  description={indexes a \qt{see also} cross-reference},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{glssee,
  name={\csfmt{glssee}},
  user1={\oargm{tag}\margm{label}\margm{xr label list}},
  description={indexes a \qt{see} cross-reference},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrseelist,
  name={\csfmt{gls\-xtr\-see\-list}},
  user1={\margm{xr label list}},
  description={formats the list of cross-reference labels, without
the initial \qt{see} tag},
  note={\styfmt{glossaries-extra} v1.16+},
  category={command}
}

@index{setabbreviationstyle,
  name={\csfmt{setabbreviationstyle}},
  user1={\oargm{category}\margm{style-name}},
  description={sets the abbreviation style to \meta{style-name} for the
given \meta{category}, must be used before the abbreviation is
defined},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glshex,
  name={\csfmt{glshex}},
  user1={},
  description={expands to \cs{cs.string}\cs{u}},
  note={\styfmt{glossaries-extra} v1.21+ (moved to
\styfmt{glossaries-extra-bib2gls} in v1.27)},
  category={command}
}

@index{glscapturedgroup,
  name={\csfmt{glscapturedgroup}},
  user1={},
  description={expands to \cs{cs.string}\idx{dollarchar}},
  note={\styfmt{glossaries-extra-bib2gls} v1.31+},
  category={command}
}

@index{GlsXtrBibTeXEntryAliases,
  name={\csfmt{Gls\-Xtr\-Bib\-TeX\-Entry\-Aliases}},
  user1={},
  description={expands to the set of common entry aliases for
\atentry{bibtexentry}},
  note={\styfmt{glossaries-extra-bib2gls} v1.29+},
  category={command}
}

@index{GlsXtrProvideBibTeXFields,
  name={\csfmt{Gls\-Xtr\-Provide\-Bib\-TeX\-Fields}},
  user1={},
  description={defines the standard \BibTeX\ fields using
   \cs{glsaddstoragekey}},
  note={\styfmt{glossaries-extra-bib2gls} v1.29+},
  category={command}
}

@index{glsxtrprovidecommand,
  name={\csfmt{glsxtrprovidecommand}},
  user1={\margm{cs}\oargm{n}\oargm{def}\margm{code}},
  description={behaves like \cs{providecommand} in the document but
   like \cs{renewcommand} in \bibgls},
  note={\styfmt{glossaries-extra-bib2gls} v1.27+},
  category={command}
}

@index{glsxtrresourceinit,
  name={\csfmt{gls\-xtr\-resource\-init}},
  user1={},
  description={provides code that locally redefines commands 
   during the protected write operation performed by 
   \csref{glsxtrresourcefile}},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{glsxtrgroupfield,
  name={\csfmt{gls\-xtr\-group\-field}},
  user1={},
  description={expands to the field label used to store the
   entry group labels},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{glolinkprefix,
  name={\csfmt{glo\-link\-prefix}},
  user1={},
  description={target name prefix used in entry hyperlinks},
  note={\styfmt{glossaries}},
  category={command}
}

@index{apptoglossarypreamble,
  name={\csfmt{app\-to\-glossary\-preamble}},
  user1={\oargm{type}\margm{code}},
  description={appends \meta{code} to the preamble for the given
glossary},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsbackslash,
  name={\csfmt{glsbackslash}},
  user1={},
  description={expands to a literal backslash \texttt{\glsbackslash} 
   character},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsquote,
  name={\csfmt{glsquote}},
  user1={\margm{text}},
  description={encapsulates \meta{text} with literal straight
   double-quotes \texttt{\glsquote{\meta{text}}}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glstildechar,
  name={\csfmt{glstildechar}},
  user1={},
  description={expands to a literal tilde \texttt{\glstildechar} character},
  note={\styfmt{glossaries}},
  category={command}
}

@index{pagelistname,
  name={\csfmt{pagelistname}},
  user1={},
  description={language-sensitive name used for the location list 
   header for some glossary styles},
  note={\styfmt{glossaries}},
  category={command}
}

@index{seealsoname,
  name={\csfmt{seealsoname}},
  user1={},
  description={language sensitive \qt{see also} text},
  note={\styfmt{glossaries-extra} or language
packages},
  category={command}
}

@index{glsxtruserfield,
  name={\csfmt{gls\-xtr\-user\-field}},
  user1={},
  description={used by the parenthetical abbreviation styles, this
   expands to the label of the field used to store the parenthetical
   material},
  note={\styfmt{glossaries-extra} v1.04+},
  category={command}
}

@index{glsxtruserparen,
  name={\csfmt{gls\-xtr\-user\-paren}},
  user1={\margm{text}\margm{label}},
  description={used by the \abbrstyle{long-short-user} and
  \abbrstyle{short-long-user} abbreviation styles
   to format the parenthetical material where \meta{text}
   is the default parenthetical text and \meta{label}
   is the entry's label. This checks the field given
   by \cs{glsxtruserfield} and, if set, the \meta{text} is
   followed by a comma and the user value},
  note={\styfmt{glossaries-extra} v1.04+},
  category={command}
}

@index{glsxtrfullsep,
  name={\csfmt{gls\-xtr\-full\-sep}},
  user1={\margm{label}},
  description={the separator used in the full format for the parenthetical styles},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{GlsXtrForeignText,
  name={\csfmt{Gls\-Xtr\-Foreign\-Text}},
  user1={\margm{label}\margm{text}},
  description={encapsulates \meta{text} in \csfmt{foreignlanguage}
  where the language label is obtained from the locale tag
  given in the field identified by \cs{GlsXtrForeignTextField}},
  note={\styfmt{glossaries-extra} v1.32+},
  category={command}
}

@index{GlsXtrForeignTextField,
  name={\csfmt{Gls\-Xtr\-Foreign\-Text\-Field}},
  description={used by \cs{GlsXtrForeignText} to identify
   the field containing the locale tag},
  note={\styfmt{glossaries-extra} v1.32+},
  category={command}
}

@index{glsxtrparen,
  name={\csfmt{gls\-xtr\-paren}},
  user1={\margm{text}},
  description={used to markup parenthetical material},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glsxtrpostdescabbreviation,
  name={\csfmt{gls\-xtr\-post\-desc\-abbreviation}},
  user1={},
  description={hook used after the description is displayed in the
   glossary for entries that have the
   \field{category} set to \code{abbreviation}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostdescsymbol,
  name={\csfmt{gls\-xtr\-post\-desc\-symbol}},
  user1={},
  description={hook used after the description is displayed in the
   glossary for entries that have the
   \field{category} set to \code{symbol}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostdescgeneral,
  name={\csfmt{gls\-xtr\-post\-desc\-general}},
  user1={},
  description={hook used after the description is displayed in the
   glossary for entries that have the
   \field{category} set to \code{general}},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrpostdesccategory,
  name={\csfmt{gls\-xtr\-post\-desc\-\meta{category}}},
  user1={},
  description={hook used after the description is displayed in the
   glossary for entries that have the
   \field{category} set to \meta{category}. Common category hooks 
   such as \cs{glsxtrpostdescgeneral} are provided by
   \styfmt{glossaries-extra}, custom categories need the hook defined},
  category={command}
}

@index{glsxtrpostnamecategory,
  name={\csfmt{gls\-xtr\-post\-name\-\meta{category}}},
  user1={},
  description={hook used by \cs{glossentryname} for entries 
   that have the \field{category} set to \meta{category}. 
   If required, this hook can be defined with \cs{glsdefpostname}},
  category={command}
}

@index{glsxtrpostlinkcategory,
  name={\csfmt{gls\-xtr\-post\-link\-\meta{category}}},
  user1={},
  description={hook used after commands like \cs{gls} 
   for entries that have the
   \field{category} set to \meta{category}. If required,
   this hook can be defined with \cs{glsdefpostlink}},
  category={command}
}

@index{GlsXtrFmtDefaultOptions,
  name={\csfmt{Gls\-Xtr\-Fmt\-Default\-Options}},
  user1={},
  description={the default options used by \csref{glsxtrfmt}},
  note={\styfmt{glossaries-extra} v1.12+},
  category={command}
}

@index{glslink,
  name={\csfmt{glslink}},
  user1={\oargm{options}\margm{label}\margm{text}},
  description={links to the entry's location in the glossary with
   the given link text without altering the first use flag},
  note={\styfmt{glossaries}},
  seealso={glsdisp},
  category={command}
}

@index{glsdisp,
  name={\csfmt{glsdisp}},
  user1={\oargm{options}\margm{label}\margm{text}},
  description={links to the entry's location in the glossary with
   the given link text and marks the entry as having been used},
  note={\styfmt{glossaries}},
  seealso={glslink},
  category={command}
}

@index{dglslink,
  name={\csfmt{dgls\-link}},
  user1={\oargm{options}\margm{label}\margm{text}},
  description={like \cs{glslink} but tries the prefixes
  identified with commands like \cs{glsxtraddlabelprefix}},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={dglsdisp},
  category={command}
}

@index{dglsdisp,
  name={\csfmt{dgls\-disp}},
  user1={\oargm{options}\margm{label}\margm{text}},
  description={like \cs{glsdisp} but tries the prefixes
  identified with commands like \cs{glsxtraddlabelprefix}},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={dglsdisp},
  category={command}
}

@index{glsxtrshort,
  name={\csfmt{glsxtrshort}},
  user1={\oargm{options}\margm{label}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{short} field (using the
   appropriate abbreviation style) 
   without altering the first use flag},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrlong,
  name={\csfmt{glsxtrlong}},
  user1={\oargm{options}\margm{label}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{long} field (using the
   appropriate abbreviation style) 
   without altering the first use flag},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrfull,
  name={\csfmt{glsxtrfull}},
  user1={\oargm{options}\margm{label}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{long} and \field{short}
fields (using the
   appropriate abbreviation style) 
   without altering the first use flag},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsxtrword,
  name={\csfmt{glsxtrword}},
  user1={\margm{text}},
  description={used to encapsulate each word in the long form of an
abbreviation by the \catattr{markwords} attribute},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glsxtrwordsep,
  name={\csfmt{glsxtrwordsep}},
  description={used to mark spaces between each word in the long form of an
abbreviation by the \catattr{markwords} attribute},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glstext,
  name={\csfmt{glstext}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{text} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsname,
  name={\csfmt{glsname}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{name} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsfirst,
  name={\csfmt{glsfirst}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{first} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glssymbol,
  name={\csfmt{glssymbol}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{symbol} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsdesc,
  name={\csfmt{glsdesc}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{description} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuseri,
  name={\csfmt{glsuseri}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user1} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuserii,
  name={\csfmt{glsuserii}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user2} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuseriii,
  name={\csfmt{glsuseriii}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user3} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuseriv,
  name={\csfmt{glsuseriv}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user4} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuserv,
  name={\csfmt{glsuserv}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user5} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsuservi,
  name={\csfmt{glsuservi}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={links to the entry's location in the glossary with
   the link text obtained from the \field{user6} field  
   without altering the first use flag},
  note={\styfmt{glossaries}},
  category={command}
}

@dualindexentry{rgls,
  name={\csfmt{rgls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={like \cs{gls} but checks for the record
   count trigger setting},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@dualindexentry{rglsformat,
  name={\csfmt{rglsformat}},
  user1={\margm{label}\oargm{insert}},
  description={used by \csref{rgls} if the record count
   switch is triggered},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{glsxtrenablerecordcount,
  name={\csfmt{glsxtr\-enable\-record\-count}},
  user1={},
  description={redefines \cs{gls} etc to their 
   \csref{rgls} counterpart},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@dualindexentry{GlsXtrSetRecordCountAttribute,
  name={\csfmt{Gls\-Xtr\-Set\-Record\-Count\-Attribute}},
  user1={\margm{category list}\margm{value}},
  description={sets the \catattr{recordcount} attribute to
    \meta{value} for the given categories},
  note={\styfmt{glossaries-extra} v1.21+},
  category={command}
}

@index{gls,
  name={\csfmt{gls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={on first use displays the first use text
   (the value of the \field{first} field
    for general entries) and on subsequent use displays
    the subsequent use text (the value of the 
    \field{text} field
    for general entries) where the text is optionally hyperlinked
    to the relevant place in the glossary},
  note={\styfmt{glossaries}},
  category={command}
}

@index{gls.format,
  name={\csoptfmt{format}},
  category={commandoption},
  parent={gls}
}

@index{gls.counter,
  name={\csoptfmt{counter}},
  category={commandoption},
  parent={gls}
}

@index{gls.noindex,
  name={\csoptfmt{noindex}},
  category={commandoption},
  parent={gls}
}

@index{gls.textformat,
  name={\csoptfmt{text\-format}},
  category={commandoption},
  parent={gls}
}

@index{gls.prefix,
  name={\csoptfmt{prefix}},
  category={commandoption},
  parent={gls}
}

@index{gls.hyperoutside,
  name={\csoptfmt{hyperoutside}},
  category={commandoption},
  parent={gls}
}

@index{glspl,
  name={\csfmt{glspl}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={as \cs{gls} but shows the plural form},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Gls,
  name={\csfmt{Gls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={as \cs{gls} but converts the first letter
    of the link text to upper case},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Glspl,
  name={\csfmt{Glspl}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={as \cs{Gls} but shows the plural form},
  note={\styfmt{glossaries}},
  category={command}
}

@index{GLS,
  name={\csfmt{GLS}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={as \cs{gls} but converts the link text to upper case},
  note={\styfmt{glossaries}},
  category={command}
}

@index{GLSpl,
  name={\csfmt{GLSpl}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={as \cs{GLS} but shows the plural form},
  note={\styfmt{glossaries}},
  category={command}
}

@index{pgls,
  name={\csfmt{pgls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={does \meta{prefix}\cs{gls}\oargm{options}\margm{label}\oargm{insert},
  where the \meta{prefix} is obtained from the appropriate prefix
  field},
  note={\styfmt{glossaries-prefix}},
  category={command}
}

@index{dgls,
  name={\csfmt{dgls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={intended for documents with a mixture of 
   single and dual entries, this is like \cs{gls} but tries to 
   determine the label prefix from the label prefix list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsxtraddlabelprefix,glsxtrprependlabelprefix},
  category={command}
}

@index{dglspl,
  name={\csfmt{dglspl}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={intended for documents with a mixture of 
   single and dual entries, this is like \cs{glspl} but tries to 
   determine the label prefix from the label prefix list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsxtraddlabelprefix,glsxtrprependlabelprefix},
  category={command}
}

@index{dGls,
  name={\csfmt{dGls}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={intended for documents with a mixture of 
   single and dual entries, this is like \cs{Gls} but tries to 
   determine the label prefix from the label prefix list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsxtraddlabelprefix,glsxtrprependlabelprefix},
  category={command}
}

@index{dGlspl,
  name={\csfmt{dGlspl}},
  user1={\oargm{options}\margm{label}\oargm{insert}},
  description={intended for documents with a mixture of 
   single and dual entries, this is like \cs{Glspl} but tries to 
   determine the label prefix from the label prefix list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsxtraddlabelprefix,glsxtrprependlabelprefix},
  category={command}
}

@index{glsxtraddlabelprefix,
  name={\csfmt{gls\-xtr\-add\-label\-prefix}},
  user1={\margm{prefix}},
  description={appends \meta{prefix} to the prefix label list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={dgls,glsxtrprependlabelprefix,glsxtrclearlabelprefixes},
  category={command}
}

@index{glsxtrprependlabelprefix,
  name={\csfmt{gls\-xtr\-prepend\-label\-prefix}},
  user1={\margm{prefix}},
  description={prepends \meta{prefix} to the prefix label list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={dgls,glsxtraddlabelprefix,glsxtrclearlabelprefixes},
  category={command}
}

@index{glsxtrclearlabelprefixes,
  name={\csfmt{gls\-xtr\-clear\-label\-prefixes}},
  user1={\margm{prefix}},
  description={clears the prefix label list},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsxtraddlabelprefix,glsxtrprependlabelprefix},
  category={command}
}

@index{glssetwidest,
  name={\csfmt{gls\-set\-widest}},
  user1={\oargm{level}\margm{text}},
  description={used with the \glostyle{alttree} style to set the
   widest entry name for the given level},
  note={\styfmt{glossary-tree}},
  category={command}
}

@index{glsxtrSetWidest,
  name={\csfmt{gls\-xtr\-Set\-Widest}},
  user1={\margm{type}\margm{level}\margm{text}},
  description={used by \csref{bibglssetwidest} to set the
   widest entry name for the given level for the \glostyle{alttree}
   style and the styles provided by \sty{glossary-longextra}},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glssetwidest,glslongextraSetWidest},
  category={command}
}

@index{glsxtrSetWidestFallback,
  name={\csfmt{gls\-xtr\-Set\-Widest\-Fallback}},
  user1={\margm{max depth}\margm{list}},
  description={used by \csref{bibglssetwidesttoplevelfallback} and
   \csref{bibglssetwidestfallback} to set the
   widest entry name for the \glostyle{alttree}
   style and the styles provided by \sty{glossary-longextra}
   using the commands provided by \sty{glossaries-extra-stylemods}},
  note={\styfmt{glossaries-extra-bib2gls} v1.37+},
  seealso={glsFindWidestTopLevelName,glsFindWidestLevelTwo},
  category={command}
}

@index{glslongextraSetWidest,
  name={\csfmt{gls\-long\-extra\-Set\-Widest}},
  user1={\margm{text}},
  description={used with the styles provided by the
  \sty{glossary-longextra} package to set the
   widest entry name},
  note={\styfmt{glossary-longextra} v1.37+},
  seealso={glslongextraUpdateWidest},
  category={command}
}

@index{glslongextraUpdateWidest,
  name={\csfmt{gls\-long\-extra\-Update\-Widest}},
  user1={\margm{text}},
  description={as \cs{glslongextraSetWidest} but only sets if \meta{text} is
  wider than the current value},
  note={\styfmt{glossary-longextra} v1.37+},
  category={command}
}

@index{glsupdatewidest,
  name={\csfmt{gls\-update\-widest}},
  user1={\oargm{level}\margm{text}},
  description={as \cs{glssetwidest} but only sets if \meta{text} is
wider than the current value},
  note={\styfmt{glossaries-extra-stylemods} v1.23+},
  seealso={glssetwidest,eglsupdatewidest},
  category={command}
}

@index{eglsupdatewidest,
  name={\csfmt{egls\-update\-widest}},
  user1={\oargm{level}\margm{text}},
  description={as \cs{glsupdatewidest} but expands \meta{text}},
  note={\styfmt{glossaries-extra-stylemods} v1.23+},
  seealso={glssetwidest,glsupdatewidest},
  category={command}
}

@index{glsFindWidestTopLevelName,
  name={\csfmt{gls\-Find\-Widest\-Top\-Level\-Name}},
  user1={\oargm{glossary list}},
  description={CamelCase synonym for \cs{glsfindwidesttoplevelname}},
  note={\styfmt{glossaries-extra-stylemods}},
  seealso={glsfindwidesttoplevelname},
  category={command}
}

@index{glsfindwidesttoplevelname,
  name={\csfmt{gls\-find\-widest\-top\-level\-name}},
  user1={\oargm{glossary list}},
  description={finds the widest top-level name in the given
glossaries},
  note={\styfmt{glossary-tree}},
  category={command}
}

@index{glsFindWidestLevelTwo,
  name={\csfmt{gls\-Find\-Widest\-Level\-Two}},
  user1={\oargm{glossary list}},
  description={finds the widest name in the given glossaries
   for the top level and first two sub-levels},
  note={\styfmt{glossaries-extra-stylemods}},
  seealso={glsfindwidesttoplevelname},
  category={command}
}

@index{glsxtrbookindexname,
  name={\csfmt{glsxtr\-book\-index\-name}},
  user1={\margm{label}},
  description={used with the \glostyle{bookindex} style to
   format the entry's name},
  note={\styfmt{glossary-bookindex}},
  category={command}
}

@index{glsxtrbookindexprelocation,
  name={\csfmt{glsxtr\-book\-index\-pre\-location}},
  user1={\margm{label}},
  description={used with the \glostyle{bookindex} style before the
location list},
  note={\styfmt{glossary-bookindex}},
  category={command}
}

@index{glsxtrprelocation,
  name={\csfmt{glsxtr\-pre\-location}},
  user1={},
  description={used before the location list in the
   \glostyle{bookindex} style and the styles patched by 
   \styfmt{glossaries-extra-stylemods}},
  note={\styfmt{glossary-bookindex} v1.21+ and
   \styfmt{glossaries-extra-stylemods} v1.21+},
  category={command}
}

@index{glsabbrvscfont,
  name={\csfmt{gls\-abbrv\-sc\-font}},
  user1={\margm{text}},
  description={used with \qt{sc} abbreviation styles to format the
short form using \cs{textsc}},
  note={\styfmt{glossaries-extra} v1.17+},
  category={command}
}

@index{glsxtrifinmark,
  name={\csfmt{gls\-xtr\-if\-in\-mark}},
  user1={\margm{true}\margm{true}},
  description={used by commands like \cs{glsfmtshort}, this expands
to \meta{true} in page headings and the table of contents, 
  otherwise it expands to \meta{false}},
  note={\styfmt{glossaries-extra} v1.07+},
  category={command}
}

@index{glsxtrRevertTocMarks,
  name={\csfmt{gls\-xtr\-Revert\-Toc\-Marks}},
  description={restores original behaviour of \cs{tableofcontents}
  so that \cs{glsxtrifinmark} expands to \meta{false} in the table
of contents},
  note={\styfmt{glossaries-extra} v1.07+},
  category={command}
}

@index{glstreenamefmt,
  name={\csfmt{gls\-tree\-name\-fmt}},
  user1={\margm{text}},
  description={used with the tree styles to format the entry's name},
  note={\styfmt{glossary-tree} v4.08+ and 
\styfmt{glossaries-extra-stylemods} v1.31+},
  seealso={glstreegroupheaderfmt,glstreenavigationfmt,glstreedefaultnamefmt},
  category={command}
}

@index{glstreegroupheaderfmt,
  name={\csfmt{gls\-tree\-group\-header\-fmt}},
  user1={\margm{text}},
  description={used with the tree styles to format the group
headings},
  note={\styfmt{glossary-tree} v4.22+ and 
  \styfmt{glossaries-extra-stylemods} v1.31+},
  category={command}
}

@index{glstreenavigationfmt,
  name={\csfmt{gls\-tree\-navigation\-fmt}},
  user1={\margm{text}},
  description={used with the tree styles to format the navigation
elements},
  note={\styfmt{glossary-tree} v4.22+ and 
  \styfmt{glossaries-extra-stylemods} v1.31+},
  category={command}
}

@index{glstreedefaultnamefmt,
  name={\csfmt{gls\-tree\-default\-name\-fmt}},
  user1={\margm{text}},
  description={used as the default format for \cs{glstreenamefmt},
   \cs{glstreegroupheaderfmt} and \cs{glstreenavigationfmt}},
  note={\styfmt{glossaries-extra-stylemods} v1.31+},
  category={command}
}

@index{glsdescwidth,
  name={\csfmt{gls\-desc\-width}},
  user1={},
  description={length register used by the tabular styles to specify
the width of the description column},
  note={\styfmt{glossary-long} and
   \styfmt{glossary-super}},
  category={command}
}

@index{glsxtralttreeSymbolDescLocation,
  name={\csfmt{gls\-xtr\-alt\-tree\-Symbol\-Desc\-Location}},
  user1={\margm{label}\margm{location list}},
  description={used by the \glostyle{alttree} styles to format the
symbol, description and location},
  note={\styfmt{glossaries-extra-stylemods}},
  category={command}
}

@index{glsentrylong,
  name={\csfmt{gls\-entry\-long}},
  user1={\margm{label}},
  description={displays the long form without any formatting or
indexing},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glossentryname,
  name={\csfmt{gloss\-entry\-name}},
  user1={\margm{label}},
  description={used by glossary styles to display the name},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsnamefont,
  name={\csfmt{gls\-name\-font}},
  user1={\margm{text}},
  description={used by \cs{glossentryname} to format the name},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glossentrynameother,
  name={\csfmt{gloss\-entry\-name\-other}},
  user1={\margm{label}\margm{field}},
  description={acts like \ics{glossentryname} (obeys 
   \catattr{glossname} and \catattr{glossnamefont}
   or \cs{glsnamefont} and the post-name hook) but uses
   the given \meta{field} instead of the \field{name} field},
  note={\styfmt{glossaries-extra} v1.22+},
  category={command}
}

@index{glossentrydesc,
  name={\csfmt{gloss\-entry\-desc}},
  user1={\margm{label}},
  description={used by glossary styles to display the description},
  note={\styfmt{glossaries}},
  category={command}
}

@index{Glossentrydesc,
  name={\csfmt{Gloss\-entry\-desc}},
  user1={\margm{label}},
  description={like \cs{glossentrydesc} but converts the first
letter to uppercase},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glossentrysymbol,
  name={\csfmt{gloss\-entry\-symbol}},
  user1={\margm{label}},
  description={used by glossary styles to display the symbol},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glspostdescription,
  name={\csfmt{glspostdescription}},
  description={a hook added after the description in some glossary
styles (all if the \sty{glossaries-extra-stylemods} package is
loaded to patch them). This hook is used to reflect the
\styopt{nopostdot} package option for \sty{glossaries}
and the \styopt{postpunc} option for \sty{glossaries-extra}},
  note={\styfmt{glossaries} and modified by
\styfmt{glossaries-extra}},
  category={command}
}

@index{glsaccsupp,
  name={\csfmt{gls\-acc\-supp}},
  user1={\margm{accessible text}\margm{text}},
  description={used by the accessibility support to interface with
the \sty{accsupp} package},
  note={\styfmt{glossaries-accsupp}},
  category={command}
}

@index{forglsentries,
  name={\csfmt{for\-gls\-entries}},
  user1={\oargm{glossary-list}\margm{cs}\margm{body}},
  description={iterates over all entries defined in the listed
   glossaries and perform \meta{body} where you can use the
   control sequence \meta{cs} to reference the current label},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrforcsvfield,
  name={\csfmt{gls\-xtr\-for\-csv\-field}},
  user1={\margm{label}\margm{field}\margm{handler}},
  description={iterates over the comma-separated list
   in the given \meta{field} for the entry identified
   by \meta{label} and performs \meta{handler}\margm{element}
   on each element of the list, where \meta{handler} is
   a control sequence which takes a single argument},
  note={\styfmt{glossaries-extra} v1.24+},
  seealso={glsxtrendfor},
  category={command}
}

@index{glsxtrendfor,
  name={\csfmt{gls\-xtr\-end\-for}},
  user1={},
  description={may be used within the handler macro
   of \cs{glsxtrforcsvfield} to prematurely break the loop},
  note={\styfmt{glossaries-extra} v1.24+},
  seealso={glsxtrforcsvfield},
  category={command}
}

@index{TrackLocale,
  name={\csfmt{Track\-Locale}},
  user1={\margm{language tag}},
  description={tracks the given language tag},
  note={\styfmt{tracklang} v1.3+},
  category={command}
}

@index{GetTrackedDialectFromLanguageTag,
  name={\csfmt{Get\-Tracked\-Dialect\-From\-Language\-Tag}},
  user1={\margm{language tag}\margm{cs}},
  description={gets the \styfmt{tracklang} dialect label from the
given language tag and stores it in the command \meta{cs}. The
result will be empty if there's no tracked dialect associated with
the given language tag},
  note={\styfmt{tracklang} v1.3+},
  category={command}
}

@index{TrackedDialectClosestSubMatch,
  name={\csfmt{Tracked\-Dialect\-Closest\-Sub\-Match}},
  description={set by \cs{GetTrackedDialectFromLanguageTag}
  if an exact match isn't found but a partial match on the
  root language is found},
  note={\styfmt{tracklang} v1.3.6+},
  category={command}
}

@index{IfTrackedDialectHasMapping,
  name={\csfmt{If\-Tracked\-Dialect\-Has\-Mapping}},
  user1={\margm{tracklang label}\margm{true}\margm{false}},
  description={tests if the \styfmt{tracklang} dialect label has
been assigned a mapping to a language hook label},
  note={\styfmt{tracklang} v1.3+},
  category={command}
}

@index{GetTrackedDialectToMapping,
  name={\csfmt{Get\-Tracked\-Dialect\-To\-Mapping}},
  user1={\margm{tracklang label}},
  description={the language hook label corresponding to the given
\sty{tracklang} label},
  note={\styfmt{tracklang} v1.3+},
  category={command}
}

@index{glstextformat,
  name={\csfmt{glstextformat}},
  user1={\margm{text}},
  description={used by commands like \cs{gls} to format the 
  \idx{link-text}},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsxtrregularfont,
  name={\csfmt{gls\-xtr\-reg\-u\-lar\-font}},
  user1={\margm{text}},
  description={used by commands like \cs{gls} to format the 
  \idx{link-text} for regular terms},
  note={\styfmt{glossaries-extra} v1.04+},
  category={command}
}

@index{glsxtrabbreviationfont,
  name={\csfmt{gls\-xtr\-abbre\-vi\-a\-tion\-font}},
  user1={\margm{text}},
  description={used by commands like \cs{gls} to format the 
  \idx{link-text} for (non-regular) abbreviations},
  note={\styfmt{glossaries-extra} v1.30+},
  category={command}
}

@index{GlsXtrExpandedFmt,
  name={\csfmt{Gls\-Xtr\-Expanded\-Fmt}},
  user1={\margm{cs}\margm{text}},
  description={fully expands \meta{text} and then does
   \meta{cs}\margm{expanded text}},
  note={\styfmt{glossaries-extra} v1.30+},
  category={command}
}

@index{GlsXtrStartUnsetBuffering,
  name={\csfmt{Gls\-Xtr\-Start\-Unset\-Buffer\-ing}},
  description={starts buffering calls to \cs{glsunset}
   for use in code where the boolean switch causes a problem.
   The buffer can later be processed and cleared with
   \cs{GlsXtrStopUnsetBuffering}. The starred form
   (added to v1.31) avoids duplicate labels in the buffer's 
   internal list},
  note={\styfmt{glossaries-extra} v1.30+},
  category={command}
}

@index{GlsXtrStopUnsetBuffering,
  name={\csfmt{Gls\-Xtr\-Stop\-Unset\-Buffer\-ing}},
  description={unsets (locally with the starred form) 
    all the entry whose labels are stored in the
    buffer that was started with
   \cs{GlsXtrStartUnsetBuffering} and clears the buffer},
  note={\styfmt{glossaries-extra} v1.30+},
  category={command}
}

@index{GlsXtrForUnsetBufferedList,
  name={\csfmt{Gls\-Xtr\-For\-Unset\-Buffered\-List}},
  user1 = {\margm{cs}},
  description={iterates over 
    all the entry whose labels are stored in the
    buffer that was started with
   \cs{GlsXtrStartUnsetBuffering} and implements
   \meta{cs}\margm{label} at each iteration},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsunset,
  name={\csfmt{gls\-unset}},
  user1 = {\margm{label}},
  description={unsets the \idx{firstuseflag} so that the entry is
marked as having been used},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glsreset,
  name={\csfmt{gls\-reset}},
  user1 = {\margm{label}},
  description={resets the \idx{firstuseflag} so that the entry is
marked as not used},
  note={\styfmt{glossaries}},
  category={command}
}

@index{TrackLangLastTrackedDialect,
  name={\csfmt{Track\-Lang\-Last\-Tracked\-Dialect}},
  user1={},
  description={set by commands like \cs{TrackLocale}},
  note={\styfmt{tracklang}},
  category={command}
}

@index{TrackedLanguageFromDialect,
  name={\csfmt{Tracked\-Language\-From\-Dialect}},
  user1={\margm{dialect}},
  description={expands to the root language associated with the
given (\styfmt{tracklang}) dialect label},
  note={\styfmt{tracklang}},
  category={command}
}

@index{DTMdisplaydate,
  name={\csfmt{DTM\-display\-date}},
  user1={\margm{year}\margm{month}\margm{day}\margm{dow}},
  description={formats the given date where all arguments are
    numeric},
  note={\styfmt{datetime2}},
  category={command}
}

@index{DTLformatlist,
  name={\csfmt{DTL\-format\-list}},
  user1={\margm{list}},
  description={formats a comma-separated list},
  note={\styfmt{datatool-base}},
  category={command}
}

@index{DTLlistformatsep,
  name={\csfmt{DTL\-list\-format\-sep}},
  user1={},
  description={used by \ics{DTLformatlist} to separate items in the
list, except for the last pair},
  note={\styfmt{datatool-base}},
  seealso={DTLformatlist},
  category={command}
}

@index{DTLlistformatlastsep,
  name={\csfmt{DTL\-list\-format\-last\-sep}},
  user1={},
  description={used by \ics{DTLformatlist} to separate the last two items in the
list},
  note={\styfmt{datatool-base}},
  seealso={DTLformatlist},
  category={command}
}

@index{DTLlistformatoxford,
  name={\csfmt{DTL\-list\-format\-oxford}},
  user1={},
  description={insert before \ics{DTLlistformatlastsep} if the list
has three or more items},
  note={\styfmt{datatool-base}},
  seealso={DTLformatlist},
  category={command}
}

@index{DTLandname,
  name={\csfmt{DTL\-and\-name}},
  user1={},
  description={used in the definition of \ics{DTLlistformatlastsep}},
  note={\styfmt{datatool-base}},
  seealso={DTLformatlist},
  category={command}
}

@index{si,
  name={\csfmt{si}},
  user1={\margm{unit}},
  description={displays the unit with intelligent formatting},
  note={\styfmt{siunitx}},
  category={command}
}

@index{ce,
  name={\csfmt{ce}},
  user1={\margm{formula}},
  description={displays the chemical formula},
  note={\styfmt{mhchem}},
  category={command}
}

@index{MakeTextLowercase,
  name={\csfmt{MakeTextLowercase}},
  user1={\margm{text}},
  description={converts \meta{text} to lower case},
  note={\styfmt{textcase}},
  category={command}
}

@index{MakeTextUppercase,
  name={\csfmt{MakeTextUppercase}},
  user1={\margm{text}},
  description={converts \meta{text} to upper case},
  note={\styfmt{textcase}},
  category={command}
}

@index{NoCaseChange,
  name={\csfmt{NoCaseChange}},
  user1={\margm{text}},
  description={prevents \cs{MakeTextUppercase} and
   \cs{MakeTextLowercase} from converting \meta{text}},
  note={\styfmt{textcase}},
  category={command}
}

@index{MakeUppercase,
  name={\csfmt{MakeUppercase}},
  user1={\margm{text}},
  description={converts \meta{text} to upper case},
  note={kernel command},
  category={command}
}

@index{char,
  name={\csfmt{char}},
  user1={\meta{number}},
  description={accesses the character identified by \meta{number}},
  note={{}\TeX\ primitive},
  category={command}
}

@index{cs.string,
  name={\csfmt{string}},
  user1={\meta{token}},
  description={if \meta{token} is a control sequence it expands
   to the escape character followed by the control sequence name},
  note={{}\TeX\ primitive},
  category={command}
}

@index{let,
  name={\csfmt{let}},
  user1={\meta{token1}\meta{token2}},
  description={assigns \meta{token1} to \meta{token2}},
  note={{}\TeX\ primitive},
  category={command}
}

@index{u,
  name={\csfmt{u}},
  user1={\margm{character}},
  description={puts a breve accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{acute,
  name={\csfmt{'}},
  user1={\margm{character}},
  description={puts an acute accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{umlaut,
  name={\csfmt{"}},
  user1={\margm{character}},
  description={puts an umlaut accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{c,
  name={\csfmt{c}},
  user1={\margm{character}},
  description={puts a cedilla accent over \meta{character}},
  note={kernel command},
  category={command}
}

@index{AA,
  name={\csfmt{AA}},
  description={produces the \idx!{uppercase} A-ring character \AA},
  note={kernel command},
  category={command}
}

@index{aa,
  name={\csfmt{aa}},
  description={produces the \idx!{lowercase} a-ring character \aa},
  note={kernel command},
  category={command}
}

@index{O,
  name={\csfmt{O}},
  description={produces the \idx!{uppercase} O-slash character \O},
  note={kernel command},
  category={command}
}

@index{o,
  name={\csfmt{o}},
  description={produces the \idx!{lowercase} o-slash character \o},
  note={kernel command},
  category={command}
}

@index{L,
  name={\csfmt{L}},
  description={produces the \idx!{uppercase} L-slash character \L},
  note={kernel command},
  category={command}
}

@index{l,
  name={\csfmt{l}},
  description={produces the \idx!{lowercase} l-slash character \l},
  note={kernel command},
  category={command}
}

@index{ae,
  name={\csfmt{ae}},
  description={produces the \idx!{lowercase} \ae-ligature},
  note={kernel command},
  category={command}
}

@index{AE,
  name={\csfmt{AE}},
  description={produces the \idx!{uppercase} \AE-ligature},
  note={kernel command},
  category={command}
}

@index{oe,
  name={\csfmt{oe}},
  description={produces the \idx!{lowercase} \oe-ligature},
  note={kernel command},
  category={command}
}

@index{OE,
  name={\csfmt{OE}},
  description={produces the \idx!{uppercase} \OE-ligature},
  note={kernel command},
  category={command}
}

@index{th,
  name={\csfmt{th}},
  description={produces the \idx!{lowercase} thorn \th},
  note={kernel command},
  category={command}
}

@index{TH,
  name={\csfmt{TH}},
  description={produces the \idx!{uppercase} thorn \TH},
  note={kernel command},
  category={command}
}

@index{ss,
  name={\csfmt{ss}},
  description={produces the \idx!{lowercase} eszett \ss},
  note={kernel command},
  category={command}
}

@index{SS,
  name={\csfmt{SS}},
  description={produces the \idx!{uppercase} eszett \SS},
  note={kernel command},
  category={command}
}

@index{ng,
  name={\csfmt{ng}},
  description={produces the \idx!{lowercase} eng \ng},
  note={kernel command},
  category={command}
}

@index{NG,
  name={\csfmt{NG}},
  description={produces the \idx!{uppercase} eng \NG},
  note={kernel command},
  category={command}
}

@index{dh,
  name={\csfmt{dh}},
  description={produces the \idx!{lowercase} eth \dh},
  note={kernel command},
  category={command}
}

@index{DH,
  name={\csfmt{DH}},
  description={produces the \idx!{uppercase} eth \DH},
  note={kernel command},
  category={command}
}

@index{dj,
  name={\csfmt{dj}},
  description={produces the \idx!{lowercase} d-stroke \dj},
  note={kernel command},
  category={command}
}

@index{DJ,
  name={\csfmt{DJ}},
  description={produces the \idx!{uppercase} d-stroke \DJ},
  note={kernel command},
  category={command}
}

@index{textsuperscript,
  name={\csfmt{textsuperscript}},
  user1={\margm{text}},
  description={displays \meta{text} as a superscript},
  note={kernel command},
  category={command}
}

@index{textsubscript,
  name={\csfmt{textsubscript}},
  user1={\margm{text}},
  description={displays \meta{text} as a subscript},
  note={kernel command as from 2015/01/01},
  category={command}
}

@index{MakeLowercase,
  name={\csfmt{MakeLowercase}},
  user1={\margm{text}},
  description={converts \meta{text} to lower case},
  note={kernel command},
  category={command}
}

@index{textsc,
  name={\csfmt{textsc}},
  user1={\margm{text}},
  description={applies small-caps font to \meta{text}},
  note={kernel command},
  category={command}
}

@index{usepackage,
  name={\csfmt{use\-pack\-age}},
  user1={\oargm{options}\margm{name}\oargm{min version}},
  description={loads the package identified by \meta{name}},
  note={kernel command},
  category={command}
}

@index{RequirePackage,
  name={\csfmt{Require\-Pack\-age}},
  user1={\oargm{options}\margm{name}\oargm{min version}},
  description={loads the package identified by \meta{name} from
    within another package},
  note={kernel command},
  category={command}
}

@index{ProvidesPackage,
  name={\csfmt{Provides\-Pack\-age}},
  user1={\margm{name}\oargm{version}},
  description={identifies a package},
  note={kernel command},
  category={command}
}

@index{DeclareOption,
  name={\csfmt{Declare\-Opt\-ions}},
  user1={\margm{name}\margm{code}},
  description={declares an option with the given \meta{name}},
  note={kernel command},
  category={command}
}

@index{DeclareOption*,
  name={\csfmt{Declare\-Opt\-ions*}},
  user1={\margm{code}},
  description={indicates what to do with unknown options},
  note={kernel command},
  category={command}
}

@index{ProcessOptions,
  name={\csfmt{Process\-Opt\-ions}},
  description={processes supplied options},
  note={kernel command},
  category={command}
}

@index{PackageError,
  name={\csfmt{Pack\-age\-Err\-or}},
  user1={\margm{name}\margm{code}\margm{help}},
  description={generates an error message for the package identified
by \meta{name}},
  note={kernel command},
  category={command}
}

@index{cs.color,
  name={\csfmt{color}},
  user1={\oargm{model}\margm{spec}},
  description={switches the current font colour},
  note={\styfmt{color}},
  category={command}
}

@index{textcolor,
  name={\csfmt{textcolor}},
  user1={\oargm{model}\margm{spec}\margm{text}},
  description={typesets \meta{text} in the given colour},
  note={\styfmt{color}},
  category={command}
}

@index{cjkname,
  name={\csfmt{cjkname}},
  user1={\margm{CJK characters}},
  description={displays \meta{CJK characters} in the appropriate
   encoding},
  note={\styfmt{CJKutf8}},
  category={command}
}

@index{citation,
  name={\csfmt{citation}},
  user1={\margm{label}},
  description={written to the \ext{aux} file on each occurrence of
   \cs{cite}},
  note={kernel command},
  category={command}
}

@index{cite,
  name={\csfmt{cite}},
  user1={\margm{label}},
  description={cross-reference a bibliographic citation},
  note={kernel command},
  category={command}
}

@index{bibliography,
  name={\csfmt{bibliography}},
  user1={\margm{file list}},
  description={display bibliography created by \BibTeX},
  note={kernel command},
  category={command}
}

@index{refstepcounter,
  name={\csfmt{refstepcounter}},
  user1={\margm{counter name}},
  description={increments the given counter in a manner compatible
   with the \cs{label} cross-referencing mechanism},
  note={kernel command},
  category={command}
}

@index{label,
  name={\csfmt{label}},
  user1={\margm{id}},
  description={creates a label that can be referenced with \ics{ref}
or \ics{pageref}},
  seealso={ref,pageref},
  note={kernel command},
  category={command}
}

@index{pageref,
  name={\csfmt{pageref}},
  user1={\margm{id}},
  description={cross-reference the page where \cs{label}\margm{id}
occurred},
  note={kernel command},
  category={command}
}

@index{ref,
  name={\csfmt{ref}},
  user1={\margm{id}},
  description={cross-reference the location where \cs{label}\margm{id}
occurred},
  seealso={label},
  note={kernel command},
  category={command}
}

@index{autoref,
  name={\csfmt{autoref}},
  user1={\margm{id}},
  description={cross-reference with textual tag inferred from the
associated counter},
  seealso={label},
  note={\sty{hyperref}},
  category={command}
}

@index{par,
  name={\csfmt{par}},
  description={paragraph break},
  note={kernel command},
  category={command}
}

@index{hyperlink,
  name={\csfmt{hyperlink}},
  user1={\margm{target name}\margm{text}},
  description={create a hyperlink to \meta{target name} with the given
\meta{text}},
  note={\styfmt{hyperref}},
  category={command}
}

@index{hypertarget,
  name={\csfmt{hypertarget}},
  user1={\margm{target name}\margm{text}},
  description={create a hypertarget with the given \meta{target
name} and the displayed \meta{text}},
  note={\styfmt{hyperref}},
  category={command}
}

@index{cs.hyperref,
  name={\csfmt{hyperref}},
  note={\styfmt{hyperref}},
  category={command}
}

@index{cs.hyperref.ext,
  parent={cs.hyperref},
  name={\csfmt{hyperref}},
  user1={\margm{URL}\margm{category}\margm{name}\margm{text}},
  description={create a hyperlink to an external location with
  the anchor formed from \code{\meta{category}.\meta{name}} 
  and the displayed \meta{text}},
  category={command}
}

@index{cs.hyperref.int,
  parent={cs.hyperref},
  name={\csfmt{hyperref}},
  user1={\oargm{label}\margm{text}},
  description={create an internal hyperlink with 
  the displayed \meta{text} to the same place
  that \code{\cs{ref}\margm{label}} would be linked.
  Note that the \meta{label} argument isn't optional. The
  square bracket notation disambiguates from the
  syntax for the external form of \cs{cs.hyperref.ext}},
  category={command}
}

@index{@currentlabelname,
  name={\csfmt{@current\-label\-name}},
  user1={},
  description={used to store the current title information for the next instance
   of \cs{label}},
  note={\styfmt{hyperref}},
  category={command}
}

@index{@currentHref,
  name={\csfmt{@current\-H\-ref}},
  user1={},
  description={used to store the current anchor for the next instance
   of \cs{label}},
  note={\styfmt{hyperref}},
  category={command}
}


@index{glsrefentry,
  name={\csfmt{gls\-ref\-entry}},
  user1={\margm{label}},
  description={when used with \styopt{entrycounter} or
   \styopt{subentrycounter} may be used to cross-reference the
  entry's number in the glossary list with \cs{ref}},
  seealso={ref},
  note={\styfmt{glossaries} v3.0+},
  category={command}
}

@index{glsxtrpageref,
  name={\csfmt{gls\-xtr\-page\-ref}},
  user1={\margm{label}},
  description={when used with \styopt{entrycounter} or
   \styopt{subentrycounter} may be used to cross-reference the
  entry's number in the glossary list with \cs{pageref}},
  seealso={pageref},
  note={\styfmt{glossaries-extra} v1.11},
  category={command}
}

@index{glsxtrglossentry,
  name={\csfmt{gls\-xtr\-gloss\-entry}},
  user1={\margm{label}},
  description={displays the given entry name including a hypertarget (if
\sty{hyperref} has been loaded) as the destination for commands like
\cs{gls}},
  note={\styfmt{glossaries-extra} v1.21},
  category={command}
}

@index{glsxtrglossentryother,
  name={\csfmt{gls\-xtr\-gloss\-entry\-other}},
  user1={\margm{header}\margm{label}\margm{field}},
  description={like \gls{glsxtrglossentry} but uses the value given
in the supplied internal \meta{field} where \meta{header} is the
code
to use in the header (leave empty for default)},
  note={\styfmt{glossaries-extra} v1.22+},
  category={command}
}

@index{glsshowtarget,
  name={\csfmt{gls\-show\-target}},
  user1={\margm{label}},
  description={used to show the target name when the
\styopt[showtargets]{debug} option is on},
  note={\styfmt{glossaries} v4.32+},
  category={command}
}

@index{GlsEntryCounterLabelPrefix,
  name={\csfmt{Gls\-Entry\-Counter\-Label\-Prefix}},
  description={used as a prefix in the \cs{label} command
   automatically implemented by the \styopt{entrycounter}
    and \styopt{subentrycounter} options},
  note={\styfmt{glossaries} v4.38+},
  category={command}
}

@index{GlsXtrStandaloneGlossaryType,
  name={\csfmt{Gls\-Xtr\-Stand\-alone\-Glossary\-Type}},
  description={expands to the label for \gls{currentglossary}
   within \gls{glsxtrglossentry} and \gls{glsxtrglossentryother}},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{GlsXtrStandaloneSubEntryItem,
  name={\csfmt{Gls\-Xtr\-Stand\-alone\-Sub\-Entry\-Item}},
  user1 = {\margm{label}},
  description={used within \gls{glsxtrglossentry} and
\gls{glsxtrglossentryother} to display sub-item labels},
  note={\styfmt{glossaries-extra} v1.31+},
  category={command}
}

@index{glsresetentrycounter,
  name={\csfmt{gls\-reset\-entry\-counter}},
  description={resets the \counter{glossaryentry} counter if the
\styopt{entrycounter} setting is on},
  note={\styfmt{glossaries}},
  category={command}
}

@index{setupglossaries,
  name={\csfmt{set\-up\-glossaries}},
  user1 = {\margm{\keyvallist}},
  description={applies the base \styfmt{glossaries} options
  that are allowed to be changed after the package has loaded},
  note={\styfmt{glossaries}},
  category={command}
}

@index{glossariesextrasetup,
  name={\csfmt{glossaries\-extra\-setup}},
  user1 = {\margm{\keyvallist}},
  description={applies the extension \styfmt{glossaries-extra} options
  that are allowed to be changed after the package has loaded},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glstreepredesc,
  name={\csfmt{gls\-tree\-pre\-desc}},
  user1={\margm{label}},
  description={separator used before the description for the
   \glostyle{tree} styles},
  note={\styfmt{glossary-tree} v4.26+},
  category={command}
}

@index{glstreenonamedesc,
  name={\csfmt{gls\-tree\-no\-name\-desc}},
  user1={\margm{label}},
  description={displays the pre-description separator, the
   description and the post-description hook for the
   \glostyle{treenoname} styles},
  note={\styfmt{glossaries-extra-stylemods} v1.31+},
  category={command}
}

@index{glsfmtshort,
  name={\csfmt{gls\-fmt\-short}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the short form of the given abbreviation},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsfmtlong,
  name={\csfmt{gls\-fmt\-long}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the long form of the given abbreviation},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsfmtfull,
  name={\csfmt{gls\-fmt\-full}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the full form of the given abbreviation},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsfmtname,
  name={\csfmt{gls\-fmt\-name}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the given entry's name},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsfmtfirst,
  name={\csfmt{gls\-fmt\-first}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the given entry's \field{first} field},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{glsfmttext,
  name={\csfmt{gls\-fmt\-text}},
  user1={\margm{label}},
  description={provided for use in section or caption titles, this
displays the given entry's \field{text} field},
  note={\styfmt{glossaries-extra}},
  category={command}
}

@index{theHentrycounter,
  name={\csfmt{the\-H\-entry\-counter}},
  user1={},
  description={when indexing, this is set to the
   \csfmt{theH}\meta{counter} command corresponding to the 
   current indexing counter (or, if undefined, 
   \csfmt{the}\meta{counter})},
  note={\styfmt{glossaries}},
  category={command}
}

@index{tableofcontents,
  name={\csfmt{table\-of\-contents}},
  description={displays the table of contents (by reading in the
\ext{toc} file) and then opens \ext{toc} file to allow the
sectioning commands to write to it},
  note={kernel command},
  category={command}
}

@index{underline,
  name={\csfmt{under\-line}},
  user1={\margm{text}},
  description={underlines the given text},
  note={kernel command},
  category={command}
}

@index{ul,
  name={\csfmt{ul}},
  user1={\margm{text}},
  description={underlines the given text},
  note={\styfmt{soul}},
  category={command}
}

@index{ding,
  name={\csfmt{ding}},
  user1={\margm{number}},
  description={displays the symbol associated with the given number},
  note={\styfmt{pifont}},
  category={command}
}

@index{exampleterms,
  name = {example terms}
}

@entry{ex1.duck,
  parent={exampleterms},
  name={duck},
  description={a waterbird with webbed feet},
  identifier={animal}
}

@entry{ex1.goose,
  parent={exampleterms},
  name={goose},
  plural={geese},
  description={a large waterbird with a long neck, short legs,
   webbed feet and a short broad bill},
  identifier={animal}
}

@entry{ex2.duck,
  parent={exampleterms},
  name={Duck (noun)},
  first={duck (quack, quack)},
  firstplural={ducks (quack, quack)},
  text={duck},
  description={a waterbird with webbed feet},
  identifier={animal}
}

@entry{ex2.goose,
  parent={exampleterms},
  name={Goose (noun, pl.\ geese)},
  first={goose (honk, honk)},
  firstplural={geese (honk, honk)},
  text={goose},
  plural={geese},
  description={a large waterbird with a long neck, short legs,
   webbed feet and a short broad bill},
  identifier={animal}
}

@entry{ex.fleuron,
  parent={exampleterms},
  name = {fleuron},
  symbol = {\ding{167}},
  category = {ornament},
  description = {typographic ornament}
}

@entry{ex.pi,
  parent={exampleterms},
  name = {Archimedes' constant},
  symbol = {\ensuremath{\pi}},
  category = {constant},
  description = {ratio of a circle's circumference to its diameter}
}

@entry{ex.thetai,
  parent = {exampleterms},
  name = {theta parameter},
  symbol = {\ensuremath{\theta_i}},
  description = {one of the model parameters}
}

@abbreviation{ex.tug,
  parent={exampleterms},
  category = {longshortem},
  short = {TUG},
  long = {\TeX\ Users Group}
}

@abbreviation{ex.ascii,
  short = {ascii},
  long = {American Standard Code for Information Interchange},
  category={shortsc}
}

@abbreviation{ex.svm,
  parent={exampleterms},
  short = {SVM},
  long = {support vector machine}
}

@abbreviation{ex.ssl,
  parent={exampleterms},
  category = {markwordsexample},
  short = {SSL},
  long = {Secure Sockets Layer}
}

@abbreviation{ex.xml,
  parent={exampleterms},
  category = {taggingexample},
  short = {XML},
  long = {e\itag{x}tensible \itag{m}arkup \itag{l}anguage}
}

@abbreviation{ex.dante,
  parent={exampleterms},
  category = {discardperiodexample},
  short = {DANTE e.V.},
  long = {Deutschsprachige Anwendervereinigung \TeX\ e.V.}
}

@abbreviation{ex.gp,
  parent={exampleterms},
  category = {discardperiodexample},
  short = {G.P.},
  long = {General Practitioner}
}

@abbreviation{ex2.gp,
  parent={exampleterms},
  category = {initialism},
  short = {GP},
  long = {General Practitioner}
}

@abbreviation{ex.rna,
  parent={exampleterms},
  short = {RNA},
  long = {ribonukleins\"aure},
  user1 = {ribonucleic acid},
  category = {abbrvtrans}
}

@entry{ex.length,
  parent={exampleterms},
  name = {length},
  symbol = {\si{\metre}},
  description = {measurement between two points}
}

@entry{ex.area,
  parent={exampleterms},
  name = {area},
  symbol = {\si{\metre\squared}},
  description = {measurement of a surface}
}

@symbol{ex2.length,
  parent={exampleterms},
  description = {length},
  name = {\si{\metre}}
}

@symbol{ex2.area,
  parent={exampleterms},
  description = {area},
  name = {\si{\metre\squared}}
}

@symbol{ex.deriv,
  parent={exampleterms},
  description = {derivative},
  name = {\ensuremath{\derivfn{x}}},
  user1 = {derivfn}
}

@index{hom.bow1,
  name={bow},
  description={(rhymes with toe)},
  category = {homograph}
}

@entry{hom.bowknot,
  parent={hom.bow1},
  description = {a knot tied with two loops and loose ends},
  category = {homograph}
}

@entry{hom.bowweapon,
  parent={hom.bow1},
  description = {a weapon for shooting arrows, made of curved wood
  joined at both ends with taut string},
  category = {homograph}
}

@index{hom.bow2,
  name={bow},
  description={(rhymes with cow)},
  category = {homograph}
}

@index{hom.bowbend,
  parent={hom.bow2},
  description={bend head or upper body},
  category = {homograph}
}

@index{hom.bowpressure,
  parent={hom.bow2},
  description={give in to pressure},
  category = {homograph}
}

@index{hom.bow3,
  name={bow},
  description={(also bows) the front end of a ship},
  category = {homograph}
}

@index{hom.glossary,
  name={glossary},
  category = {homograph}
}

@entry{hom.glossarycol,
  parent = {hom.glossary},
  description = {collection of glosses},
  category = {homograph}
}

@entry{hom.glossarylist,
  parent = {hom.glossary},
  description = {list of technical words},
  category = {homograph}
}

@entry{hier.animal,
 name = {animal},
 description = {living organism with a nervous system and sense organs
    that can move independently},
 category = {hierarchical}
}

@entry{hier.bird,
 parent = {hier.animal},
 name = {bird},
 description = {warm-blooded egg-laying animal with feathers, wings 
   and a beak},
 category = {hierarchical}
}

@entry{hier.duck,
 parent = {hier.bird},
 name = {duck},
 description={a waterbird with webbed feet},
 category = {hierarchical}
}

@entry{hier.goose,
 parent = {hier.bird},
 name = {goose},
 description = {a large waterbird with a long neck, short legs,
   webbed feet and a short broad bill},
 category = {hierarchical}
}

@entry{hier.mineral,
 name = {mineral},
 description = {natural inorganic substance},
 category = {hierarchical}
}

@entry{hier.calcite,
 parent = {hier.mineral},
 name = {calcite},
 description = {a carbonate mineral},
 category = {hierarchical}
}

@entry{hier.quartz,
 parent = {hier.mineral},
 name = {quartz},
 description = {hard mineral consisting of silica},
 category = {hierarchical}
}

@entry{hier.amethyst,
 parent = {hier.quartz},
 name = {amethyst},
 description = {a purple type of quartz},
 category = {hierarchical}
}

@entry{hier.citrine,
 parent = {hier.quartz},
 name = {citrine},
 description = {a form of quartz with a colour ranging
from pale yellow to brown due to ferric impurities},
 category = {hierarchical}
}

@entry{ex2.amethyst,
 name = {amethyst},
 description = {a purple type of quartz},
 symbol = {\ce{SiO2}},
 user3={A},
 user4={A},
 category = {standalone}
}

@entry{ex3.goose,
  name={goose},
  user3={G},
  user4={G},
  plural={geese},
  description={a large waterbird with a long neck, short legs,
   webbed feet and a short broad bill},
  category={standalone}
}

@entry{ex3.duck,
  name={duck},
  user3={D},
  user4={D},
  description={a waterbird with webbed feet},
  category={standalone}
}

@entry{standalone.pi,
  name = {\ensuremath{\pi}},
  description = {Archimedes' constant},
  user3={glssymbols},
  user4={greek},
  category = {standalone}
}

@entry{standalone.area,
  name = {\ensuremath{A}},
  description = {area},
  user3={glssymbols},
  user4={A},
  category = {standalone}
}

@entry{standalone.radius,
  name = {\ensuremath{r}},
  description = {radius},
  user3={glssymbols},
  user4={R},
  category = {standalone}
}

@entry{standalone.circumference,
  name = {\ensuremath{C}},
  user3={glssymbols},
  user4={C},
  description = {circumference},
  category = {standalone}
}

